[{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\app.controller.spec.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":5,"column":1,"nodeType":"Identifier","messageId":"unsafeCall","endLine":5,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":8,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":8,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":17,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":17,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":18,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":18,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":19,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":19,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":19,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":19,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBe on an `error` typed value.","line":19,"column":40,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":19,"endColumn":44}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let appController: AppController;\n\n  beforeEach(async () => {\n    const app: TestingModule = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n\n    appController = app.get<AppController>(AppController);\n  });\n\n  describe('root', () => {\n    it('should return \"Hello World!\"', () => {\n      expect(appController.getHello()).toBe('Hello World!');\n    });\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\app.controller.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\app.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\app.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\common\\decorators\\current-user.decorator.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":5,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":5,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":6,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":6,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":6,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":6,"endColumn":24}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nexport const CurrentUser = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n);\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\common\\decorators\\roles.decorator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\common\\enums.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\common\\filters\\global-exception.filter.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":24,"column":32,"nodeType":"CallExpression","messageId":"unsafeReturn","endLine":24,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ [s: string]: unknown; } | ArrayLike<unknown>`.","line":27,"column":47,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":27,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":29,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":29,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":44,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":49,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":46,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":46,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":49,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":49,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":51,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":51,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stack on an `any` value.","line":51,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":51,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":55,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":55,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .errorLog on an `any` value.","line":56,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":56,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":57,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":57,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .errorLog on an `any` value.","line":57,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":57,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":63,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":63,"endColumn":18},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":67,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":67,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":67,"column":39,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":71,"column":15,"nodeType":"Property","messageId":"anyAssignment","endLine":71,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":72,"column":15,"nodeType":"Property","messageId":"anyAssignment","endLine":72,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":73,"column":15,"nodeType":"Property","messageId":"anyAssignment","endLine":73,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":79,"column":55,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":79,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":84,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":84,"endColumn":61}],"suppressedMessages":[],"errorCount":19,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { PrismaService } from '../../prisma/prisma.service';\n\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n  constructor(private readonly prisma: PrismaService) {}\n\n  private sanitize(obj: any): any {\n    if (!obj || typeof obj !== 'object') return obj;\n    const sensitiveKeys = new Set([\n      'password',\n      'newPassword',\n      'currentPassword',\n      'token',\n    ]);\n    if (Array.isArray(obj)) {\n      return obj.map((item) => this.sanitize(item));\n    }\n    const clone: Record<string, any> = {};\n    for (const [key, value] of Object.entries(obj)) {\n      if (sensitiveKeys.has(key)) continue;\n      clone[key] = typeof value === 'object' ? this.sanitize(value) : value;\n    }\n    return clone;\n  }\n\n  async catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const request = ctx.getRequest<Request>();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException\n        ? (exception.getResponse() as any)?.message ||\n          exception.message ||\n          'Error'\n        : exception?.message || 'Internal server error';\n\n    const stack = exception?.stack;\n\n    // Attempt to persist error log (ignore failures to avoid masking original error)\n    try {\n      const prismaAny = this.prisma as any;\n      if (prismaAny?.errorLog?.create) {\n        await prismaAny.errorLog.create({\n          data: {\n            level: status >= 500 ? 'ERROR' : 'WARN',\n            message: Array.isArray(message)\n              ? message.join(', ')\n              : String(message),\n            stack,\n            statusCode: status,\n            method: request.method,\n            path: request.url,\n            userId: (request as any)?.user?.id ?? null,\n            context: {\n              ip: request.ip,\n              userAgent: request.headers['user-agent'],\n              params: this.sanitize(request.params),\n              query: this.sanitize(request.query),\n              body: this.sanitize(request.body),\n            },\n          },\n        });\n      }\n    } catch (e) {\n      console.error('Failed to persist ErrorLog:', e?.message || e);\n    }\n\n    const payload: any = {\n      statusCode: status,\n      message: Array.isArray(message) ? message[0] : message,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    };\n\n    response.status(status).json(payload);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\main.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":22,"column":9,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":22,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .set on an `any` value.","line":23,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":23,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":23,"column":22,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":23,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .set on an `any` value.","line":23,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":23,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":24,"column":11,"nodeType":"Identifier","messageId":"unsafeCall","endLine":24,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":25,"column":9,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":30,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":25,"column":19,"nodeType":"Identifier","messageId":"unsafeCall","endLine":25,"endColumn":28},{"ruleId":"@typescript-eslint/no-floating-promises","severity":1,"message":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","line":81,"column":1,"nodeType":"ExpressionStatement","messageId":"floatingVoid","endLine":81,"endColumn":13,"suggestions":[{"messageId":"floatingFixVoid","fix":{"range":[2754,2754],"text":"void "},"desc":"Add void operator to ignore."},{"messageId":"floatingFixAwait","fix":{"range":[2754,2754],"text":"await "},"desc":"Add await operator."}]}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import 'reflect-metadata';\n// Preload iconv-lite encodings to avoid rare \"Cannot find module '../encodings'\" errors\n// that can occur when raw-body/body-parser triggers a lazy require in certain environments.\nimport 'iconv-lite/encodings';\nimport { NestFactory } from '@nestjs/core';\nimport { ValidationPipe } from '@nestjs/common';\nimport { AppModule } from './app.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { GlobalExceptionFilter } from './common/filters/global-exception.filter';\nimport helmet from 'helmet';\nimport compression from 'compression';\nimport rateLimit from 'express-rate-limit';\nimport * as express from 'express';\nimport { join } from 'path';\n\nasync function bootstrap() {\n  // Enable rawBody for Stripe webhooks verification (available at /api/webhooks/stripe)\n  const app = await NestFactory.create(AppModule, { rawBody: true });\n  app.enableShutdownHooks();\n  // Trust proxy (Railway/Netlify/other PaaS)\n  const httpAdapter = app.getHttpAdapter();\n  const instance: any = httpAdapter.getInstance?.() ?? (httpAdapter as any);\n  if (instance?.set) instance.set('trust proxy', 1);\n  app.use(compression());\n  const limiter = rateLimit({\n    windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS || '900000', 10), // 15 minutes\n    max: parseInt(process.env.RATE_LIMIT_MAX || '300', 10), // limit each IP per window\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n  app.use(limiter);\n\n  // Enable CORS\n  const allowedOrigins = process.env.FRONTEND_ORIGINS?.split(',')\n    .map((s) => s.trim())\n    .filter(Boolean) || [\n    'http://localhost:3000',\n    'http://localhost:3002',\n    'http://127.0.0.1:3000',\n    'http://127.0.0.1:3002',\n  ];\n\n  app.enableCors({\n    origin: allowedOrigins,\n    credentials: true,\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n  });\n\n  // Security middleware (allow cross-origin loading of assets like images)\n  app.use(\n    helmet({\n      crossOriginResourcePolicy: { policy: 'cross-origin' },\n    }),\n  );\n\n  // Global prefix\n  app.setGlobalPrefix('api');\n\n  // Static file serving for uploaded assets\n  app.use('/uploads', express.static(join(process.cwd(), 'uploads')));\n\n  // Global validation pipe\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n      transform: true,\n      transformOptions: { enableImplicitConversion: true },\n      forbidUnknownValues: false,\n    }),\n  );\n\n  // Global exception filter for error logging\n  const prisma = app.get(PrismaService);\n  app.useGlobalFilters(new GlobalExceptionFilter(prisma));\n\n  const port = process.env.PORT || 3001;\n  await app.listen(port);\n  console.log(`Backend server running on http://localhost:${port}`);\n}\nbootstrap();\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\admin\\admin.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":69,"column":46,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":69,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":69,"column":52,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":69,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":74,"column":47,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":74,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":74,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":74,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":79,"column":45,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":79,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":79,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":79,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":88,"column":57,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":88,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":88,"column":63,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":88,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":127,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":127,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `\"welcome\" | \"invoice\" | \"payment-reminder\" | \"payment-received\" | \"password-reset\" | \"verify-email\"`.","line":128,"column":46,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":128,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":163,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":163,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":163,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":163,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":168,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":168,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .enabled on an `any` value.","line":168,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":168,"endColumn":37}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  UseGuards,\n  Query,\n  BadRequestException,\n} from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { Roles } from '../../common/decorators/roles.decorator';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport { UpdateUserByAdminDto } from './dto/update-user.dto';\nimport { UserRole } from '../../common/enums';\nimport { ResetUserPasswordDto } from './dto/reset-user-password.dto';\nimport { EmailService } from '../email/email.service';\n\n@Controller('admin')\n@UseGuards(JwtAuthGuard, RolesGuard)\n@Roles(UserRole.ADMIN, UserRole.SUPER_ADMIN)\nexport class AdminController {\n  constructor(\n    private readonly adminService: AdminService,\n    private readonly emailService: EmailService,\n  ) {}\n\n  @Get('dashboard')\n  getDashboardStats() {\n    return this.adminService.getDashboardStats();\n  }\n\n  @Get('users')\n  getAllUsers(\n    @Query('search') search?: string,\n    @Query('role') role?: UserRole,\n    @Query('subscriptionPlan') subscriptionPlan?: string,\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n  ) {\n    return this.adminService.getAllUsers({\n      search,\n      role,\n      subscriptionPlan,\n      page: page ? parseInt(page) : undefined,\n      limit: limit ? parseInt(limit) : undefined,\n    });\n  }\n\n  @Get('users/:id')\n  getUserDetails(@Param('id') id: string) {\n    return this.adminService.getUserDetails(id);\n  }\n\n  @Put('users/:id')\n  updateUser(\n    @Param('id') id: string,\n    @Body() updateUserDto: UpdateUserByAdminDto,\n  ) {\n    return this.adminService.updateUser(id, updateUserDto);\n  }\n\n  @Post('users/:id/suspend')\n  suspendUser(@Param('id') id: string, @CurrentUser() admin) {\n    return this.adminService.suspendUser(id, admin.id);\n  }\n\n  @Post('users/:id/activate')\n  activateUser(@Param('id') id: string, @CurrentUser() admin) {\n    return this.adminService.activateUser(id, admin.id);\n  }\n\n  @Delete('users/:id')\n  deleteUser(@Param('id') id: string, @CurrentUser() admin) {\n    return this.adminService.deleteUser(id, admin.id);\n  }\n\n  @Post('users/:id/reset-password')\n  resetUserPassword(\n    @Param('id') id: string,\n    @Body() dto: ResetUserPasswordDto,\n    @CurrentUser() admin,\n  ) {\n    return this.adminService.resetUserPassword(id, dto, admin.id);\n  }\n\n  @Get('settings')\n  getSystemSettings() {\n    return this.adminService.getSystemSettings();\n  }\n\n  @Put('settings')\n  updateSystemSettings(@Body() data: any) {\n    return this.adminService.updateSystemSettings(data);\n  }\n\n  // SMTP testing endpoints\n  @Post('settings/test-smtp')\n  testSmtp(@Body() overrides: Record<string, any> = {}) {\n    return this.emailService.verifySmtp(overrides);\n  }\n\n  @Post('settings/test-email')\n  async testEmail(\n    @Body() body: { to?: string; overrides?: Record<string, any> },\n  ) {\n    const to = body?.to?.trim();\n    if (!to) throw new BadRequestException('Recipient email (to) is required');\n    return this.emailService.sendTestEmail(to, body?.overrides || {});\n  }\n\n  @Post('settings/test-invoice-email')\n  async testInvoiceEmail(\n    @Body() body: { to?: string; overrides?: Record<string, any> },\n  ) {\n    const to = body?.to?.trim();\n    if (!to) throw new BadRequestException('Recipient email (to) is required');\n    return this.emailService.sendTestInvoiceEmail(to, body?.overrides || {});\n  }\n\n  @Get('settings/email-preview')\n  async previewEmail(@Query('type') type?: string) {\n    const t = (type as any) || 'welcome';\n    return this.emailService.previewTemplate(t);\n  }\n\n  @Get('activity-logs')\n  getActivityLogs(\n    @Query('userId') userId?: string,\n    @Query('action') action?: string,\n    @Query('startDate') startDate?: string,\n    @Query('endDate') endDate?: string,\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n  ) {\n    return this.adminService.getActivityLogs({\n      userId,\n      action,\n      startDate: startDate ? new Date(startDate) : undefined,\n      endDate: endDate ? new Date(endDate) : undefined,\n      page: page ? parseInt(page) : undefined,\n      limit: limit ? parseInt(limit) : undefined,\n    });\n  }\n\n  @Get('invoice-statistics')\n  getInvoiceStatistics() {\n    return this.adminService.getInvoiceStatistics();\n  }\n\n  // System Management: Backup & Maintenance\n  @Get('backup/status')\n  getBackupStatus() {\n    return this.adminService.getBackupStatus();\n  }\n\n  @Post('backup/run')\n  runBackup(@CurrentUser() admin) {\n    return this.adminService.triggerBackup(admin.id);\n  }\n\n  @Post('maintenance')\n  setMaintenance(@Body() body: { enabled?: boolean | string | number }) {\n    const v = (body as any)?.enabled;\n    const enabled = v === true || v === 'true' || v === 1 || v === '1';\n    return this.adminService.setMaintenanceMode(enabled);\n  }\n\n  @Get('error-logs')\n  getErrorLogs(\n    @Query('search') search?: string,\n    @Query('level') level?: string,\n    @Query('statusCode') statusCode?: string,\n    @Query('method') method?: string,\n    @Query('path') path?: string,\n    @Query('startDate') startDate?: string,\n    @Query('endDate') endDate?: string,\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n  ) {\n    return this.adminService.getErrorLogs({\n      search,\n      level,\n      statusCode: statusCode ? parseInt(statusCode) : undefined,\n      method,\n      path,\n      startDate: startDate ? new Date(startDate) : undefined,\n      endDate: endDate ? new Date(endDate) : undefined,\n      page: page ? parseInt(page) : undefined,\n      limit: limit ? parseInt(limit) : undefined,\n    });\n  }\n\n  @Delete('error-logs/:id')\n  deleteErrorLog(@Param('id') id: string) {\n    return this.adminService.deleteErrorLog(id);\n  }\n\n  @Delete('error-logs')\n  clearErrorLogs(@Query('olderThanDays') olderThanDays?: string) {\n    return this.adminService.clearErrorLogs(\n      olderThanDays ? parseInt(olderThanDays) : undefined,\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\admin\\admin.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\admin\\admin.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .OR on an `any` value.","line":92,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":92,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .role on an `any` value.","line":101,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":101,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .subscriptionPlan on an `any` value.","line":105,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":105,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":110,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":110,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":136,"column":32,"nodeType":"Property","messageId":"anyAssignment","endLine":136,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ [s: string]: unknown; } | ArrayLike<unknown>`.","line":433,"column":36,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":433,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":440,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":440,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .EMAIL_PROVIDER on an `any` value.","line":455,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":455,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":576,"column":24,"nodeType":"Property","messageId":"anyAssignment","endLine":576,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":577,"column":19,"nodeType":"Property","messageId":"anyAssignment","endLine":577,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .userId on an `any` value.","line":599,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":599,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .action on an `any` value.","line":603,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":603,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .createdAt on an `any` value.","line":607,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":607,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":615,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":615,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":629,"column":39,"nodeType":"Property","messageId":"anyAssignment","endLine":629,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .level on an `any` value.","line":660,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":660,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .statusCode on an `any` value.","line":661,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":661,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .method on an `any` value.","line":662,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":662,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .path on an `any` value.","line":663,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":663,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .OR on an `any` value.","line":665,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":665,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .createdAt on an `any` value.","line":671,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":671,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":674,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":674,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe array destructuring of a tuple element with an `any` value.","line":675,"column":12,"nodeType":"Identifier","messageId":"unsafeArrayPatternFromTuple","endLine":675,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe array destructuring of a tuple element with an `any` value.","line":675,"column":18,"nodeType":"Identifier","messageId":"unsafeArrayPatternFromTuple","endLine":675,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":676,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":676,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .errorLog on an `any` value.","line":676,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":676,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":677,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":677,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":682,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":682,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .errorLog on an `any` value.","line":682,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":682,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":682,"column":34,"nodeType":"Property","messageId":"anyAssignment","endLine":682,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":686,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":686,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":690,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":690,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":697,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":697,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":699,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":699,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .errorLog on an `any` value.","line":699,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":699,"endColumn":31},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":701,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":701,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":707,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":707,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .createdAt on an `any` value.","line":712,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":712,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":714,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":714,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":714,"column":23,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":714,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .errorLog on an `any` value.","line":714,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":714,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":714,"column":55,"nodeType":"Property","messageId":"anyAssignment","endLine":714,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":715,"column":45,"nodeType":"Property","messageId":"anyAssignment","endLine":715,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .count on an `any` value.","line":715,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":715,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":773,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":773,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .amount on an `error` typed value.","line":804,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":804,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":822,"column":42,"nodeType":"Property","messageId":"anyAssignment","endLine":822,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":823,"column":19,"nodeType":"Property","messageId":"anyAssignment","endLine":823,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":827,"column":42,"nodeType":"Property","messageId":"anyAssignment","endLine":827,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":828,"column":19,"nodeType":"Property","messageId":"anyAssignment","endLine":828,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":832,"column":44,"nodeType":"Property","messageId":"anyAssignment","endLine":832,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":833,"column":19,"nodeType":"Property","messageId":"anyAssignment","endLine":833,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":866,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":866,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":867,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":867,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":868,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":868,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":876,"column":41,"nodeType":"Property","messageId":"anyAssignment","endLine":876,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":877,"column":17,"nodeType":"Property","messageId":"anyAssignment","endLine":877,"endColumn":38}],"suppressedMessages":[],"errorCount":56,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  NotFoundException,\n  ForbiddenException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { UpdateUserByAdminDto } from './dto/update-user.dto';\nimport { UserRole } from '../../common/enums';\nimport { ResetUserPasswordDto } from './dto/reset-user-password.dto';\nimport * as bcrypt from 'bcryptjs';\n\n@Injectable()\nexport class AdminService {\n  constructor(private prisma: PrismaService) {}\n\n  async getDashboardStats() {\n    const [\n      totalUsers,\n      activeUsers,\n      totalInvoices,\n      totalRevenue,\n      totalClients,\n      systemSettings,\n    ] = await Promise.all([\n      // Total users\n      this.prisma.user.count(),\n\n      // Active users (logged in last 30 days)\n      this.prisma.user.count({\n        where: {\n          lastLogin: {\n            gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\n          },\n        },\n      }),\n\n      // Total invoices system-wide\n      this.prisma.invoice.count(),\n\n      // Total revenue system-wide\n      this.prisma.invoice.aggregate({\n        where: { status: 'PAID' },\n        _sum: { totalAmount: true },\n      }),\n\n      // Total clients system-wide\n      this.prisma.client.count(),\n\n      // System settings (key/value aggregate)\n      this.getSystemSettings(),\n    ]);\n\n    // Subscription distribution\n    const subscriptionStats = await this.prisma.user.groupBy({\n      by: ['subscriptionPlan'],\n      _count: { subscriptionPlan: true },\n    });\n\n    // Monthly growth\n    const monthlyGrowth = await this.getMonthlyUserGrowth();\n\n    return {\n      totalUsers,\n      activeUsers,\n      totalInvoices,\n      totalRevenue: totalRevenue._sum.totalAmount || 0,\n      totalClients,\n      subscriptionStats: subscriptionStats.map((stat) => ({\n        plan: stat.subscriptionPlan,\n        count: stat._count.subscriptionPlan,\n      })),\n      monthlyGrowth,\n      systemSettings,\n    };\n  }\n\n  async getAllUsers(query?: {\n    search?: string;\n    role?: UserRole;\n    subscriptionPlan?: string;\n    page?: number;\n    limit?: number;\n  }) {\n    const page = query?.page || 1;\n    const limit = query?.limit || 20;\n    const skip = (page - 1) * limit;\n\n    const where: any = {};\n\n    if (query?.search) {\n      where.OR = [\n        { email: { contains: query.search, mode: 'insensitive' } },\n        { firstName: { contains: query.search, mode: 'insensitive' } },\n        { lastName: { contains: query.search, mode: 'insensitive' } },\n        { companyName: { contains: query.search, mode: 'insensitive' } },\n      ];\n    }\n\n    if (query?.role) {\n      where.role = query.role;\n    }\n\n    if (query?.subscriptionPlan) {\n      where.subscriptionPlan = query.subscriptionPlan;\n    }\n\n    const [users, total] = await Promise.all([\n      this.prisma.user.findMany({\n        where,\n        skip,\n        take: limit,\n        select: {\n          id: true,\n          email: true,\n          firstName: true,\n          lastName: true,\n          companyName: true,\n          role: true,\n          subscriptionPlan: true,\n          subscriptionEnd: true,\n          invoiceLimit: true,\n          emailVerified: true,\n          isActive: true,\n          createdAt: true,\n          lastLogin: true,\n          _count: {\n            select: {\n              invoices: true,\n              clients: true,\n            },\n          },\n        },\n        orderBy: { createdAt: 'desc' },\n      }),\n      this.prisma.user.count({ where }),\n    ]);\n\n    return {\n      users,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages: Math.ceil(total / limit),\n      },\n    };\n  }\n\n  async getUserDetails(userId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n      include: {\n        _count: {\n          select: {\n            invoices: true,\n            clients: true,\n          },\n        },\n        invoices: {\n          take: 5,\n          orderBy: { createdAt: 'desc' },\n          include: { client: true },\n        },\n        activityLogs: {\n          take: 10,\n          orderBy: { createdAt: 'desc' },\n        },\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    // Calculate user statistics\n    const [totalRevenue, paidInvoices, pendingInvoices] = await Promise.all([\n      this.prisma.invoice.aggregate({\n        where: { userId, status: 'PAID' },\n        _sum: { totalAmount: true },\n      }),\n      this.prisma.invoice.count({\n        where: { userId, status: 'PAID' },\n      }),\n      this.prisma.invoice.count({\n        where: { userId, status: { in: ['SENT', 'VIEWED'] } },\n      }),\n    ]);\n\n    return {\n      user,\n      stats: {\n        totalRevenue: totalRevenue._sum.totalAmount || 0,\n        paidInvoices,\n        pendingInvoices,\n        totalInvoices: user._count.invoices,\n        totalClients: user._count.clients,\n      },\n    };\n  }\n\n  async updateUser(userId: string, updateUserDto: UpdateUserByAdminDto) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const updatedUser = await this.prisma.user.update({\n      where: { id: userId },\n      data: updateUserDto,\n    });\n\n    // Log admin action\n    await this.prisma.activityLog.create({\n      data: {\n        userId,\n        action: 'USER_UPDATED_BY_ADMIN',\n        entity: 'user',\n        entityId: userId,\n        description: `User profile updated by admin`,\n        ipAddress: '0.0.0.0', // TODO: Get from request\n      },\n    });\n\n    return updatedUser;\n  }\n\n  async suspendUser(userId: string, adminId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    if (user.role === UserRole.ADMIN) {\n      throw new ForbiddenException('Cannot suspend admin users');\n    }\n\n    const suspendedUser = await this.prisma.user.update({\n      where: { id: userId },\n      data: { isActive: false },\n    });\n\n    // Log admin action\n    await this.prisma.activityLog.create({\n      data: {\n        userId: adminId,\n        action: 'USER_SUSPENDED',\n        entity: 'user',\n        entityId: userId,\n        description: `User suspended by admin ${adminId}`,\n        ipAddress: '0.0.0.0',\n      },\n    });\n\n    return suspendedUser;\n  }\n\n  async activateUser(userId: string, adminId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const activatedUser = await this.prisma.user.update({\n      where: { id: userId },\n      data: { isActive: true },\n    });\n\n    // Log admin action\n    await this.prisma.activityLog.create({\n      data: {\n        userId: adminId,\n        action: 'USER_ACTIVATED',\n        entity: 'user',\n        entityId: userId,\n        description: `User activated by admin ${adminId}`,\n        ipAddress: '0.0.0.0',\n      },\n    });\n\n    return activatedUser;\n  }\n\n  async deleteUser(userId: string, adminId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    if (user.role === UserRole.ADMIN) {\n      throw new ForbiddenException('Cannot delete admin users');\n    }\n\n    // Delete user and all related data (cascade delete)\n    await this.prisma.user.delete({\n      where: { id: userId },\n    });\n\n    // Log admin action\n    await this.prisma.activityLog.create({\n      data: {\n        userId: adminId,\n        action: 'USER_DELETED',\n        entity: 'user',\n        entityId: userId,\n        description: `User ${user.email} deleted by admin`,\n        ipAddress: '0.0.0.0',\n      },\n    });\n\n    return { message: 'User deleted successfully' };\n  }\n\n  async resetUserPassword(\n    userId: string,\n    dto: ResetUserPasswordDto,\n    adminId: string,\n  ) {\n    const user = await this.prisma.user.findUnique({ where: { id: userId } });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const hashedPassword = await bcrypt.hash(dto.newPassword, 10);\n    await this.prisma.user.update({\n      where: { id: userId },\n      data: { password: hashedPassword },\n    });\n\n    await this.prisma.activityLog.create({\n      data: {\n        userId: adminId,\n        action: 'USER_PASSWORD_RESET',\n        entity: 'user',\n        entityId: userId,\n        description: `Password reset by admin ${adminId}`,\n        ipAddress: '0.0.0.0',\n      },\n    });\n\n    return { message: 'Password reset successfully' };\n  }\n\n  async getSystemSettings() {\n    const defaults: Record<string, any> = {\n      siteName: 'Invoicy',\n      companyName: 'Invoicy',\n      companyEmail: 'admin@invoicy.com',\n      companyPhone: '',\n      companyAddress: '',\n      defaultCurrency: 'USD',\n      defaultTaxRate: 0,\n      defaultPaymentTerms: 30,\n      timezone: 'UTC',\n      emailNotifications: true,\n      autoBackup: true,\n      maintenanceMode: false,\n      // Application configuration\n      allowRegistration: true,\n      maxUploadMB: 10,\n      // Email (SMTP) defaults - editable via Admin Settings UI\n      EMAIL_HOST: 'smtp.gmail.com',\n      EMAIL_PORT: 587,\n      EMAIL_SECURE: false,\n      EMAIL_USER: '',\n      EMAIL_PASSWORD: '',\n      EMAIL_FROM: 'noreply@invoicy.com',\n      // Provider options\n      EMAIL_PROVIDER: 'SMTP', // SMTP | SENDGRID\n      SENDGRID_API_KEY: '',\n      EMAIL_TRACK_OPENS: true,\n      EMAIL_TRACK_CLICKS: true,\n      EMAIL_CONNECTION_TIMEOUT_MS: 10000,\n      EMAIL_GREETING_TIMEOUT_MS: 10000,\n      EMAIL_SOCKET_TIMEOUT_MS: 20000,\n      // Payments (Stripe)\n      STRIPE_PUBLISHABLE_KEY: '',\n      STRIPE_SECRET_KEY: '',\n      STRIPE_WEBHOOK_SECRET: '',\n      STRIPE_PRICE_BASIC: '',\n      STRIPE_PRICE_PREMIUM: '',\n      // Platform fee in basis points (1% = 100 bps). Used for Connect destination charges\n      STRIPE_PLATFORM_FEE_BPS: 0,\n    };\n\n    const entries = await this.prisma.systemSettings.findMany();\n    const current: Record<string, any> = { ...defaults };\n    for (const row of entries) {\n      current[row.key] = row.value;\n    }\n    // Mask sensitive values\n    if (\n      typeof current.EMAIL_PASSWORD === 'string' &&\n      current.EMAIL_PASSWORD.length > 0\n    ) {\n      current.EMAIL_PASSWORD = '__SECRET__';\n    }\n    if (\n      typeof current.SENDGRID_API_KEY === 'string' &&\n      current.SENDGRID_API_KEY.length > 0\n    ) {\n      current.SENDGRID_API_KEY = '__SECRET__';\n    }\n    if (\n      typeof current.STRIPE_SECRET_KEY === 'string' &&\n      current.STRIPE_SECRET_KEY.length > 0\n    ) {\n      current.STRIPE_SECRET_KEY = '__SECRET__';\n    }\n    if (\n      typeof current.STRIPE_WEBHOOK_SECRET === 'string' &&\n      current.STRIPE_WEBHOOK_SECRET.length > 0\n    ) {\n      current.STRIPE_WEBHOOK_SECRET = '__SECRET__';\n    }\n    return current;\n  }\n\n  async updateSystemSettings(data: any) {\n    // Upsert each key/value pair according to SystemSettings model\n    const entries = Object.entries(data || {});\n    for (const [key, valueRaw] of entries) {\n      // Skip updating password when sentinel is provided\n      if (key === 'EMAIL_PASSWORD' && valueRaw === '__SECRET__') {\n        continue;\n      }\n\n      let value = valueRaw as any;\n\n      switch (key) {\n        case 'maxUploadMB': {\n          const n = Number(value);\n          if (!Number.isFinite(n) || n < 1 || n > 10240) {\n            throw new BadRequestException(\n              'maxUploadMB must be a number between 1 and 10240',\n            );\n          }\n          value = Math.floor(n);\n          break;\n        }\n        case 'EMAIL_HOST': {\n          const providerInput = String(\n            (data?.EMAIL_PROVIDER ?? '') || '',\n          ).toUpperCase();\n          const host = typeof value === 'string' ? value.trim() : '';\n          if (providerInput !== 'SENDGRID') {\n            if (!host) throw new BadRequestException('EMAIL_HOST is required');\n          }\n          value = host;\n          break;\n        }\n        case 'EMAIL_PORT': {\n          const port = Number(value);\n          if (!Number.isFinite(port) || port < 1 || port > 65535) {\n            throw new BadRequestException(\n              'EMAIL_PORT must be a number between 1 and 65535',\n            );\n          }\n          value = port;\n          break;\n        }\n        case 'EMAIL_SECURE': {\n          value =\n            value === true || value === 'true' || value === '1' || value === 1;\n          break;\n        }\n        case 'EMAIL_PROVIDER': {\n          const provider = String(value || '').toUpperCase();\n          if (!['SMTP', 'SENDGRID'].includes(provider)) {\n            throw new BadRequestException(\n              'EMAIL_PROVIDER must be either SMTP or SENDGRID',\n            );\n          }\n          value = provider;\n          break;\n        }\n        case 'SENDGRID_API_KEY': {\n          // Support sentinel to keep existing\n          if (value === '__SECRET__') {\n            continue; // skip upsert to preserve existing secret\n          }\n          value = String(value || '').trim();\n          break;\n        }\n        case 'EMAIL_TRACK_OPENS':\n        case 'EMAIL_TRACK_CLICKS': {\n          value =\n            value === true || value === 'true' || value === '1' || value === 1;\n          break;\n        }\n        case 'EMAIL_FROM': {\n          const from = String(value || '').trim();\n          const emailRe = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\n          if (!emailRe.test(from)) {\n            throw new BadRequestException(\n              'EMAIL_FROM must be a valid email address',\n            );\n          }\n          value = from;\n          break;\n        }\n        case 'EMAIL_CONNECTION_TIMEOUT_MS':\n        case 'EMAIL_GREETING_TIMEOUT_MS':\n        case 'EMAIL_SOCKET_TIMEOUT_MS': {\n          const ms = Number(value);\n          if (!Number.isFinite(ms) || ms < 0 || ms > 600000) {\n            throw new BadRequestException(\n              `${key} must be a number between 0 and 600000 milliseconds`,\n            );\n          }\n          value = ms;\n          break;\n        }\n        // Stripe settings\n        case 'STRIPE_PUBLISHABLE_KEY': {\n          value = String(value || '').trim();\n          break;\n        }\n        case 'STRIPE_SECRET_KEY':\n        case 'STRIPE_WEBHOOK_SECRET': {\n          if (value === '__SECRET__') {\n            continue; // keep existing\n          }\n          value = String(value || '').trim();\n          break;\n        }\n        case 'STRIPE_PRICE_BASIC':\n        case 'STRIPE_PRICE_PREMIUM': {\n          value = String(value || '').trim();\n          break;\n        }\n        case 'STRIPE_PLATFORM_FEE_BPS': {\n          const bps = Number(value);\n          if (!Number.isFinite(bps) || bps < 0 || bps > 10000) {\n            throw new BadRequestException(\n              'STRIPE_PLATFORM_FEE_BPS must be between 0 and 10000 (100% = 10000)',\n            );\n          }\n          value = Math.floor(bps);\n          break;\n        }\n        default: {\n          // Coerce common boolean flags when sent as strings\n          if (\n            [\n              'emailNotifications',\n              'autoBackup',\n              'maintenanceMode',\n              'allowRegistration',\n            ].includes(key)\n          ) {\n            value =\n              value === true ||\n              value === 'true' ||\n              value === '1' ||\n              value === 1;\n          }\n          break;\n        }\n      }\n\n      await this.prisma.systemSettings.upsert({\n        where: { key },\n        create: { key, value: value },\n        update: { value: value },\n      });\n    }\n    // Return merged settings (with masking applied)\n    return this.getSystemSettings();\n  }\n\n  async getActivityLogs(query?: {\n    userId?: string;\n    action?: string;\n    startDate?: Date;\n    endDate?: Date;\n    page?: number;\n    limit?: number;\n  }) {\n    const page = query?.page || 1;\n    const limit = query?.limit || 50;\n    const skip = (page - 1) * limit;\n\n    const where: any = {};\n\n    if (query?.userId) {\n      where.userId = query.userId;\n    }\n\n    if (query?.action) {\n      where.action = query.action;\n    }\n\n    if (query?.startDate && query?.endDate) {\n      where.createdAt = {\n        gte: query.startDate,\n        lte: query.endDate,\n      };\n    }\n\n    const [logs, total] = await Promise.all([\n      this.prisma.activityLog.findMany({\n        where,\n        skip,\n        take: limit,\n        include: {\n          user: {\n            select: {\n              email: true,\n              firstName: true,\n              lastName: true,\n            },\n          },\n        },\n        orderBy: { createdAt: 'desc' },\n      }),\n      this.prisma.activityLog.count({ where }),\n    ]);\n\n    return {\n      logs,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages: Math.ceil(total / limit),\n      },\n    };\n  }\n\n  async getErrorLogs(query?: {\n    search?: string;\n    level?: string;\n    statusCode?: number;\n    method?: string;\n    path?: string;\n    startDate?: Date;\n    endDate?: Date;\n    page?: number;\n    limit?: number;\n  }) {\n    const page = query?.page || 1;\n    const limit = query?.limit || 50;\n    const skip = (page - 1) * limit;\n\n    const where: any = {};\n\n    if (query?.level) where.level = query.level;\n    if (query?.statusCode) where.statusCode = query.statusCode;\n    if (query?.method) where.method = query.method;\n    if (query?.path) where.path = { contains: query.path, mode: 'insensitive' };\n    if (query?.search) {\n      where.OR = [\n        { message: { contains: query.search, mode: 'insensitive' } },\n        { path: { contains: query.search, mode: 'insensitive' } },\n      ];\n    }\n    if (query?.startDate && query?.endDate) {\n      where.createdAt = { gte: query.startDate, lte: query.endDate };\n    }\n\n    const prismaAny = this.prisma as any;\n    const [logs, total] = await Promise.all([\n      prismaAny.errorLog.findMany({\n        where,\n        skip,\n        take: limit,\n        orderBy: { createdAt: 'desc' },\n      }),\n      prismaAny.errorLog.count({ where }),\n    ]);\n\n    return {\n      logs,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages: Math.ceil(total / limit),\n      },\n    };\n  }\n\n  async deleteErrorLog(id: string) {\n    const prismaAny = this.prisma as any;\n    try {\n      await prismaAny.errorLog.delete({ where: { id } });\n      return { message: 'Error log deleted' };\n    } catch (e) {\n      throw new NotFoundException('Error log not found');\n    }\n  }\n\n  async clearErrorLogs(olderThanDays?: number) {\n    const prismaAny = this.prisma as any;\n    const where: any = {};\n    if (olderThanDays && olderThanDays > 0) {\n      const cutoff = new Date();\n      cutoff.setDate(cutoff.getDate() - olderThanDays);\n      where.createdAt = { lt: cutoff };\n    }\n    const res = await prismaAny.errorLog.deleteMany({ where });\n    return { message: 'Error logs cleared', count: res.count };\n  }\n\n  async getInvoiceStatistics() {\n    const [\n      totalInvoices,\n      paidInvoices,\n      pendingInvoices,\n      overdueInvoices,\n      totalRevenue,\n      monthlyRevenue,\n    ] = await Promise.all([\n      this.prisma.invoice.count(),\n      this.prisma.invoice.count({ where: { status: 'PAID' } }),\n      this.prisma.invoice.count({\n        where: { status: { in: ['SENT', 'VIEWED'] } },\n      }),\n      this.prisma.invoice.count({\n        where: {\n          status: { in: ['SENT', 'VIEWED'] },\n          dueDate: { lt: new Date() },\n        },\n      }),\n      this.prisma.invoice.aggregate({\n        where: { status: 'PAID' },\n        _sum: { totalAmount: true },\n      }),\n      this.getMonthlyRevenue(),\n    ]);\n\n    return {\n      totalInvoices,\n      paidInvoices,\n      pendingInvoices,\n      overdueInvoices,\n      totalRevenue: totalRevenue._sum.totalAmount || 0,\n      monthlyRevenue,\n    };\n  }\n\n  // Helper methods\n  private async getMonthlyUserGrowth() {\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const users = await this.prisma.user.findMany({\n      where: {\n        createdAt: { gte: sixMonthsAgo },\n      },\n      select: {\n        createdAt: true,\n      },\n    });\n\n    const grouped = {};\n    users.forEach((user) => {\n      const date = new Date(user.createdAt);\n      const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      grouped[key] = (grouped[key] || 0) + 1;\n    });\n\n    return Object.entries(grouped).map(([month, count]) => ({\n      month,\n      count,\n    }));\n  }\n\n  private async getMonthlyRevenue() {\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const invoices = await this.prisma.invoice.findMany({\n      where: {\n        status: 'PAID',\n        paidAt: { gte: sixMonthsAgo },\n      },\n      select: {\n        paidAt: true,\n        totalAmount: true,\n      },\n    });\n\n    const grouped = {};\n    invoices.forEach((invoice) => {\n      const date = new Date(invoice.paidAt!);\n      const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      if (!grouped[key]) {\n        grouped[key] = { month: key, amount: 0 };\n      }\n      grouped[key].amount += invoice.totalAmount;\n    });\n\n    return Object.values(grouped);\n  }\n\n  // System management: backup + maintenance\n  async triggerBackup(adminId: string) {\n    const now = new Date();\n    const backupId = `bkp_${now.getTime().toString(36)}_${Math.random().toString(36).slice(2, 8)}`;\n    const timestamp = now.toISOString();\n    const safeTs = timestamp.replace(/[:.]/g, '-');\n    const file = `backup_${safeTs}.json`;\n\n    // Persist lightweight metadata in SystemSettings\n    await this.prisma.$transaction([\n      this.prisma.systemSettings.upsert({\n        where: { key: 'LAST_BACKUP_AT' },\n        create: { key: 'LAST_BACKUP_AT', value: timestamp as any },\n        update: { value: timestamp as any },\n      }),\n      this.prisma.systemSettings.upsert({\n        where: { key: 'LAST_BACKUP_ID' },\n        create: { key: 'LAST_BACKUP_ID', value: backupId as any },\n        update: { value: backupId as any },\n      }),\n      this.prisma.systemSettings.upsert({\n        where: { key: 'LAST_BACKUP_FILE' },\n        create: { key: 'LAST_BACKUP_FILE', value: file as any },\n        update: { value: file as any },\n      }),\n    ]);\n\n    // Log admin action\n    await this.prisma.activityLog.create({\n      data: {\n        userId: adminId,\n        action: 'SYSTEM_BACKUP_TRIGGERED',\n        entity: 'system',\n        entityId: backupId,\n        description: `System backup triggered by admin ${adminId}`,\n      },\n    });\n\n    return { success: true, backupId, file, createdAt: timestamp };\n  }\n\n  async getBackupStatus() {\n    const rows = await this.prisma.systemSettings.findMany({\n      where: {\n        key: {\n          in: [\n            'LAST_BACKUP_AT',\n            'LAST_BACKUP_ID',\n            'LAST_BACKUP_FILE',\n            'maintenanceMode',\n          ],\n        },\n      },\n    });\n    const map = new Map(rows.map((r) => [r.key, r.value])) as Map<string, any>;\n    return {\n      lastBackupAt: map.get('LAST_BACKUP_AT') || null,\n      lastBackupId: map.get('LAST_BACKUP_ID') || null,\n      lastBackupFile: map.get('LAST_BACKUP_FILE') || null,\n      maintenanceMode: !!map.get('maintenanceMode'),\n    };\n  }\n\n  async setMaintenanceMode(enabled: boolean) {\n    await this.prisma.systemSettings.upsert({\n      where: { key: 'maintenanceMode' },\n      create: { key: 'maintenanceMode', value: enabled as any },\n      update: { value: enabled as any },\n    });\n    return { maintenanceMode: enabled };\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\admin\\dto\\reset-user-password.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\admin\\dto\\update-user.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\analytics\\analytics.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":13,"column":52,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":13,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":13,"column":57,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":13,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":22,"column":7,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":22,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":22,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":22,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":29,"column":54,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":29,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":29,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":29,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":34,"column":53,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":34,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":34,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":34,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":39,"column":54,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":39,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":39,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":39,"endColumn":61}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Controller, Get, UseGuards, Query } from '@nestjs/common';\nimport { AnalyticsService } from './analytics.service';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\n\n@Controller('analytics')\n@UseGuards(JwtAuthGuard)\nexport class AnalyticsController {\n  constructor(private readonly analyticsService: AnalyticsService) {}\n\n  @Get('dashboard')\n  getDashboardStats(@CurrentUser() user) {\n    return this.analyticsService.getDashboardStats(user.id);\n  }\n\n  @Get('revenue')\n  getRevenueAnalytics(\n    @CurrentUser() user,\n    @Query('period') period?: 'week' | 'month' | 'year',\n  ) {\n    return this.analyticsService.getRevenueAnalytics(\n      user.id,\n      period || 'month',\n    );\n  }\n\n  @Get('invoices')\n  getInvoiceAnalytics(@CurrentUser() user) {\n    return this.analyticsService.getInvoiceAnalytics(user.id);\n  }\n\n  @Get('clients')\n  getClientAnalytics(@CurrentUser() user) {\n    return this.analyticsService.getClientAnalytics(user.id);\n  }\n\n  @Get('payments')\n  getPaymentAnalytics(@CurrentUser() user) {\n    return this.analyticsService.getPaymentAnalytics(user.id);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\analytics\\analytics.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\analytics\\analytics.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'lastMonth' is assigned a value but never used.","line":16,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'currentYear' is assigned a value but never used.","line":21,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":367,"column":29,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":367,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .createdAt on an `any` value.","line":367,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":367,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .total on an `error` typed value.","line":385,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":385,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .totalAmount on an `any` value.","line":385,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":385,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .count on an `error` typed value.","line":386,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":386,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .status on an `any` value.","line":388,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":388,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paid on an `error` typed value.","line":389,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":389,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .totalAmount on an `any` value.","line":389,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":389,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `\"SENT\" | \"VIEWED\" | \"OVERDUE\"`.","line":395,"column":20,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":395,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .status on an `any` value.","line":395,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":395,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .pending on an `error` typed value.","line":397,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":397,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .totalAmount on an `any` value.","line":397,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":397,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":422,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":422,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":475,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":475,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .amount on an `error` typed value.","line":529,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":529,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .count on an `error` typed value.","line":530,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":530,"endColumn":25}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { InvoiceStatus, PaymentStatus } from '../../common/enums';\n\n@Injectable()\nexport class AnalyticsService {\n  constructor(private prisma: PrismaService) {}\n\n  async getDashboardStats(userId: string) {\n    const currentDate = new Date();\n    const currentMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth(),\n      1,\n    );\n    const lastMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1,\n      1,\n    );\n    const currentYear = new Date(currentDate.getFullYear(), 0, 1);\n\n    const [\n      totalInvoices,\n      totalClients,\n      totalRevenue,\n      pendingAmount,\n      monthlyRevenue,\n      overdueInvoices,\n      overdueAmountAgg,\n      recentInvoices,\n      topClients,\n    ] = await Promise.all([\n      // Total invoices count\n      this.prisma.invoice.count({ where: { userId } }),\n\n      // Total clients count\n      this.prisma.client.count({ where: { userId, isActive: true } }),\n\n      // Total revenue (paid invoices)\n      this.prisma.invoice.aggregate({\n        where: { userId, status: InvoiceStatus.PAID },\n        _sum: { totalAmount: true },\n      }),\n\n      // Pending amount (includes SENT, VIEWED, and OVERDUE)\n      this.prisma.invoice.aggregate({\n        where: {\n          userId,\n          status: {\n            in: [\n              InvoiceStatus.SENT,\n              InvoiceStatus.VIEWED,\n              InvoiceStatus.OVERDUE,\n            ],\n          },\n        },\n        _sum: { totalAmount: true },\n      }),\n\n      // Monthly revenue\n      this.prisma.invoice.aggregate({\n        where: {\n          userId,\n          status: InvoiceStatus.PAID,\n          paidAt: { gte: currentMonth },\n        },\n        _sum: { totalAmount: true },\n      }),\n\n      // Overdue invoices count (explicit OVERDUE status)\n      this.prisma.invoice.count({\n        where: {\n          userId,\n          status: InvoiceStatus.OVERDUE,\n        },\n      }),\n\n      // Overdue amount (sum of OVERDUE invoices)\n      this.prisma.invoice.aggregate({\n        where: {\n          userId,\n          status: InvoiceStatus.OVERDUE,\n        },\n        _sum: { totalAmount: true },\n      }),\n\n      // Recent invoices\n      this.prisma.invoice.findMany({\n        where: { userId },\n        take: 5,\n        orderBy: { createdAt: 'desc' },\n        include: { client: true },\n      }),\n\n      // Top clients by revenue\n      this.prisma.client.findMany({\n        where: { userId },\n        take: 5,\n        include: {\n          invoices: {\n            where: { status: InvoiceStatus.PAID },\n            select: { totalAmount: true },\n          },\n        },\n      }),\n    ]);\n\n    // Calculate top clients with total revenue\n    const topClientsWithRevenue = topClients\n      .map((client) => ({\n        id: client.id,\n        name: client.name,\n        email: client.email,\n        totalRevenue: client.invoices.reduce(\n          (sum, inv) => sum + inv.totalAmount,\n          0,\n        ),\n        invoiceCount: client.invoices.length,\n      }))\n      .sort((a, b) => b.totalRevenue - a.totalRevenue)\n      .slice(0, 5);\n\n    return {\n      totalInvoices,\n      totalClients,\n      totalRevenue: totalRevenue._sum.totalAmount || 0,\n      pendingAmount: pendingAmount._sum.totalAmount || 0,\n      monthlyRevenue: monthlyRevenue._sum.totalAmount || 0,\n      overdueInvoices,\n      overdueAmount: overdueAmountAgg._sum.totalAmount || 0,\n      recentInvoices,\n      topClients: topClientsWithRevenue,\n    };\n  }\n\n  async getRevenueAnalytics(\n    userId: string,\n    period: 'week' | 'month' | 'year' = 'month',\n  ) {\n    const currentDate = new Date();\n    let startDate: Date;\n    let groupBy: string;\n\n    switch (period) {\n      case 'week':\n        startDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\n        groupBy = 'day';\n        break;\n      case 'month':\n        startDate = new Date(\n          currentDate.getFullYear(),\n          currentDate.getMonth(),\n          1,\n        );\n        groupBy = 'day';\n        break;\n      case 'year':\n        startDate = new Date(currentDate.getFullYear(), 0, 1);\n        groupBy = 'month';\n        break;\n    }\n\n    const invoices = await this.prisma.invoice.findMany({\n      where: {\n        userId,\n        createdAt: { gte: startDate },\n      },\n      select: {\n        createdAt: true,\n        totalAmount: true,\n        status: true,\n        paidAt: true,\n      },\n      orderBy: { createdAt: 'asc' },\n    });\n\n    // Group data by period\n    const revenueData = this.groupRevenueByPeriod(invoices, groupBy);\n\n    // Calculate growth rate\n    const currentPeriodRevenue = invoices\n      .filter((inv) => inv.status === InvoiceStatus.PAID)\n      .reduce((sum, inv) => sum + inv.totalAmount, 0);\n\n    const previousPeriodInvoices = await this.prisma.invoice.findMany({\n      where: {\n        userId,\n        status: InvoiceStatus.PAID,\n        paidAt: {\n          gte: new Date(\n            startDate.getTime() - (currentDate.getTime() - startDate.getTime()),\n          ),\n          lt: startDate,\n        },\n      },\n      select: { totalAmount: true },\n    });\n\n    const previousPeriodRevenue = previousPeriodInvoices.reduce(\n      (sum, inv) => sum + inv.totalAmount,\n      0,\n    );\n\n    const growthRate =\n      previousPeriodRevenue > 0\n        ? ((currentPeriodRevenue - previousPeriodRevenue) /\n            previousPeriodRevenue) *\n          100\n        : 0;\n\n    return {\n      period,\n      revenueData,\n      totalRevenue: currentPeriodRevenue,\n      growthRate: growthRate.toFixed(2),\n      invoiceCount: invoices.length,\n      paidInvoices: invoices.filter((inv) => inv.status === InvoiceStatus.PAID)\n        .length,\n    };\n  }\n\n  async getInvoiceAnalytics(userId: string) {\n    const [statusDistribution, monthlyInvoices, averagePaymentTime] =\n      await Promise.all([\n        // Invoice status distribution\n        this.prisma.invoice.groupBy({\n          by: ['status'],\n          where: { userId },\n          _count: { status: true },\n        }),\n\n        // Monthly invoice creation trend\n        this.getMonthlyInvoiceTrend(userId),\n\n        // Average payment time\n        this.getAveragePaymentTime(userId),\n      ]);\n\n    return {\n      statusDistribution: statusDistribution.map((item) => ({\n        status: item.status,\n        count: item._count.status,\n      })),\n      monthlyInvoices,\n      averagePaymentTime,\n    };\n  }\n\n  async getClientAnalytics(userId: string) {\n    const [\n      clientTypeDistribution,\n      clientGrowth,\n      mostActiveClients,\n      clientRetention,\n    ] = await Promise.all([\n      // Client type distribution\n      this.prisma.client.groupBy({\n        by: ['clientType'],\n        where: { userId },\n        _count: { clientType: true },\n      }),\n\n      // Monthly client growth\n      this.getMonthlyClientGrowth(userId),\n\n      // Most active clients\n      this.prisma.client.findMany({\n        where: { userId },\n        include: {\n          _count: { select: { invoices: true } },\n          invoices: {\n            where: { status: InvoiceStatus.PAID },\n            select: { totalAmount: true },\n          },\n        },\n        take: 10,\n      }),\n\n      // Client retention rate\n      this.calculateClientRetention(userId),\n    ]);\n\n    const sortedActiveClients = mostActiveClients\n      .map((client) => ({\n        id: client.id,\n        name: client.name,\n        companyName: client.companyName,\n        invoiceCount: client._count.invoices,\n        totalRevenue: client.invoices.reduce(\n          (sum, inv) => sum + inv.totalAmount,\n          0,\n        ),\n      }))\n      .sort((a, b) => b.invoiceCount - a.invoiceCount);\n\n    return {\n      clientTypeDistribution: clientTypeDistribution.map((item) => ({\n        type: item.clientType,\n        count: item._count.clientType,\n      })),\n      clientGrowth,\n      mostActiveClients: sortedActiveClients,\n      clientRetention,\n    };\n  }\n\n  async getPaymentAnalytics(userId: string) {\n    const [\n      paymentMethodDistribution,\n      monthlyPayments,\n      paymentStatusDistribution,\n      averagePaymentAmount,\n    ] = await Promise.all([\n      // Payment method distribution\n      this.prisma.payment.groupBy({\n        by: ['paymentMethod'],\n        where: {\n          invoice: { userId },\n          status: PaymentStatus.COMPLETED,\n        },\n        _count: { paymentMethod: true },\n        _sum: { amount: true },\n      }),\n\n      // Monthly payment trend\n      this.getMonthlyPaymentTrend(userId),\n\n      // Payment status distribution\n      this.prisma.payment.groupBy({\n        by: ['status'],\n        where: { invoice: { userId } },\n        _count: { status: true },\n      }),\n\n      // Average payment amount\n      this.prisma.payment.aggregate({\n        where: {\n          invoice: { userId },\n          status: PaymentStatus.COMPLETED,\n        },\n        _avg: { amount: true },\n      }),\n    ]);\n\n    return {\n      paymentMethodDistribution: paymentMethodDistribution.map((item) => ({\n        method: item.paymentMethod,\n        count: item._count.paymentMethod,\n        totalAmount: item._sum.amount || 0,\n      })),\n      monthlyPayments,\n      paymentStatusDistribution: paymentStatusDistribution.map((item) => ({\n        status: item.status,\n        count: item._count.status,\n      })),\n      averagePaymentAmount: averagePaymentAmount._avg.amount || 0,\n    };\n  }\n\n  // Helper methods\n  private groupRevenueByPeriod(invoices: any[], groupBy: string) {\n    const grouped = {};\n\n    invoices.forEach((invoice) => {\n      let key: string;\n      const date = new Date(invoice.createdAt);\n\n      if (groupBy === 'day') {\n        key = date.toISOString().split('T')[0];\n      } else {\n        key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      }\n\n      if (!grouped[key]) {\n        grouped[key] = {\n          date: key,\n          total: 0,\n          paid: 0,\n          pending: 0,\n          count: 0,\n        };\n      }\n\n      grouped[key].total += invoice.totalAmount;\n      grouped[key].count += 1;\n\n      if (invoice.status === InvoiceStatus.PAID) {\n        grouped[key].paid += invoice.totalAmount;\n      } else if (\n        [\n          InvoiceStatus.SENT,\n          InvoiceStatus.VIEWED,\n          InvoiceStatus.OVERDUE,\n        ].includes(invoice.status)\n      ) {\n        grouped[key].pending += invoice.totalAmount;\n      }\n    });\n\n    return Object.values(grouped);\n  }\n\n  private async getMonthlyInvoiceTrend(userId: string) {\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const invoices = await this.prisma.invoice.findMany({\n      where: {\n        userId,\n        createdAt: { gte: sixMonthsAgo },\n      },\n      select: {\n        createdAt: true,\n      },\n    });\n\n    const grouped = {};\n    invoices.forEach((invoice) => {\n      const date = new Date(invoice.createdAt);\n      const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      grouped[key] = (grouped[key] || 0) + 1;\n    });\n\n    return Object.entries(grouped).map(([month, count]) => ({\n      month,\n      count,\n    }));\n  }\n\n  private async getAveragePaymentTime(userId: string) {\n    const paidInvoices = await this.prisma.invoice.findMany({\n      where: {\n        userId,\n        status: InvoiceStatus.PAID,\n        paidAt: { not: null },\n      },\n      select: {\n        invoiceDate: true,\n        paidAt: true,\n      },\n    });\n\n    if (paidInvoices.length === 0) return 0;\n\n    const totalDays = paidInvoices.reduce((sum, invoice) => {\n      const days = Math.floor(\n        (invoice.paidAt!.getTime() - invoice.invoiceDate.getTime()) /\n          (1000 * 60 * 60 * 24),\n      );\n      return sum + days;\n    }, 0);\n\n    return Math.round(totalDays / paidInvoices.length);\n  }\n\n  private async getMonthlyClientGrowth(userId: string) {\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const clients = await this.prisma.client.findMany({\n      where: {\n        userId,\n        createdAt: { gte: sixMonthsAgo },\n      },\n      select: {\n        createdAt: true,\n      },\n    });\n\n    const grouped = {};\n    clients.forEach((client) => {\n      const date = new Date(client.createdAt);\n      const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      grouped[key] = (grouped[key] || 0) + 1;\n    });\n\n    return Object.entries(grouped).map(([month, count]) => ({\n      month,\n      count,\n    }));\n  }\n\n  private async calculateClientRetention(userId: string) {\n    const threeMonthsAgo = new Date();\n    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3);\n\n    const activeClients = await this.prisma.client.count({\n      where: {\n        userId,\n        invoices: {\n          some: {\n            createdAt: { gte: threeMonthsAgo },\n          },\n        },\n      },\n    });\n\n    const totalClients = await this.prisma.client.count({\n      where: { userId },\n    });\n\n    return totalClients > 0 ? (activeClients / totalClients) * 100 : 0;\n  }\n\n  private async getMonthlyPaymentTrend(userId: string) {\n    const sixMonthsAgo = new Date();\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);\n\n    const payments = await this.prisma.payment.findMany({\n      where: {\n        invoice: { userId },\n        status: PaymentStatus.COMPLETED,\n        paymentDate: { gte: sixMonthsAgo },\n      },\n      select: {\n        paymentDate: true,\n        amount: true,\n      },\n    });\n\n    const grouped = {};\n    payments.forEach((payment) => {\n      const date = new Date(payment.paymentDate);\n      const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      if (!grouped[key]) {\n        grouped[key] = { month: key, amount: 0, count: 0 };\n      }\n      grouped[key].amount += payment.amount;\n      grouped[key].count += 1;\n    });\n\n    return Object.values(grouped);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\auth.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'EmailVerifiedGuard' is defined but never used.","line":15,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":15,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ id: string; email: string; role: string; }`.","line":36,"column":42,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":36,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":36,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":36,"endColumn":50},{"ruleId":"@typescript-eslint/require-await","severity":2,"message":"Async method 'logout' has no 'await' expression.","line":41,"column":3,"nodeType":"FunctionExpression","messageId":"missingAwait","endLine":41,"endColumn":15,"suggestions":[{"messageId":"removeAsync","fix":{"range":[1125,1131],"text":""},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":63,"column":48,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":63,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":63,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":63,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":69,"column":35,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":69,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":69,"column":40,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":69,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":75,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":75,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":75,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":75,"endColumn":51}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Controller,\n  Post,\n  Body,\n  Get,\n  UseGuards,\n  Request,\n  Param,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { ForgotPasswordDto, ResetPasswordDto } from './dto/reset-password.dto';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\nimport { EmailVerifiedGuard } from './guards/email-verified.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport { ChangePasswordDto } from './dto/change-password.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() registerDto: RegisterDto) {\n    return this.authService.register(registerDto);\n  }\n\n  @Post('login')\n  async login(@Body() loginDto: LoginDto) {\n    return this.authService.login(loginDto);\n  }\n\n  @Post('refresh')\n  @UseGuards(JwtAuthGuard)\n  async refresh(@Request() req) {\n    return this.authService.refreshToken(req.user);\n  }\n\n  @Post('logout')\n  @UseGuards(JwtAuthGuard)\n  async logout() {\n    return { message: 'Logged out successfully' };\n  }\n\n  @Post('forgot-password')\n  async forgotPassword(@Body() forgotPasswordDto: ForgotPasswordDto) {\n    return this.authService.forgotPassword(forgotPasswordDto);\n  }\n\n  @Post('reset-password')\n  async resetPassword(@Body() resetPasswordDto: ResetPasswordDto) {\n    return this.authService.resetPassword(resetPasswordDto);\n  }\n\n  @Get('verify-email/:token')\n  async verifyEmail(@Param('token') token: string) {\n    return this.authService.verifyEmail(token);\n  }\n\n  @Post('resend-verification')\n  @UseGuards(JwtAuthGuard)\n  async resendVerification(@CurrentUser() user) {\n    return this.authService.resendVerification(user.id);\n  }\n\n  @Get('me')\n  @UseGuards(JwtAuthGuard)\n  async getMe(@CurrentUser() user) {\n    return this.authService.getMe(user.id);\n  }\n\n  @Post('change-password')\n  @UseGuards(JwtAuthGuard)\n  async changePassword(@CurrentUser() user, @Body() dto: ChangePasswordDto) {\n    return this.authService.changePassword(user.id, dto);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\auth.module.ts","messages":[{"ruleId":"@typescript-eslint/require-await","severity":2,"message":"Async method 'useFactory' has no 'await' expression.","line":17,"column":7,"nodeType":"ArrowFunctionExpression","messageId":"missingAwait","endLine":17,"endColumn":25,"suggestions":[{"messageId":"removeAsync","fix":{"range":[611,617],"text":""},"desc":"Remove 'async'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { PrismaModule } from '../../prisma/prisma.module';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret:\n          configService.get('JWT_SECRET') ||\n          (configService.get('NODE_ENV') === 'production'\n            ? undefined\n            : 'dev_jwt_secret'),\n        signOptions: { expiresIn: configService.get('JWT_EXPIRATION', '7d') },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\auth.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'password' is assigned a value but never used.","line":30,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":30,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":37,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":37,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":43,"column":16,"nodeType":"Property","messageId":"anyAssignment","endLine":43,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":43,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":43,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":48,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":48,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":48,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":48,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":49,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":49,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":49,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":49,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":50,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":50,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .role on an `any` value.","line":50,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":50,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":51,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":51,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":51,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":51,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":52,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":52,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .lastName on an `any` value.","line":52,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":52,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":53,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":53,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .emailVerified on an `any` value.","line":53,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":53,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":61,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":61,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":61,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":61,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":62,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":62,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":62,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":62,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":63,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":63,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":63,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":63,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":64,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":64,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .lastName on an `any` value.","line":64,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":64,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":65,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":65,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .role on an `any` value.","line":65,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":65,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":66,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":66,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":66,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":66,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":67,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":67,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .emailVerified on an `any` value.","line":67,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":42}],"suppressedMessages":[],"errorCount":30,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  UnauthorizedException,\n  BadRequestException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { ForgotPasswordDto, ResetPasswordDto } from './dto/reset-password.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { randomBytes } from 'crypto';\nimport { EmailService } from '../email/email.service';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n    private emailService: EmailService,\n    private config: ConfigService,\n  ) {}\n\n  async validateUser(email: string, password: string): Promise<any> {\n    const user = await this.prisma.user.findUnique({ where: { email } });\n    if (user && (await bcrypt.compare(password, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(loginDto: LoginDto) {\n    const user = await this.validateUser(loginDto.email, loginDto.password);\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { lastLogin: new Date() },\n    });\n\n    const payload = {\n      sub: user.id,\n      email: user.email,\n      role: user.role,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      emailVerified: user.emailVerified,\n    };\n\n    const expiresIn = loginDto.rememberMe ? '30d' : '1d';\n\n    return {\n      access_token: this.jwtService.sign(payload, { expiresIn }),\n      user: {\n        id: user.id,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        role: user.role,\n        companyName: user.companyName,\n        emailVerified: user.emailVerified,\n      },\n    };\n  }\n\n  async register(registerDto: RegisterDto) {\n    // Enforce application config: allowRegistration\n    try {\n      const row = await this.prisma.systemSettings.findUnique({\n        where: { key: 'allowRegistration' },\n      });\n      const allowRegistration =\n        row?.value === undefined ? true : Boolean(row.value as any);\n      if (!allowRegistration) {\n        throw new BadRequestException('Registration is disabled');\n      }\n    } catch (e) {\n      if (e instanceof BadRequestException) throw e;\n      // If settings table is missing, default to allowing registration\n    }\n\n    const existingUser = await this.prisma.user.findUnique({\n      where: { email: registerDto.email },\n    });\n\n    if (existingUser) {\n      throw new BadRequestException('User already exists');\n    }\n\n    const hashedPassword = await bcrypt.hash(registerDto.password, 10);\n    const verificationToken = randomBytes(32).toString('hex');\n    const verificationTokenExpiryHours = Number(\n      this.config.get('EMAIL_VERIFICATION_EXPIRATION_HOURS', 48),\n    );\n    const verificationTokenExpiry = new Date(\n      Date.now() + verificationTokenExpiryHours * 60 * 60 * 1000,\n    );\n\n    const user = await this.prisma.user.create({\n      data: {\n        ...registerDto,\n        password: hashedPassword,\n        verificationToken,\n        verificationTokenExpiry,\n      },\n      select: {\n        id: true,\n        email: true,\n        firstName: true,\n        lastName: true,\n        role: true,\n        companyName: true,\n      },\n    });\n\n    // Send email verification (fire-and-forget to avoid blocking registration on SMTP issues)\n    void (async () => {\n      try {\n        const fullUser = await this.prisma.user.findUnique({\n          where: { id: user.id },\n        });\n        if (fullUser) {\n          await this.emailService.sendEmailVerification(\n            fullUser,\n            verificationToken,\n          );\n        }\n      } catch (e) {\n        // Log and continue without failing registration\n        console.error('Failed to send verification email:', e);\n      }\n    })();\n\n    const payload = {\n      sub: user.id,\n      email: user.email,\n      role: user.role,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      emailVerified: false, // New users are not verified\n    };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        ...user,\n        emailVerified: false,\n      },\n    };\n  }\n\n  async forgotPassword(forgotPasswordDto: ForgotPasswordDto) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: forgotPasswordDto.email },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const resetToken = randomBytes(32).toString('hex');\n    const resetTokenExpiry = new Date(Date.now() + 3600000); // 1 hour\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: {\n        resetToken,\n        resetTokenExpiry,\n      },\n    });\n\n    try {\n      await this.emailService.sendPasswordResetEmail(user, resetToken);\n    } catch (e) {\n      console.error('Failed to send password reset email:', e);\n    }\n\n    return { message: 'Password reset email sent' };\n  }\n\n  async resetPassword(resetPasswordDto: ResetPasswordDto) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        resetToken: resetPasswordDto.token,\n        resetTokenExpiry: {\n          gt: new Date(),\n        },\n      },\n    });\n\n    if (!user) {\n      throw new BadRequestException('Invalid or expired reset token');\n    }\n\n    const hashedPassword = await bcrypt.hash(resetPasswordDto.newPassword, 10);\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: {\n        password: hashedPassword,\n        resetToken: null,\n        resetTokenExpiry: null,\n      },\n    });\n\n    return { message: 'Password reset successful' };\n  }\n\n  async verifyEmail(token: string) {\n    const user = await this.prisma.user.findFirst({\n      where: { verificationToken: token },\n    });\n\n    if (!user) {\n      throw new BadRequestException('Invalid verification token');\n    }\n\n    if (\n      user.verificationTokenExpiry &&\n      user.verificationTokenExpiry <= new Date()\n    ) {\n      throw new BadRequestException('Invalid or expired verification token');\n    }\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: {\n        emailVerified: true,\n        verificationToken: null,\n        verificationTokenExpiry: null,\n      },\n    });\n\n    // Send welcome email after successful verification (fire-and-forget to avoid blocking)\n    void (async () => {\n      try {\n        await this.emailService.sendWelcomeEmail(user);\n      } catch (e) {\n        console.error('Failed to send welcome email:', e);\n      }\n    })();\n\n    return { message: 'Email verified successfully' };\n  }\n\n  async getMe(userId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        email: true,\n        firstName: true,\n        lastName: true,\n        role: true,\n        companyName: true,\n        companyLogo: true,\n        companyAddress: true,\n        companyPhone: true,\n        companyEmail: true,\n        taxNumber: true,\n        currency: true,\n        invoicePrefix: true,\n        invoiceStartNumber: true,\n        taxRate: true,\n        paymentTerms: true,\n        subscriptionPlan: true,\n        subscriptionEnd: true,\n        invoiceLimit: true,\n        emailVerified: true,\n        createdAt: true,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  async refreshToken(user: { id: string; email: string; role: string }) {\n    // Reload user to reflect the latest verification status and profile info\n    const dbUser = await this.prisma.user.findUnique({\n      where: { id: user.id },\n    });\n    if (!dbUser) {\n      throw new NotFoundException('User not found');\n    }\n    const payload = {\n      sub: dbUser.id,\n      email: dbUser.email,\n      role: dbUser.role,\n      firstName: dbUser.firstName,\n      lastName: dbUser.lastName,\n      emailVerified: dbUser.emailVerified,\n    };\n\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async changePassword(userId: string, dto: ChangePasswordDto) {\n    const user = await this.prisma.user.findUnique({ where: { id: userId } });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const isValid = await bcrypt.compare(dto.currentPassword, user.password);\n    if (!isValid) {\n      throw new UnauthorizedException('Current password is incorrect');\n    }\n\n    const hashedPassword = await bcrypt.hash(dto.newPassword, 10);\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { password: hashedPassword },\n    });\n\n    return { message: 'Password changed successfully' };\n  }\n\n  async resendVerification(userId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    if (user.emailVerified) {\n      throw new BadRequestException('Email is already verified');\n    }\n\n    // Generate new verification token\n    const verificationToken = randomBytes(32).toString('hex');\n    const verificationTokenExpiryHours = Number(\n      this.config.get('EMAIL_VERIFICATION_EXPIRATION_HOURS', 48),\n    );\n    const verificationTokenExpiry = new Date(\n      Date.now() + verificationTokenExpiryHours * 60 * 60 * 1000,\n    );\n\n    await this.prisma.user.update({\n      where: { id: userId },\n      data: {\n        verificationToken,\n        verificationTokenExpiry,\n      },\n    });\n\n    // Send verification email (non-blocking)\n    try {\n      await this.emailService.sendEmailVerification(user, verificationToken);\n    } catch (e) {\n      console.error('Failed to send verification email:', e);\n      throw new BadRequestException('Failed to send verification email');\n    }\n\n    return { message: 'Verification email sent' };\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\dto\\change-password.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\dto\\login.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\dto\\register.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\dto\\reset-password.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\guards\\email-verified.guard.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":14,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":14,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":15,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":15,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":15,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":15,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":22,"column":16,"nodeType":"Property","messageId":"anyAssignment","endLine":22,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":22,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":22,"endColumn":27}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { PrismaService } from '../../../prisma/prisma.service';\n\n@Injectable()\nexport class EmailVerifiedGuard implements CanActivate {\n  constructor(private prisma: PrismaService) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    if (!user) {\n      return false;\n    }\n\n    const fullUser = await this.prisma.user.findUnique({\n      where: { id: user.id },\n      select: { emailVerified: true },\n    });\n\n    if (!fullUser?.emailVerified) {\n      throw new ForbiddenException({\n        message: 'Email verification required',\n        code: 'EMAIL_NOT_VERIFIED',\n        requiresVerification: true,\n      });\n    }\n\n    return true;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\guards\\jwt-auth.guard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\guards\\roles.guard.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'UserRole' is defined but never used.","line":3,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":18,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":18,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .role on an `any` value.","line":19,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":19,"endColumn":50}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { UserRole } from '../../../common/enums';\nimport { ROLES_KEY } from '../../../common/decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride<string[]>(\n      ROLES_KEY,\n      [context.getHandler(), context.getClass()],\n    );\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.role === role);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\strategies\\jwt.strategy.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":13,"column":5,"nodeType":"Super","messageId":"unsafeCall","endLine":13,"endColumn":10},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":14,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":14,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":14,"column":23,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":14,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fromAuthHeaderAsBearerToken on an `error` typed value.","line":14,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":14,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":16,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":20,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":26,"column":16,"nodeType":"Property","messageId":"anyAssignment","endLine":26,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sub on an `any` value.","line":26,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":26,"endColumn":31}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from '../../../prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private prisma: PrismaService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey:\n        configService.get('JWT_SECRET') ||\n        (configService.get('NODE_ENV') === 'production'\n          ? undefined\n          : 'dev_jwt_secret'),\n    });\n  }\n\n  async validate(payload: any) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: payload.sub },\n    });\n\n    if (!user || !user.isActive) {\n      throw new UnauthorizedException();\n    }\n\n    return {\n      id: user.id,\n      email: user.email,\n      role: user.role,\n      firstName: user.firstName,\n      lastName: user.lastName,\n    };\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\auth\\strategies\\local.strategy.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":13,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":13,"endColumn":70}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise<any> {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n    return user;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\clients\\clients.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":26,"column":39,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":26,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":26,"column":44,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":26,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":40,"column":40,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":40,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":40,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":40,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":45,"column":46,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":45,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":45,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":45,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":50,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":50,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":50,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":50,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":55,"column":54,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":55,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":55,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":55,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":64,"column":43,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":64,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":64,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":64,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":69,"column":43,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":69,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":69,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":69,"endColumn":50}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { ClientsService } from './clients.service';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { EmailVerifiedGuard } from '../auth/guards/email-verified.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\n\n@Controller('clients')\n@UseGuards(JwtAuthGuard, EmailVerifiedGuard)\nexport class ClientsController {\n  constructor(private readonly clientsService: ClientsService) {}\n\n  @Post()\n  create(@CurrentUser() user, @Body() createClientDto: CreateClientDto) {\n    return this.clientsService.create(user.id, createClientDto);\n  }\n\n  @Get()\n  findAll(\n    @CurrentUser() user,\n    @Query('search') search?: string,\n    @Query('isActive') isActive?: string,\n  ) {\n    const query = {\n      search,\n      isActive:\n        isActive === 'true' ? true : isActive === 'false' ? false : undefined,\n    };\n    return this.clientsService.findAll(user.id, query);\n  }\n\n  @Get('search')\n  searchClients(@CurrentUser() user, @Query('q') search: string) {\n    return this.clientsService.searchClients(user.id, search);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @CurrentUser() user) {\n    return this.clientsService.findOne(id, user.id);\n  }\n\n  @Get(':id/invoices')\n  getClientInvoices(@Param('id') id: string, @CurrentUser() user) {\n    return this.clientsService.getClientInvoices(id, user.id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Body() updateClientDto: UpdateClientDto,\n  ) {\n    return this.clientsService.update(id, user.id, updateClientDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @CurrentUser() user) {\n    return this.clientsService.remove(id, user.id);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\clients\\clients.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\clients\\clients.service.ts","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":60,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":60,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1781,1781],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .isActive on an `any` value.","line":72,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":72,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .OR on an `any` value.","line":76,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":76,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":84,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":84,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":128,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":128,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":128,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":128,"endColumn":37},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":130,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":130,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3376,3376],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4088,4088],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { CreateClientDto } from './dto/create-client.dto';\nimport { UpdateClientDto } from './dto/update-client.dto';\nimport { EmailService } from '../email/email.service';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@Injectable()\nexport class ClientsService {\n  constructor(\n    private prisma: PrismaService,\n    private emailService: EmailService,\n    private notifications: NotificationsService,\n  ) {}\n\n  async create(userId: string, createClientDto: CreateClientDto) {\n    // Check if client with same email already exists for this user\n    const existingClient = await this.prisma.client.findFirst({\n      where: {\n        userId,\n        email: createClientDto.email,\n      },\n    });\n\n    if (existingClient) {\n      throw new BadRequestException('Client with this email already exists');\n    }\n\n    const client = await this.prisma.client.create({\n      data: {\n        ...createClientDto,\n        userId,\n      },\n    });\n\n    // Notify user if preferences allow\n    try {\n      const user = await this.prisma.user.findUnique({ where: { id: userId } });\n      if (user?.emailNotificationsEnabled && user?.emailNotifyNewClientAdded) {\n        await this.emailService.sendNewClientAddedEmail(\n          user as any,\n          client as any,\n        );\n      }\n    } catch (err) {\n      // Do not fail creation due to email issues\n      console.error('Failed to send new client added email:', err);\n    }\n\n    // Emit SSE event (non-blocking)\n    try {\n      this.notifications.emit(userId, 'client.created', {\n        id: client.id,\n        name: client.name,\n      });\n    } catch {}\n\n    return client;\n  }\n\n  async findAll(\n    userId: string,\n    query?: { search?: string; isActive?: boolean },\n  ) {\n    const where: any = { userId };\n\n    if (query?.isActive !== undefined) {\n      where.isActive = query.isActive;\n    }\n\n    if (query?.search) {\n      where.OR = [\n        { name: { contains: query.search, mode: 'insensitive' } },\n        { email: { contains: query.search, mode: 'insensitive' } },\n        { companyName: { contains: query.search, mode: 'insensitive' } },\n      ];\n    }\n\n    return this.prisma.client.findMany({\n      where,\n      orderBy: { createdAt: 'desc' },\n      include: {\n        _count: {\n          select: { invoices: true },\n        },\n      },\n    });\n  }\n\n  async findOne(id: string, userId: string) {\n    const client = await this.prisma.client.findFirst({\n      where: { id, userId },\n      include: {\n        _count: {\n          select: { invoices: true },\n        },\n      },\n    });\n\n    if (!client) {\n      throw new NotFoundException('Client not found');\n    }\n\n    return client;\n  }\n\n  async update(id: string, userId: string, updateClientDto: UpdateClientDto) {\n    const client = await this.prisma.client.findFirst({\n      where: { id, userId },\n    });\n\n    if (!client) {\n      throw new NotFoundException('Client not found');\n    }\n\n    const updated = await this.prisma.client.update({\n      where: { id },\n      data: updateClientDto,\n    });\n    // Emit SSE event (non-blocking)\n    try {\n      this.notifications.emit(userId, 'client.updated', {\n        id,\n        name: (updated as any)?.name,\n      });\n    } catch {}\n\n    return updated;\n  }\n\n  async remove(id: string, userId: string) {\n    const client = await this.prisma.client.findFirst({\n      where: { id, userId },\n    });\n\n    if (!client) {\n      throw new NotFoundException('Client not found');\n    }\n\n    // Check if client has invoices\n    const invoiceCount = await this.prisma.invoice.count({\n      where: { clientId: id },\n    });\n\n    if (invoiceCount > 0) {\n      throw new BadRequestException(\n        'Cannot delete client with existing invoices',\n      );\n    }\n\n    await this.prisma.client.delete({\n      where: { id },\n    });\n\n    // Emit SSE event (non-blocking)\n    try {\n      this.notifications.emit(userId, 'client.deleted', { id });\n    } catch {}\n\n    return { message: 'Client deleted successfully' };\n  }\n\n  async getClientInvoices(id: string, userId: string) {\n    const client = await this.prisma.client.findFirst({\n      where: { id, userId },\n    });\n\n    if (!client) {\n      throw new NotFoundException('Client not found');\n    }\n\n    const invoices = await this.prisma.invoice.findMany({\n      where: { clientId: id, userId },\n      orderBy: { createdAt: 'desc' },\n      include: {\n        items: true,\n        payments: true,\n      },\n    });\n\n    return invoices;\n  }\n\n  async searchClients(userId: string, search: string) {\n    return this.prisma.client.findMany({\n      where: {\n        userId,\n        OR: [\n          { name: { contains: search, mode: 'insensitive' } },\n          { email: { contains: search, mode: 'insensitive' } },\n          { companyName: { contains: search, mode: 'insensitive' } },\n        ],\n      },\n      take: 10,\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\clients\\dto\\create-client.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\clients\\dto\\update-client.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\email\\email.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\email\\email.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toString on an `any` value.","line":33,"column":67,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":33,"endColumn":75},{"ruleId":"@typescript-eslint/no-base-to-string","severity":2,"message":"'val' may use Object's default stringification format ('[object Object]') when stringified.","line":34,"column":23,"nodeType":"Identifier","messageId":"baseToString","endLine":34,"endColumn":26},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":35,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":35,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1142,1142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":187,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":187,"endColumn":49},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":187,"column":24,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":187,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":193,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":193,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .setApiKey on an `any` value.","line":193,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":193,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":201,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":203,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .content on an `any` value.","line":201,"column":40,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":201,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":202,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":202,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .content on an `any` value.","line":202,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":202,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":203,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":203,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .content on an `any` value.","line":203,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":203,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":204,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":204,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .filename on an `any` value.","line":204,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":204,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":205,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":205,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .contentType on an `any` value.","line":205,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":205,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":209,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":221,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":223,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":223,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":223,"column":34,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":223,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .send on an `any` value.","line":223,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":223,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .headers on an `any` value.","line":226,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":226,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .statusCode on an `any` value.","line":226,"column":60,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":226,"endColumn":70},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":229,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":229,"endColumn":70},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .headers on an `any` value.","line":229,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":229,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .code on an `any` value.","line":233,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":233,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":264,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":264,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .messageId on an `any` value.","line":265,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":265,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":266,"column":7,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":266,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":300,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":300,"endColumn":49},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":300,"column":24,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":300,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":309,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":309,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .setApiKey on an `any` value.","line":309,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":309,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":310,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":321,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":322,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":322,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":322,"column":34,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":322,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .send on an `any` value.","line":322,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":322,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":325,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":325,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .headers on an `any` value.","line":325,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":325,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .code on an `any` value.","line":328,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":328,"endColumn":20},{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":339,"column":5,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":351,"endColumn":6},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":340,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":347,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":348,"column":31,"nodeType":"Property","messageId":"anyAssignment","endLine":348,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .messageId on an `any` value.","line":348,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":348,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":356,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":356,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":356,"column":71,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":356,"endColumn":75},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":356,"column":99,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":356,"endColumn":103},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":356,"column":130,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":356,"endColumn":134},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":357,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":357,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareEnabled on an `any` value.","line":359,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":359,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareId on an `any` value.","line":359,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":359,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareId on an `any` value.","line":360,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":360,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | URL | undefined`.","line":360,"column":58,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":360,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":381,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":381,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .client on an `any` value.","line":385,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":385,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":387,"column":65,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":387,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":387,"column":93,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":387,"endColumn":97},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":387,"column":124,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":387,"endColumn":128},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":392,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":392,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":396,"column":34,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":396,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceDate on an `any` value.","line":396,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":396,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":400,"column":34,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":400,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .dueDate on an `any` value.","line":400,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":400,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":404,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":404,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":404,"column":45,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":404,"endColumn":71},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .balanceDue on an `any` value.","line":404,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":404,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .notes on an `any` value.","line":408,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":408,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .notes on an `any` value.","line":408,"column":69,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":408,"endColumn":74},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":425,"column":61,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":425,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":434,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":434,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":440,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":440,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":440,"column":61,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":440,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":440,"column":92,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":440,"endColumn":96},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":441,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":441,"endColumn":68},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":441,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":441,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":441,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":441,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":449,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":453,"endColumn":8},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":449,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":449,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .client on an `any` value.","line":449,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":449,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":450,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":450,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":457,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":457,"endColumn":78},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | URL | undefined`.","line":460,"column":7,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":460,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":486,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":486,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":511,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":511,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":511,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":511,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":511,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":511,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":515,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":515,"endColumn":78},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | URL | undefined`.","line":518,"column":7,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":518,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":544,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":544,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":577,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":577,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":577,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":577,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":577,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":577,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":605,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":605,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":648,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":648,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":648,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":648,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":648,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":648,"endColumn":37},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'siteName' is assigned a value but never used.","line":657,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":657,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":658,"column":62,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":658,"endColumn":75},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":681,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":681,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":683,"column":67,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":683,"endColumn":71},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":688,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":688,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":692,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":692,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":696,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":696,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":716,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":716,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":716,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":716,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":716,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":716,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":726,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":726,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":727,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":727,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareEnabled on an `any` value.","line":729,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":729,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareId on an `any` value.","line":729,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":729,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareId on an `any` value.","line":730,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":730,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | URL | undefined`.","line":730,"column":58,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":730,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":754,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":754,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":757,"column":87,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":757,"endColumn":100},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":758,"column":84,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":758,"endColumn":92},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":760,"column":84,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":760,"endColumn":92},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .balanceDue on an `any` value.","line":760,"column":111,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":760,"endColumn":121},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .totalAmount on an `any` value.","line":760,"column":146,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":760,"endColumn":157},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paidAmount on an `any` value.","line":760,"column":175,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":760,"endColumn":185},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":766,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":766,"endColumn":70},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":773,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":773,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":773,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":773,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":773,"column":73,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":773,"endColumn":82},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .lastName on an `any` value.","line":773,"column":91,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":773,"endColumn":99},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":774,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":774,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyEmail on an `any` value.","line":774,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":774,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":774,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":774,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":781,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":785,"endColumn":8},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":781,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":781,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":781,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":781,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":782,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":782,"endColumn":14},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"\"BASIC\" is overridden by string in this union type.","line":790,"column":11,"nodeType":"TSLiteralType","messageId":"literalOverridden","endLine":790,"endColumn":18},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"\"PREMIUM\" is overridden by string in this union type.","line":790,"column":21,"nodeType":"TSLiteralType","messageId":"literalOverridden","endLine":790,"endColumn":30},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"\"ENTERPRISE\" is overridden by string in this union type.","line":790,"column":33,"nodeType":"TSLiteralType","messageId":"literalOverridden","endLine":790,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":812,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":812,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":825,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":825,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":825,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":825,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":825,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":825,"endColumn":37},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"\"FREE\" is overridden by string in this union type.","line":830,"column":11,"nodeType":"TSLiteralType","messageId":"literalOverridden","endLine":830,"endColumn":17},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"\"BASIC\" is overridden by string in this union type.","line":830,"column":20,"nodeType":"TSLiteralType","messageId":"literalOverridden","endLine":830,"endColumn":27},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"\"PREMIUM\" is overridden by string in this union type.","line":830,"column":30,"nodeType":"TSLiteralType","messageId":"literalOverridden","endLine":830,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":850,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":850,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":861,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":861,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":861,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":861,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":861,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":861,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":865,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":865,"endColumn":72},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .client on an `any` value.","line":890,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":890,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":901,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":901,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":905,"column":34,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":905,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceDate on an `any` value.","line":905,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":905,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":909,"column":34,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":909,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .dueDate on an `any` value.","line":909,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":909,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":913,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":913,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":913,"column":45,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":913,"endColumn":71},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .balanceDue on an `any` value.","line":913,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":913,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":926,"column":61,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":926,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":932,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":932,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":932,"column":61,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":932,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":932,"column":92,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":932,"endColumn":96},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":933,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":933,"endColumn":68},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":933,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":933,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":933,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":933,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":940,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":944,"endColumn":8},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":940,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":940,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .client on an `any` value.","line":940,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":940,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":941,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":941,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":949,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":949,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":970,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":970,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":975,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":975,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":979,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":979,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":981,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":981,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":981,"column":103,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":981,"endColumn":114},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":987,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":987,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `Promise<any>`.","line":994,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":994,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":994,"column":27,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":994,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":994,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":994,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1008,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1008,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1009,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1013,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1014,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1017,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1018,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1027,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1025,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":1025,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1026,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":1026,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":1030,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1030,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":1030,"column":82,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1030,"endColumn":93},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":1034,"column":44,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1034,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":1037,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1037,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":1038,"column":61,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1038,"endColumn":72},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":1040,"column":124,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":1040,"endColumn":149},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceDate on an `any` value.","line":1040,"column":138,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1040,"endColumn":149},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":1041,"column":120,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":1041,"endColumn":141},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .dueDate on an `any` value.","line":1041,"column":134,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1041,"endColumn":141},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":1042,"column":128,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1042,"endColumn":136},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":1042,"column":140,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":1042,"endColumn":172},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .balanceDue on an `any` value.","line":1042,"column":154,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1042,"endColumn":164},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .notes on an `any` value.","line":1044,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1044,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":1053,"column":67,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1053,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":1058,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1058,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":1061,"column":129,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1061,"endColumn":142},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":1062,"column":118,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":1062,"endColumn":139},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .dueDate on an `any` value.","line":1062,"column":132,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1062,"endColumn":139},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":1063,"column":133,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1063,"endColumn":141},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":1063,"column":145,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":1063,"endColumn":177},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .balanceDue on an `any` value.","line":1063,"column":159,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1063,"endColumn":169},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":1072,"column":70,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1072,"endColumn":83},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":1077,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1077,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":1078,"column":63,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1078,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":1078,"column":97,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1078,"endColumn":110},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":1091,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1091,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":1106,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1106,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .firstName on an `any` value.","line":1121,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1121,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1142,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1142,"endColumn":79},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1146,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":1149,"endColumn":42},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'from' is assigned a value but never used.","line":1154,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":1154,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1172,"column":30,"nodeType":"Property","messageId":"anyAssignment","endLine":1172,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1190,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":1190,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":1190,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1190,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1221,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1221,"endColumn":49},{"ruleId":"@typescript-eslint/no-require-imports","severity":2,"message":"A `require()` style import is forbidden.","line":1221,"column":24,"nodeType":"CallExpression","messageId":"noRequireImports","endLine":1221,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":1230,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":1230,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .setApiKey on an `any` value.","line":1230,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1230,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1231,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1240,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1241,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1241,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":1241,"column":34,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":1241,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .send on an `any` value.","line":1241,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1241,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1244,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":1244,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .headers on an `any` value.","line":1244,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1244,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .code on an `any` value.","line":1247,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1247,"endColumn":20},{"ruleId":"no-useless-catch","severity":2,"message":"Unnecessary try/catch wrapper.","line":1258,"column":5,"nodeType":"TryStatement","messageId":"unnecessaryCatch","endLine":1263,"endColumn":6},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1259,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":1259,"endColumn":75},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1260,"column":31,"nodeType":"Property","messageId":"anyAssignment","endLine":1260,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .messageId on an `any` value.","line":1260,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":1260,"endColumn":56}],"suppressedMessages":[],"errorCount":210,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport * as nodemailer from 'nodemailer';\nimport { PrismaService } from '../../prisma/prisma.service';\n\n@Injectable()\nexport class EmailService {\n  constructor(\n    private configService: ConfigService,\n    private prisma: PrismaService,\n  ) {}\n\n  private toBool(v: any, def = false): boolean {\n    if (v === undefined || v === null || v === '') return def;\n    if (typeof v === 'boolean') return v;\n    if (typeof v === 'number') return v !== 0;\n    if (typeof v === 'string') return v.toLowerCase() === 'true' || v === '1';\n    return def;\n  }\n\n  private toNum(v: any, def: number): number {\n    const n = Number(v);\n    return Number.isFinite(n) ? n : def;\n  }\n\n  private async getSiteName(): Promise<string> {\n    try {\n      const row = await this.prisma.systemSettings.findUnique({\n        where: { key: 'siteName' },\n      });\n      const val = row?.value;\n      if (typeof val === 'string' && val.trim()) return val.trim();\n      if (typeof val === 'object' && val !== null && (val as any).toString)\n        return String(val);\n    } catch {}\n    return 'Invoicy';\n  }\n\n  private async loadEmailSettings(): Promise<{\n    host: string;\n    port: number;\n    secure: boolean;\n    user?: string;\n    pass?: string;\n    from: string;\n    provider: 'SMTP' | 'SENDGRID';\n    sendgridApiKey?: string;\n    trackOpens: boolean;\n    trackClicks: boolean;\n    connectionTimeout: number;\n    greetingTimeout: number;\n    socketTimeout: number;\n    logger: boolean;\n  }> {\n    const keys = [\n      'EMAIL_HOST',\n      'EMAIL_PORT',\n      'EMAIL_SECURE',\n      'EMAIL_USER',\n      'EMAIL_PASSWORD',\n      'EMAIL_FROM',\n      'EMAIL_PROVIDER',\n      'SENDGRID_API_KEY',\n      'EMAIL_TRACK_OPENS',\n      'EMAIL_TRACK_CLICKS',\n      'EMAIL_CONNECTION_TIMEOUT_MS',\n      'EMAIL_GREETING_TIMEOUT_MS',\n      'EMAIL_SOCKET_TIMEOUT_MS',\n    ];\n    const rows = await this.prisma.systemSettings.findMany({\n      where: { key: { in: keys } },\n    });\n    const map = new Map(rows.map((r) => [r.key, r.value] as const));\n\n    const host = (map.get('EMAIL_HOST') ??\n      this.configService.get('EMAIL_HOST') ??\n      'smtp.gmail.com') as string;\n    const port = this.toNum(\n      map.get('EMAIL_PORT') ?? this.configService.get('EMAIL_PORT') ?? 587,\n      587,\n    );\n    const secure = this.toBool(\n      map.get('EMAIL_SECURE') ??\n        this.configService.get('EMAIL_SECURE') ??\n        false,\n      false,\n    );\n    const user = (map.get('EMAIL_USER') ??\n      this.configService.get('EMAIL_USER')) as string | undefined;\n    const pass = (map.get('EMAIL_PASSWORD') ??\n      this.configService.get('EMAIL_PASSWORD')) as string | undefined;\n    const from = (map.get('EMAIL_FROM') ??\n      this.configService.get('EMAIL_FROM') ??\n      'noreply@invoicy.com') as string;\n    const providerRaw = (map.get('EMAIL_PROVIDER') ??\n      this.configService.get('EMAIL_PROVIDER') ??\n      'SMTP') as string;\n    const provider =\n      String(providerRaw || 'SMTP').toUpperCase() === 'SENDGRID'\n        ? 'SENDGRID'\n        : 'SMTP';\n    const sendgridApiKey = (map.get('SENDGRID_API_KEY') ??\n      this.configService.get('SENDGRID_API_KEY')) as string | undefined;\n    const trackOpens = this.toBool(\n      map.get('EMAIL_TRACK_OPENS') ??\n        this.configService.get('EMAIL_TRACK_OPENS') ??\n        true,\n      true,\n    );\n    const trackClicks = this.toBool(\n      map.get('EMAIL_TRACK_CLICKS') ??\n        this.configService.get('EMAIL_TRACK_CLICKS') ??\n        true,\n      true,\n    );\n    const connectionTimeout = this.toNum(\n      map.get('EMAIL_CONNECTION_TIMEOUT_MS') ??\n        this.configService.get('EMAIL_CONNECTION_TIMEOUT_MS') ??\n        10000,\n      10000,\n    );\n    const greetingTimeout = this.toNum(\n      map.get('EMAIL_GREETING_TIMEOUT_MS') ??\n        this.configService.get('EMAIL_GREETING_TIMEOUT_MS') ??\n        10000,\n      10000,\n    );\n    const socketTimeout = this.toNum(\n      map.get('EMAIL_SOCKET_TIMEOUT_MS') ??\n        this.configService.get('EMAIL_SOCKET_TIMEOUT_MS') ??\n        20000,\n      20000,\n    );\n    const logger = this.configService.get('NODE_ENV') !== 'production';\n\n    return {\n      host,\n      port,\n      secure,\n      user,\n      pass,\n      from,\n      provider,\n      sendgridApiKey,\n      trackOpens,\n      trackClicks,\n      connectionTimeout,\n      greetingTimeout,\n      socketTimeout,\n      logger,\n    };\n  }\n\n  private async buildTransporterFromSettings(): Promise<nodemailer.Transporter> {\n    const cfg = await this.loadEmailSettings();\n    return nodemailer.createTransport({\n      host: cfg.host,\n      port: cfg.port,\n      secure: cfg.secure,\n      auth:\n        cfg.user && cfg.pass ? { user: cfg.user, pass: cfg.pass } : undefined,\n      connectionTimeout: cfg.connectionTimeout,\n      greetingTimeout: cfg.greetingTimeout,\n      socketTimeout: cfg.socketTimeout,\n      logger: cfg.logger,\n    });\n  }\n\n  async sendEmail(\n    to: string,\n    subject: string,\n    html: string,\n    attachments?: any[],\n    options?: {\n      replyTo?: string;\n      fromName?: string;\n      headers?: Record<string, string>;\n    },\n  ) {\n    const cfg = await this.loadEmailSettings();\n\n    // Choose provider\n    if (cfg.provider === 'SENDGRID') {\n      try {\n        // Dynamically load to avoid hard dependency if not installed\n\n        const sgMail = require('@sendgrid/mail');\n        if (!cfg.sendgridApiKey) {\n          throw new Error(\n            'SendGrid selected but SENDGRID_API_KEY is not configured',\n          );\n        }\n        sgMail.setApiKey(cfg.sendgridApiKey);\n\n        const fromEmail = cfg.from;\n        const from = options?.fromName\n          ? { email: fromEmail, name: options.fromName }\n          : { email: fromEmail };\n\n        const sgAttachments = (attachments || []).map((att) => ({\n          content: Buffer.isBuffer(att.content)\n            ? att.content.toString('base64')\n            : att.content?.toString?.('base64') || '',\n          filename: att.filename,\n          type: att.contentType || 'application/octet-stream',\n          disposition: 'attachment',\n        }));\n\n        const msg = {\n          to,\n          from,\n          subject,\n          html,\n          attachments: sgAttachments.length ? sgAttachments : undefined,\n          replyTo: options?.replyTo,\n          headers: options?.headers,\n          trackingSettings: {\n            clickTracking: { enable: cfg.trackClicks },\n            openTracking: { enable: cfg.trackOpens },\n          },\n        } as any;\n\n        const [response] = await sgMail.send(msg);\n        console.log(\n          'Email sent via SendGrid:',\n          response?.headers?.['x-message-id'] || response?.statusCode,\n        );\n        return {\n          messageId: response?.headers?.['x-message-id'] || undefined,\n          provider: 'SENDGRID',\n        } as const;\n      } catch (error) {\n        if (error?.code === 'MODULE_NOT_FOUND') {\n          console.error(\n            'SendGrid provider selected but @sendgrid/mail is not installed',\n          );\n          throw new Error(\n            'SendGrid provider selected but @sendgrid/mail package is not installed on the server',\n          );\n        }\n        console.error('Error sending email via SendGrid:', error);\n        throw error;\n      }\n    }\n\n    // Default to SMTP (nodemailer)\n    const transporter = await this.buildTransporterFromSettings();\n    try {\n      const fromAddress = cfg.from;\n      const from = options?.fromName\n        ? `\"${options.fromName}\" <${fromAddress}>`\n        : fromAddress;\n\n      const mailOptions: nodemailer.SendMailOptions = {\n        from,\n        to,\n        subject,\n        html,\n        attachments,\n        replyTo: options?.replyTo,\n        headers: options?.headers,\n      };\n\n      const info = await transporter.sendMail(mailOptions);\n      console.log('Email sent (SMTP):', info.messageId);\n      return info;\n    } catch (error) {\n      console.error('Error sending email (SMTP):', error);\n      throw error;\n    }\n  }\n\n  async sendTestInvoiceEmail(to: string, overrides?: Record<string, any>) {\n    if (!to) {\n      throw new Error('Recipient email (to) is required');\n    }\n    const base = await this.loadEmailSettings();\n\n    const providerOverride = (overrides?.EMAIL_PROVIDER || base.provider) as\n      | 'SMTP'\n      | 'SENDGRID';\n    const from = (overrides?.EMAIL_FROM ?? base.from) as string;\n\n    // Build sample invoice subject/html using previewTemplate for consistency\n    const preview = await this.previewTemplate('invoice');\n    const siteName = await this.getSiteName();\n    const subject = preview.subject || `Invoice Test from ${siteName}`;\n    const html = preview.html;\n\n    // Friendly From and Reply-To (sample)\n    const fromName = `Acme Inc. via ${siteName}`;\n    const replyTo = 'billing@example.com';\n    const headers: Record<string, string> = {\n      'List-Unsubscribe': `<mailto:${replyTo}?subject=Unsubscribe>`,\n      'List-Unsubscribe-Post': 'List-Unsubscribe=One-Click',\n    };\n\n    if (providerOverride === 'SENDGRID') {\n      try {\n        const sgMail = require('@sendgrid/mail');\n        const apiKey = (overrides?.SENDGRID_API_KEY || base.sendgridApiKey) as\n          | string\n          | undefined;\n        if (!apiKey) {\n          throw new Error(\n            'SENDGRID_API_KEY is required to send test invoice email with SendGrid',\n          );\n        }\n        sgMail.setApiKey(apiKey);\n        const msg = {\n          to,\n          from: { email: from, name: fromName },\n          subject,\n          html,\n          replyTo,\n          headers,\n          trackingSettings: {\n            clickTracking: { enable: base.trackClicks },\n            openTracking: { enable: base.trackOpens },\n          },\n        } as any;\n        const [response] = await sgMail.send(msg);\n        return {\n          success: true,\n          messageId: response?.headers?.['x-message-id'],\n        };\n      } catch (e: any) {\n        if (e?.code === 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'SendGrid test requested but @sendgrid/mail is not installed',\n          );\n        }\n        throw e;\n      }\n    }\n\n    // Default to SMTP test (with overrides)\n    const transporter = await this.buildTransporterWithOverrides(overrides);\n    try {\n      const info = await transporter.sendMail({\n        from: fromName ? `\"${fromName}\" <${from}>` : from,\n        to,\n        subject,\n        html,\n        headers,\n        replyTo,\n      });\n      return { success: true, messageId: info.messageId };\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async sendInvoiceEmail(invoice: any, pdfBuffer: Buffer) {\n    const siteName = await this.getSiteName();\n    const subject = `Invoice #${invoice.invoiceNumber} from ${invoice.user.companyName || invoice.user.firstName + ' ' + invoice.user.lastName}`;\n    const appUrl = this.configService.get('APP_URL') || 'http://localhost:3000';\n    const publicLink =\n      invoice?.shareEnabled && invoice?.shareId\n        ? new URL(`/public/invoices/${invoice.shareId}`, appUrl).toString()\n        : undefined;\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #4F46E5; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background-color: #4F46E5; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n          .invoice-details { background-color: white; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .detail-row { display: flex; justify-content: space-between; margin: 10px 0; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Invoice #${invoice.invoiceNumber}</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Dear ${invoice.client.name},</p>\n            \n            <p>Please find attached your invoice from ${invoice.user.companyName || invoice.user.firstName + ' ' + invoice.user.lastName}.</p>\n            \n            <div class=\"invoice-details\">\n              <div class=\"detail-row\">\n                <strong>Invoice Number:</strong>\n                <span>${invoice.invoiceNumber}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Invoice Date:</strong>\n                <span>${new Date(invoice.invoiceDate).toLocaleDateString()}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Due Date:</strong>\n                <span>${new Date(invoice.dueDate).toLocaleDateString()}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Balance Due:</strong>\n                <span>${invoice.currency} ${invoice.balanceDue.toFixed(2)}</span>\n              </div>\n            </div>\n            \n            ${invoice.notes ? `<p><strong>Notes:</strong> ${invoice.notes}</p>` : ''}\n            \n            <p>Please make payment by the due date mentioned above.</p>\n            ${\n              publicLink\n                ? `<p style=\"text-align:center\"><a href=\"${publicLink}\" class=\"button\">View & Pay Invoice</a></p>\n            <p style=\"text-align:center;color:#6b7280;font-size:12px\">If the button doesn't work, copy and paste this link: <span style=\"word-break:break-all;color:#4F46E5\">${publicLink}</span></p>`\n                : ''\n            }\n            \n            <p>If you have any questions about this invoice, please don't hesitate to contact us.</p>\n            \n            <p>Thank you for your business!</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated email. Please do not reply directly to this message.</p>\n            <p>&copy; ${new Date().getFullYear()} ${invoice.user.companyName || siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    const attachments = [\n      {\n        filename: `Invoice_${invoice.invoiceNumber}.pdf`,\n        content: pdfBuffer,\n        contentType: 'application/pdf',\n      },\n    ];\n\n    const fromName = `${invoice.user.companyName || invoice.user.firstName + ' ' + invoice.user.lastName} via ${siteName}`;\n    const replyTo = invoice.user.companyEmail || invoice.user.email;\n    const headers: Record<string, string> = {};\n    if (replyTo) {\n      // Basic unsubscribe hint via mailto for clients; real one-click can be added later\n      headers['List-Unsubscribe'] = `<mailto:${replyTo}?subject=Unsubscribe>`;\n      headers['List-Unsubscribe-Post'] = 'List-Unsubscribe=One-Click';\n    }\n\n    return this.sendEmail(invoice.client.email, subject, html, attachments, {\n      replyTo,\n      fromName,\n      headers,\n    });\n  }\n\n  async sendPasswordResetEmail(user: any, resetToken: string) {\n    const base = this.configService.get('APP_URL') || 'http://localhost:3000';\n    const resetUrl = new URL(\n      `/reset-password?token=${resetToken}`,\n      base,\n    ).toString();\n\n    const siteName = await this.getSiteName();\n    const subject = 'Password Reset Request';\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #4F46E5; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background-color: #4F46E5; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Password Reset</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Hi ${user.firstName || 'User'},</p>\n            \n            <p>We received a request to reset your password. Click the button below to reset it:</p>\n            \n            <center>\n              <a href=\"${resetUrl}\" class=\"button\">Reset Password</a>\n            </center>\n            \n            <p>Or copy and paste this link into your browser:</p>\n            <p style=\"word-break: break-all; color: #4F46E5;\">${resetUrl}</p>\n            \n            <p>This link will expire in 1 hour for security reasons.</p>\n            \n            <p>If you didn't request a password reset, please ignore this email or contact support if you have concerns.</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated email. Please do not reply directly to this message.</p>\n            <p>&copy; ${new Date().getFullYear()} ${siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  async sendEmailVerification(user: any, verificationToken: string) {\n    const base = this.configService.get('APP_URL') || 'http://localhost:3000';\n    const verifyUrl = new URL(\n      `/verify-email?token=${verificationToken}`,\n      base,\n    ).toString();\n\n    const siteName = await this.getSiteName();\n    const subject = `Welcome to ${siteName} - Verify Your Email`;\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #4F46E5; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background-color: #4F46E5; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Welcome to ${siteName}!</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Hi ${user.firstName || 'User'},</p>\n            \n            <p>Welcome to ${siteName}! We're excited to have you on board. To get started and access all features, please verify your email address by clicking the button below:</p>\n            \n            <center>\n              <a href=\"${verifyUrl}\" class=\"button\">Verify Email & Get Started</a>\n            </center>\n            \n            <p>Or copy and paste this link into your browser:</p>\n            <p style=\"word-break: break-all; color: #4F46E5;\">${verifyUrl}</p>\n            \n            <p>This verification link will expire in ${Number(this.configService.get('EMAIL_VERIFICATION_EXPIRATION_HOURS', 48))} hours.</p>\n            \n            <p><strong>What's next?</strong></p>\n            <ul>\n              <li>Create your first invoice</li>\n              <li>Add clients to your database</li>\n              <li>Set up payment tracking</li>\n              <li>Customize your invoice templates</li>\n            </ul>\n            \n            <p>Once verified, you'll have full access to all ${siteName} features!</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated email. Please do not reply directly to this message.</p>\n            <p>&copy; ${new Date().getFullYear()} ${siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  async sendWelcomeEmail(user: any) {\n    const siteName = await this.getSiteName();\n    const subject = `Welcome to ${siteName}!`;\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #4F46E5; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background-color: #4F46E5; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .feature { padding: 10px 0; border-bottom: 1px solid #ddd; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Welcome to ${siteName}!</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Hi ${user.firstName || 'User'},</p>\n            \n            <p>Welcome aboard! We're excited to have you as part of the ${siteName} community.</p>\n            \n            <h3>Here's what you can do with ${siteName}:</h3>\n            \n            <div class=\"feature\">\n              <strong>📄 Create Professional Invoices</strong>\n              <p>Design and send beautiful invoices in minutes</p>\n            </div>\n            \n            <div class=\"feature\">\n              <strong>👥 Manage Clients</strong>\n              <p>Keep all your client information organized in one place</p>\n            </div>\n            \n            <div class=\"feature\">\n              <strong>💰 Track Payments</strong>\n              <p>Monitor payment status and send reminders automatically</p>\n            </div>\n            \n            <div class=\"feature\">\n              <strong>📊 View Analytics</strong>\n              <p>Get insights into your business performance</p>\n            </div>\n            \n            <center>\n              <a href=\"${new URL('/dashboard', this.configService.get('APP_URL') || 'http://localhost:3000').toString()}\" class=\"button\">Go to Dashboard</a>\n            </center>\n            \n            <p>If you have any questions, feel free to reach out to our support team.</p>\n            \n            <p>Happy invoicing!</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>&copy; ${new Date().getFullYear()} ${siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  async sendPaymentReceivedEmail(\n    user: any,\n    client: any,\n    invoice: any,\n    amount: number,\n  ) {\n    const siteName = await this.getSiteName();\n    const subject = `Payment Received for Invoice #${invoice.invoiceNumber}`;\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #10B981; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .payment-details { background-color: white; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .detail-row { display: flex; justify-content: space-between; margin: 10px 0; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Payment Received! 🎉</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Hi ${user.firstName || 'User'},</p>\n            \n            <p>Great news! We've received a payment from ${client.name}.</p>\n            \n            <div class=\"payment-details\">\n              <div class=\"detail-row\">\n                <strong>Invoice Number:</strong>\n                <span>${invoice.invoiceNumber}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Client:</strong>\n                <span>${client.name}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Amount Received:</strong>\n                <span>${invoice.currency} ${amount.toFixed(2)}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Payment Date:</strong>\n                <span>${new Date().toLocaleDateString()}</span>\n              </div>\n            </div>\n            \n            <p>The payment has been recorded in your account.</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated email. Please do not reply directly to this message.</p>\n            <p>&copy; ${new Date().getFullYear()} Invoicy. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  async sendClientPaymentReceiptEmail(\n    client: any,\n    invoice: any,\n    amount: number,\n    user: any,\n  ) {\n    const siteName = await this.getSiteName();\n    const subject = `Receipt for Invoice #${invoice.invoiceNumber}`;\n    const appUrl = this.configService.get('APP_URL') || 'http://localhost:3000';\n    const publicLink =\n      invoice?.shareEnabled && invoice?.shareId\n        ? new URL(`/public/invoices/${invoice.shareId}`, appUrl).toString()\n        : undefined;\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #10B981; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .details { background-color: white; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .detail-row { display: flex; justify-content: space-between; margin: 10px 0; }\n          .button { display: inline-block; padding: 10px 18px; background-color: #4F46E5; color: white; text-decoration: none; border-radius: 6px; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Payment Receipt</h1>\n          </div>\n          <div class=\"content\">\n            <p>Dear ${client?.name || 'Valued Client'},</p>\n            <p>We have received your payment. Thank you!</p>\n            <div class=\"details\">\n              <div class=\"detail-row\"><strong>Invoice Number:</strong><span>${invoice.invoiceNumber}</span></div>\n              <div class=\"detail-row\"><strong>Amount Paid:</strong><span>${invoice.currency} ${Number(amount).toFixed(2)}</span></div>\n              <div class=\"detail-row\"><strong>Payment Date:</strong><span>${new Date().toLocaleDateString()}</span></div>\n              <div class=\"detail-row\"><strong>Balance Due:</strong><span>${invoice.currency} ${Number(invoice.balanceDue ?? Math.max(0, (invoice.totalAmount || 0) - (invoice.paidAmount || 0))).toFixed(2)}</span></div>\n            </div>\n            ${publicLink ? `<p>You can view the invoice here:</p><p><a href=\"${publicLink}\" class=\"button\">View Invoice</a></p>` : ''}\n            <p>If you have any questions, just reply to this email.</p>\n          </div>\n          <div class=\"footer\">\n            <p>&copy; ${new Date().getFullYear()} ${user?.companyName || siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    const fromName = `${user?.companyName || (user?.firstName ? `${user.firstName} ${user.lastName || ''}`.trim() : siteName)} via ${siteName}`;\n    const replyTo = user?.companyEmail || user?.email;\n    const headers: Record<string, string> = {};\n    if (replyTo) {\n      headers['List-Unsubscribe'] = `<mailto:${replyTo}?subject=Unsubscribe>`;\n      headers['List-Unsubscribe-Post'] = 'List-Unsubscribe=One-Click';\n    }\n\n    return this.sendEmail(client.email, subject, html, undefined, {\n      replyTo,\n      fromName,\n      headers,\n    });\n  }\n\n  async sendPlanUpgradedEmail(\n    user: any,\n    plan: 'BASIC' | 'PREMIUM' | 'ENTERPRISE' | string,\n    subscriptionEnd?: Date | string | null,\n    invoiceLimit?: number | null,\n  ) {\n    const siteName = await this.getSiteName();\n    const subject = `Your plan has been upgraded to ${String(plan).toUpperCase()}`;\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #4F46E5; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\"><h1>Plan Upgraded</h1></div>\n          <div class=\"content\">\n            <p>Hi ${user?.firstName || 'there'},</p>\n            <p>Your ${siteName} account has been upgraded to <strong>${String(plan).toUpperCase()}</strong>.</p>\n            ${subscriptionEnd ? `<p>Your subscription is active until <strong>${new Date(subscriptionEnd).toLocaleDateString()}</strong>.</p>` : ''}\n            ${typeof invoiceLimit === 'number' ? `<p>Your invoice limit is <strong>${invoiceLimit === 0 ? 'Unlimited' : invoiceLimit}</strong>.</p>` : ''}\n            <p>Thanks for upgrading — we hope you enjoy the additional features!</p>\n          </div>\n          <div class=\"footer\">\n            <p>&copy; ${new Date().getFullYear()} ${await this.getSiteName()}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  async sendPlanDowngradedEmail(\n    user: any,\n    plan: 'FREE' | 'BASIC' | 'PREMIUM' | string,\n  ) {\n    const siteName = await this.getSiteName();\n    const subject = `Your plan has been changed to ${String(plan).toUpperCase()}`;\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #6B7280; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\"><h1>Plan Updated</h1></div>\n          <div class=\"content\">\n            <p>Hi ${user?.firstName || 'there'},</p>\n            <p>Your ${siteName} account plan is now <strong>${String(plan).toUpperCase()}</strong>.</p>\n            <p>If this was a mistake or you’d like to upgrade again, you can do that anytime from your settings.</p>\n          </div>\n          <div class=\"footer\">\n            <p>&copy; ${new Date().getFullYear()} ${siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  async sendPaymentReminderEmail(invoice: any, daysOverdue: number) {\n    const subject = `Payment Reminder: Invoice #${invoice.invoiceNumber} ${daysOverdue > 0 ? `(${daysOverdue} days overdue)` : ''}`;\n    const siteName = await this.getSiteName();\n\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: ${daysOverdue > 0 ? '#EF4444' : '#F59E0B'}; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .button { display: inline-block; padding: 12px 24px; background-color: #4F46E5; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .invoice-details { background-color: white; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .detail-row { display: flex; justify-content: space-between; margin: 10px 0; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Payment Reminder</h1>\n          </div>\n          \n          <div class=\"content\">\n            <p>Dear ${invoice.client.name},</p>\n            \n            <p>${\n              daysOverdue > 0\n                ? `This is a reminder that payment for the following invoice is now ${daysOverdue} days overdue.`\n                : 'This is a friendly reminder that payment for the following invoice is due soon.'\n            }</p>\n            \n            <div class=\"invoice-details\">\n              <div class=\"detail-row\">\n                <strong>Invoice Number:</strong>\n                <span>${invoice.invoiceNumber}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Invoice Date:</strong>\n                <span>${new Date(invoice.invoiceDate).toLocaleDateString()}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Due Date:</strong>\n                <span>${new Date(invoice.dueDate).toLocaleDateString()}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Outstanding Amount:</strong>\n                <span>${invoice.currency} ${invoice.balanceDue.toFixed(2)}</span>\n              </div>\n            </div>\n            \n            <p>Please arrange payment at your earliest convenience.</p>\n            \n            <p>If you have already made this payment, please disregard this reminder. If you have any questions or concerns, please don't hesitate to contact us.</p>\n            \n            <p>Thank you for your prompt attention to this matter.</p>\n          </div>\n          \n          <div class=\"footer\">\n            <p>This is an automated email. Please do not reply directly to this message.</p>\n            <p>&copy; ${new Date().getFullYear()} ${invoice.user.companyName || siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n    const fromName = `${invoice.user.companyName || invoice.user.firstName + ' ' + invoice.user.lastName} via ${siteName}`;\n    const replyTo = invoice.user.companyEmail || invoice.user.email;\n    const headers: Record<string, string> = {};\n    if (replyTo) {\n      headers['List-Unsubscribe'] = `<mailto:${replyTo}?subject=Unsubscribe>`;\n      headers['List-Unsubscribe-Post'] = 'List-Unsubscribe=One-Click';\n    }\n\n    return this.sendEmail(invoice.client.email, subject, html, undefined, {\n      replyTo,\n      fromName,\n      headers,\n    });\n  }\n\n  async sendNewClientAddedEmail(user: any, client: any) {\n    const siteName = await this.getSiteName();\n    const subject = `New client added: ${client.name}`;\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background-color: #3B82F6; color: white; padding: 20px; text-align: center; }\n          .content { padding: 20px; background-color: #f9f9f9; }\n          .details { background-color: white; padding: 15px; border-radius: 5px; margin: 15px 0; }\n          .detail-row { display: flex; justify-content: space-between; margin: 10px 0; }\n          .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>New Client Added</h1>\n          </div>\n          <div class=\"content\">\n            <p>Hi ${user.firstName || 'there'},</p>\n            <p>You have successfully added a new client to your ${siteName} account.</p>\n            <div class=\"details\">\n              <div class=\"detail-row\">\n                <strong>Client Name:</strong>\n                <span>${client.name}</span>\n              </div>\n              <div class=\"detail-row\">\n                <strong>Email:</strong>\n                <span>${client.email}</span>\n              </div>\n              ${client.companyName ? `<div class=\"detail-row\"><strong>Company:</strong><span>${client.companyName}</span></div>` : ''}\n            </div>\n            <p>You can now create invoices for this client or manage their details from your dashboard.</p>\n          </div>\n          <div class=\"footer\">\n            <p>This is an automated email. Please do not reply directly to this message.</p>\n            <p>&copy; ${new Date().getFullYear()} ${user.companyName || siteName}. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n\n    return this.sendEmail(user.email, subject, html);\n  }\n\n  // Preview templates without sending (admin use)\n  async previewTemplate(\n    type:\n      | 'invoice'\n      | 'payment-reminder'\n      | 'payment-received'\n      | 'password-reset'\n      | 'verify-email'\n      | 'welcome' = 'welcome',\n  ): Promise<{ subject: string; html: string }> {\n    const siteName = await this.getSiteName();\n    const appUrl = this.configService.get('APP_URL') || 'http://localhost:3000';\n    const sampleUser = {\n      firstName: 'Jane',\n      lastName: 'Doe',\n      companyName: 'Acme Inc.',\n    } as any;\n    const sampleClient = {\n      name: 'John Client',\n      email: 'client@example.com',\n    } as any;\n    const sampleInvoice = {\n      invoiceNumber: 'INV-00001',\n      invoiceDate: new Date(),\n      dueDate: new Date(Date.now() + 7 * 86400000),\n      currency: 'USD',\n      balanceDue: 1234.56,\n      notes: 'Thank you for your business.',\n      user: sampleUser,\n      client: sampleClient,\n    } as any;\n\n    if (type === 'invoice') {\n      const subject = `Invoice #${sampleInvoice.invoiceNumber} from ${sampleUser.companyName}`;\n      const html = `<!DOCTYPE html><html><body style=\"font-family: Arial, sans-serif; line-height:1.6\">\n          <div style=\"max-width:600px;margin:0 auto;padding:20px\">\n            <div style=\"background:#4F46E5;color:#fff;padding:20px;text-align:center\">\n              <h1>Invoice #${sampleInvoice.invoiceNumber}</h1>\n            </div>\n            <div style=\"padding:20px;background:#f9f9f9\">\n              <p>Dear ${sampleClient.name},</p>\n              <p>Please find your invoice from ${sampleUser.companyName} below.</p>\n              <div style=\"background:#fff;padding:15px;border-radius:6px;margin:15px 0\">\n                <div style=\"display:flex;justify-content:space-between;margin:10px 0\"><b>Invoice Date:</b><span>${new Date(sampleInvoice.invoiceDate).toLocaleDateString()}</span></div>\n                <div style=\"display:flex;justify-content:space-between;margin:10px 0\"><b>Due Date:</b><span>${new Date(sampleInvoice.dueDate).toLocaleDateString()}</span></div>\n                <div style=\"display:flex;justify-content:space-between;margin:10px 0\"><b>Balance Due:</b><span>${sampleInvoice.currency} ${sampleInvoice.balanceDue.toFixed(2)}</span></div>\n              </div>\n              <p><b>Notes:</b> ${sampleInvoice.notes}</p>\n              <p>Please make payment by the due date mentioned above.</p>\n            </div>\n          </div>\n        </body></html>`;\n      return { subject, html };\n    }\n\n    if (type === 'payment-reminder') {\n      const subject = `Payment Reminder: Invoice #${sampleInvoice.invoiceNumber}`;\n      const html = `<!DOCTYPE html><html><body style=\"font-family: Arial, sans-serif; line-height:1.6\">\n        <div style=\"max-width:600px;margin:0 auto;padding:20px\">\n          <div style=\"background:#F59E0B;color:#fff;padding:20px;text-align:center\"><h1>Payment Reminder</h1></div>\n          <div style=\"padding:20px;background:#f9f9f9\">\n            <p>Dear ${sampleClient.name},</p>\n            <p>This is a friendly reminder that payment for the following invoice is due soon.</p>\n            <div style=\"background:#fff;padding:15px;border-radius:6px;margin:15px 0\">\n              <div style=\"display:flex;justify-content:space-between;margin:10px 0\"><b>Invoice Number:</b><span>${sampleInvoice.invoiceNumber}</span></div>\n              <div style=\"display:flex;justify-content:space-between;margin:10px 0\"><b>Due Date:</b><span>${new Date(sampleInvoice.dueDate).toLocaleDateString()}</span></div>\n              <div style=\"display:flex;justify-content:space-between;margin:10px 0\"><b>Outstanding Amount:</b><span>${sampleInvoice.currency} ${sampleInvoice.balanceDue.toFixed(2)}</span></div>\n            </div>\n          </div>\n        </div>\n      </body></html>`;\n      return { subject, html };\n    }\n\n    if (type === 'payment-received') {\n      const subject = `Payment Received for Invoice #${sampleInvoice.invoiceNumber}`;\n      const html = `<!DOCTYPE html><html><body style=\"font-family: Arial, sans-serif; line-height:1.6\">\n        <div style=\"max-width:600px;margin:0 auto;padding:20px\">\n          <div style=\"background:#10B981;color:#fff;padding:20px;text-align:center\"><h1>Payment Received! 🎉</h1></div>\n          <div style=\"padding:20px;background:#f9f9f9\">\n            <p>Hi ${sampleUser.firstName},</p>\n            <p>We have recorded a payment from ${sampleClient.name} for invoice ${sampleInvoice.invoiceNumber}.</p>\n          </div>\n        </div>\n      </body></html>`;\n      return { subject, html };\n    }\n\n    if (type === 'password-reset') {\n      const subject = 'Password Reset Request';\n      const html = `<!DOCTYPE html><html><body style=\"font-family: Arial, sans-serif; line-height:1.6\">\n        <div style=\"max-width:600px;margin:0 auto;padding:20px\">\n          <div style=\"background:#4F46E5;color:#fff;padding:20px;text-align:center\"><h1>Password Reset</h1></div>\n          <div style=\"padding:20px;background:#f9f9f9\">\n            <p>Hi ${sampleUser.firstName},</p>\n            <p>Click the button below to reset your password:</p>\n            <p><a href=\"${appUrl}/reset-password?token=sample\" style=\"display:inline-block;padding:10px 16px;background:#4F46E5;color:#fff;border-radius:6px;text-decoration:none\">Reset Password</a></p>\n          </div>\n        </div>\n      </body></html>`;\n      return { subject, html };\n    }\n\n    if (type === 'verify-email') {\n      const subject = 'Verify Your Email Address';\n      const html = `<!DOCTYPE html><html><body style=\"font-family: Arial, sans-serif; line-height:1.6\">\n        <div style=\"max-width:600px;margin:0 auto;padding:20px\">\n          <div style=\"background:#4F46E5;color:#fff;padding:20px;text-align:center\"><h1>Welcome to ${siteName}!</h1></div>\n          <div style=\"padding:20px;background:#f9f9f9\">\n            <p>Hi ${sampleUser.firstName},</p>\n            <p>Please verify your email by clicking below:</p>\n            <p><a href=\"${appUrl}/verify-email?token=sample\" style=\"display:inline-block;padding:10px 16px;background:#4F46E5;color:#fff;border-radius:6px;text-decoration:none\">Verify Email</a></p>\n          </div>\n        </div>\n      </body></html>`;\n      return { subject, html };\n    }\n\n    // welcome\n    const subject = `Welcome to ${siteName}!`;\n    const html = `<!DOCTYPE html><html><body style=\"font-family: Arial, sans-serif; line-height:1.6\">\n      <div style=\"max-width:600px;margin:0 auto;padding:20px\">\n        <div style=\"background:#4F46E5;color:#fff;padding:20px;text-align:center\"><h1>Welcome to ${siteName}!</h1></div>\n        <div style=\"padding:20px;background:#f9f9f9\">\n          <p>Hi ${sampleUser.firstName},</p>\n          <p>We're excited to have you on board. Get started by creating your first invoice.</p>\n          <p><a href=\"${appUrl}/dashboard\" style=\"display:inline-block;padding:10px 16px;background:#4F46E5;color:#fff;border-radius:6px;text-decoration:none\">Go to Dashboard</a></p>\n        </div>\n      </div>\n    </body></html>`;\n    return { subject, html };\n  }\n\n  // Utilities for Admin to test SMTP configuration without persisting\n  private async buildTransporterWithOverrides(\n    overrides?: Record<string, any>,\n  ): Promise<nodemailer.Transporter> {\n    const base = await this.loadEmailSettings();\n    const o = overrides || {};\n\n    const host = (o.EMAIL_HOST ?? base.host) as string;\n    const port = this.toNum(o.EMAIL_PORT ?? base.port, base.port);\n    const secure = this.toBool(o.EMAIL_SECURE ?? base.secure, base.secure);\n\n    // Username: allow explicit empty string to clear auth\n    const user = o.EMAIL_USER === '' ? undefined : (o.EMAIL_USER ?? base.user);\n    // Password: respect sentinel to keep existing\n    let pass: string | undefined;\n    if (Object.prototype.hasOwnProperty.call(o, 'EMAIL_PASSWORD')) {\n      pass =\n        o.EMAIL_PASSWORD === '__SECRET__'\n          ? base.pass\n          : o.EMAIL_PASSWORD || undefined;\n    } else {\n      pass = base.pass;\n    }\n\n    const from = (o.EMAIL_FROM ?? base.from) as string;\n    const connectionTimeout = this.toNum(\n      o.EMAIL_CONNECTION_TIMEOUT_MS ?? base.connectionTimeout,\n      base.connectionTimeout,\n    );\n    const greetingTimeout = this.toNum(\n      o.EMAIL_GREETING_TIMEOUT_MS ?? base.greetingTimeout,\n      base.greetingTimeout,\n    );\n    const socketTimeout = this.toNum(\n      o.EMAIL_SOCKET_TIMEOUT_MS ?? base.socketTimeout,\n      base.socketTimeout,\n    );\n\n    return nodemailer.createTransport({\n      host,\n      port,\n      secure,\n      auth: user && pass ? { user, pass } : undefined,\n      connectionTimeout,\n      greetingTimeout,\n      socketTimeout,\n      logger: base.logger,\n    });\n  }\n\n  async verifySmtp(\n    overrides?: Record<string, any>,\n  ): Promise<{ success: boolean; error?: string }> {\n    const transporter = await this.buildTransporterWithOverrides(overrides);\n    try {\n      await transporter.verify();\n      return { success: true };\n    } catch (e: any) {\n      return {\n        success: false,\n        error: e?.message || 'SMTP verification failed',\n      };\n    }\n  }\n\n  async sendTestEmail(to: string, overrides?: Record<string, any>) {\n    if (!to) {\n      throw new Error('Recipient email (to) is required');\n    }\n    const base = await this.loadEmailSettings();\n\n    const providerOverride = (overrides?.EMAIL_PROVIDER || base.provider) as\n      | 'SMTP'\n      | 'SENDGRID';\n    const from = (overrides?.EMAIL_FROM ?? base.from) as string;\n\n    const siteName = await this.getSiteName();\n    const subject = `${siteName} Email Test`;\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <body style=\"font-family: Arial, sans-serif; line-height: 1.6;\">\n        <h2>Email Test Successful</h2>\n        <p>This is a test email sent from ${siteName} using the currently configured provider (${providerOverride}).</p>\n        <p>Time: ${new Date().toISOString()}</p>\n      </body>\n      </html>\n    `;\n\n    if (providerOverride === 'SENDGRID') {\n      try {\n        const sgMail = require('@sendgrid/mail');\n        const apiKey = (overrides?.SENDGRID_API_KEY || base.sendgridApiKey) as\n          | string\n          | undefined;\n        if (!apiKey) {\n          throw new Error(\n            'SENDGRID_API_KEY is required to send test email with SendGrid',\n          );\n        }\n        sgMail.setApiKey(apiKey);\n        const msg = {\n          to,\n          from: { email: from, name: `${siteName} Test` },\n          subject,\n          html,\n          trackingSettings: {\n            clickTracking: { enable: base.trackClicks },\n            openTracking: { enable: base.trackOpens },\n          },\n        } as any;\n        const [response] = await sgMail.send(msg);\n        return {\n          success: true,\n          messageId: response?.headers?.['x-message-id'],\n        };\n      } catch (e: any) {\n        if (e?.code === 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'SendGrid test requested but @sendgrid/mail is not installed',\n          );\n        }\n        throw e;\n      }\n    }\n\n    // Default to SMTP test\n    const transporter = await this.buildTransporterWithOverrides(overrides);\n    try {\n      const info = await transporter.sendMail({ from, to, subject, html });\n      return { success: true, messageId: info.messageId };\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\dto\\create-invoice.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\dto\\update-invoice.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\invoice-overdue.scheduler.ts","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":109,"column":15,"nodeType":"BlockStatement","messageId":"unexpected","endLine":109,"endColumn":17,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3426,3426],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { InvoiceStatus, HistoryAction } from '../../common/enums';\nimport { EmailService } from '../email/email.service';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@Injectable()\nexport class InvoiceOverdueScheduler {\n  private readonly logger = new Logger(InvoiceOverdueScheduler.name);\n\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly emailService: EmailService,\n    private readonly notifications: NotificationsService,\n  ) {}\n\n  // Runs hourly; adjust as needed\n  @Cron(CronExpression.EVERY_HOUR)\n  async markOverdueInvoices() {\n    const now = new Date();\n\n    const candidates = await this.prisma.invoice.findMany({\n      where: {\n        status: { in: [InvoiceStatus.SENT, InvoiceStatus.VIEWED] },\n        dueDate: { lt: now },\n      },\n      include: { client: true, user: true },\n    });\n\n    if (candidates.length === 0) return;\n\n    const ids = candidates.map((c) => c.id);\n\n    await this.prisma.$transaction([\n      this.prisma.invoice.updateMany({\n        where: { id: { in: ids } },\n        data: { status: InvoiceStatus.OVERDUE },\n      }),\n      this.prisma.invoiceHistory.createMany({\n        data: ids.map((id) => ({\n          invoiceId: id,\n          action: HistoryAction.STATUS_CHANGED,\n          description: 'Status changed to OVERDUE (auto)',\n          performedBy: null,\n        })),\n      }),\n    ]);\n\n    this.logger.log(`Marked ${ids.length} invoice(s) as OVERDUE`);\n\n    // Send overdue reminders (one-time per transition) gated by user preferences\n    for (const invoice of candidates) {\n      const shouldSend = !!(\n        invoice.user?.emailNotificationsEnabled &&\n        invoice.user?.emailNotifyInvoiceOverdue\n      );\n      const daysOverdue = Math.max(\n        0,\n        Math.floor(\n          (now.getTime() - invoice.dueDate.getTime()) / (1000 * 60 * 60 * 24),\n        ),\n      );\n\n      let description: string;\n      if (shouldSend) {\n        try {\n          await this.emailService.sendPaymentReminderEmail(\n            invoice as any,\n            daysOverdue,\n          );\n          description = `Overdue reminder email sent to ${invoice.client.email}`;\n        } catch (err) {\n          this.logger.error(\n            `Failed to send overdue reminder for invoice ${invoice.id}:`,\n            err,\n          );\n          description = 'Overdue reminder email sending failed';\n        }\n      } else {\n        description = 'Overdue reminder email skipped by user preferences';\n      }\n\n      // Record reminder history regardless of send/skip outcome\n      try {\n        await this.prisma.invoiceHistory.create({\n          data: {\n            invoiceId: invoice.id,\n            action: HistoryAction.REMINDER_SENT,\n            description,\n            performedBy: null,\n          },\n        });\n      } catch (e) {\n        // Best-effort logging; do not throw\n        this.logger.error(\n          `Failed to create reminder history for invoice ${invoice.id}:`,\n          e,\n        );\n      }\n\n      // Emit notification event per invoice processed\n      try {\n        this.notifications.emit(invoice.userId, 'invoice.overdue', {\n          id: invoice.id,\n          daysOverdue,\n          reminder: description,\n        });\n      } catch {}\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\invoices.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":30,"column":40,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":30,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":30,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":30,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":35,"column":47,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":35,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":35,"column":52,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":35,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":62,"column":41,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":62,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":62,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":62,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":67,"column":45,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":67,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":67,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":76,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":76,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":76,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":76,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":81,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":81,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":81,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":81,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":90,"column":50,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":90,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":90,"column":55,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":90,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":95,"column":49,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":95,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":95,"column":54,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":95,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":100,"column":55,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":100,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":100,"column":60,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":100,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":109,"column":55,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":109,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":109,"column":60,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":109,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":114,"column":51,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":114,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":114,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":114,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":119,"column":49,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":119,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":119,"column":54,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":119,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":148,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":148,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":148,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":148,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":165,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":190,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":181,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":187,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":183,"column":13,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":183,"endColumn":72},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":193,"column":9,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":193,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":193,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":193,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ template?: string | undefined; colorScheme?: string | undefined; font?: string | undefined; layout?: string | undefined; footer?: string | undefined; } | undefined`.","line":194,"column":9,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":194,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":208,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":208,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":213,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":213,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":213,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":213,"endColumn":30},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6195,6195],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":226,"column":54,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":226,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":226,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":226,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":231,"column":51,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":231,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":231,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":231,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":241,"column":49,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":241,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":241,"column":54,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":241,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":246,"column":49,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":246,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":246,"column":54,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":246,"endColumn":56}],"suppressedMessages":[],"errorCount":26,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  Res,\n  HttpStatus,\n} from '@nestjs/common';\nimport type { Response } from 'express';\nimport { InvoicesService } from './invoices.service';\nimport { CreateInvoiceDto } from './dto/create-invoice.dto';\nimport { UpdateInvoiceDto } from './dto/update-invoice.dto';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { EmailVerifiedGuard } from '../auth/guards/email-verified.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport { InvoiceStatus } from '../../common/enums';\n\n@Controller('invoices')\n@UseGuards(JwtAuthGuard, EmailVerifiedGuard)\nexport class InvoicesController {\n  constructor(private readonly invoicesService: InvoicesService) {}\n\n  @Post()\n  create(@CurrentUser() user, @Body() createInvoiceDto: CreateInvoiceDto) {\n    return this.invoicesService.create(user.id, createInvoiceDto);\n  }\n\n  @Get('statistics')\n  getStatistics(@CurrentUser() user) {\n    return this.invoicesService.getStatistics(user.id);\n  }\n\n  @Get()\n  findAll(\n    @CurrentUser() user,\n    @Query('status') status?: InvoiceStatus,\n    @Query('clientId') clientId?: string,\n    @Query('search') search?: string,\n    @Query('startDate') startDate?: string,\n    @Query('endDate') endDate?: string,\n    @Query('sortBy') sortBy?: string,\n    @Query('sortDir') sortDir?: 'asc' | 'desc',\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n  ) {\n    const query = {\n      status,\n      clientId,\n      search,\n      startDate: startDate ? new Date(startDate) : undefined,\n      endDate: endDate ? new Date(endDate) : undefined,\n      sortBy,\n      sortDir,\n      page: page ? parseInt(page, 10) : undefined,\n      limit: limit ? parseInt(limit, 10) : undefined,\n    };\n    return this.invoicesService.findAll(user.id, query);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @CurrentUser() user) {\n    return this.invoicesService.findOne(id, user.id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Body() updateInvoiceDto: UpdateInvoiceDto,\n  ) {\n    return this.invoicesService.update(id, user.id, updateInvoiceDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @CurrentUser() user) {\n    return this.invoicesService.remove(id, user.id);\n  }\n\n  @Patch(':id/status')\n  updateStatus(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Body('status') status: InvoiceStatus,\n  ) {\n    return this.invoicesService.updateStatus(id, user.id, status);\n  }\n\n  @Post(':id/send')\n  sendInvoice(@Param('id') id: string, @CurrentUser() user) {\n    return this.invoicesService.sendInvoice(id, user.id);\n  }\n\n  @Post('bulk/send')\n  sendInvoicesBulk(@Body('ids') ids: string[], @CurrentUser() user) {\n    return this.invoicesService.sendInvoicesBulk(ids, user.id);\n  }\n\n  @Post('bulk/status')\n  updateStatusBulk(\n    @Body('ids') ids: string[],\n    @Body('status') status: InvoiceStatus,\n    @CurrentUser() user,\n  ) {\n    return this.invoicesService.updateStatusBulk(ids, user.id, status);\n  }\n\n  @Post('bulk/mark-paid')\n  markPaidBulk(@Body('ids') ids: string[], @CurrentUser() user) {\n    return this.invoicesService.markPaidBulk(ids, user.id);\n  }\n\n  @Post('bulk/delete')\n  deleteBulk(@Body('ids') ids: string[], @CurrentUser() user) {\n    return this.invoicesService.removeBulk(ids, user.id);\n  }\n\n  @Get(':id/download')\n  async downloadPdf(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Res() res: Response,\n    @Query('template') template?: string,\n    @Query('color') color?: string,\n    @Query('accentColor') accentColor?: string,\n    @Query('headerBorderColor') headerBorderColor?: string,\n    @Query('tableHeaderColor') tableHeaderColor?: string,\n    @Query('font') font?: string,\n    @Query('layout') layout?: string,\n    @Query('footer') footer?: string,\n    @Query('pageSize') pageSize?: string,\n    @Query('margins') margins?: string,\n    @Query('watermarkText') watermarkText?: string,\n    @Query('showSignature') showSignature?: string,\n    @Query('customFields') customFields?: string,\n    @Query('logoSize') logoSize?: string,\n    @Query('headerStyle') headerStyle?: string,\n  ) {\n    try {\n      // Debug log for tracing issues in production\n\n      console.log('GET /invoices/:id/download', {\n        id,\n        userId: user?.id,\n        template,\n        color,\n        accentColor,\n        headerBorderColor,\n        tableHeaderColor,\n        font,\n        layout,\n        footer,\n        pageSize,\n        margins,\n        watermarkText,\n        showSignature,\n        logoSize,\n        headerStyle,\n      });\n\n      const options = {\n        template,\n        colorScheme: color, // legacy\n        accentColor: accentColor || color,\n        headerBorderColor,\n        tableHeaderColor,\n        font,\n        layout,\n        footer,\n        pageSize,\n        margins,\n        watermarkText,\n        showSignature:\n          typeof showSignature === 'string'\n            ? ['true', '1', 'yes', 'on'].includes(showSignature.toLowerCase())\n            : undefined,\n        customFields: (() => {\n          try {\n            return customFields ? JSON.parse(customFields) : undefined;\n          } catch {\n            return undefined;\n          }\n        })(),\n        logoSize,\n        headerStyle,\n      } as any;\n      const pdfBuffer = await this.invoicesService.downloadPdf(\n        id,\n        user.id,\n        options,\n      );\n\n      console.log('PDF generated, bytes:', pdfBuffer?.length ?? 0);\n\n      res.set({\n        'Content-Type': 'application/pdf',\n        'Content-Disposition': `attachment; filename=\"invoice-${id}.pdf\"`,\n      });\n      res.status(HttpStatus.OK);\n      res.end(pdfBuffer);\n    } catch (err: any) {\n      console.error(\n        'Failed to generate/download invoice PDF:',\n        err?.message || err,\n      );\n      try {\n        return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n          message: 'Failed to generate invoice PDF',\n          error: err?.message || 'Unknown error',\n        });\n      } catch {\n        // If response has already started, just end it\n        try {\n          res.end();\n        } catch {}\n      }\n    }\n  }\n\n  @Post(':id/duplicate')\n  duplicateInvoice(@Param('id') id: string, @CurrentUser() user) {\n    return this.invoicesService.duplicateInvoice(id, user.id);\n  }\n\n  @Post(':id/cancel')\n  cancelInvoice(@Param('id') id: string, @CurrentUser() user) {\n    return this.invoicesService.cancelInvoice(id, user.id);\n  }\n\n  // Sharing endpoints\n  @Patch(':id/share')\n  updateShare(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Body('enable') enable?: boolean,\n  ) {\n    return this.invoicesService.updateShare(id, user.id, { enable });\n  }\n\n  @Post(':id/share/regenerate')\n  regenerateShare(@Param('id') id: string, @CurrentUser() user) {\n    return this.invoicesService.updateShare(id, user.id, { regenerate: true });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\invoices.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\invoices.service.spec.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":23,"column":1,"nodeType":"Identifier","messageId":"unsafeCall","endLine":23,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":29,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":29,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":30,"column":5,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":38,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":32,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":32,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":32,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":32,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":32,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":32,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":33,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":33,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":33,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":33,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":33,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":33,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":36,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":36,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":36,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":36,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":36,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":36,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":40,"column":5,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":42,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":41,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":41,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":41,"column":27,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":41,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":41,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":41,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":44,"column":5,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":46,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":45,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":45,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":45,"column":25,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":45,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":45,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":45,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":51,"column":35,"nodeType":"Property","messageId":"anyAssignment","endLine":51,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":52,"column":32,"nodeType":"Property","messageId":"anyAssignment","endLine":52,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":53,"column":34,"nodeType":"Property","messageId":"anyAssignment","endLine":53,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":54,"column":54,"nodeType":"Property","messageId":"anyAssignment","endLine":54,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":54,"column":60,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":54,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":54,"column":65,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":54,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":61,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":61,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":62,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":62,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .resetAllMocks on an `error` typed value.","line":62,"column":10,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":62,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":65,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":65,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":67,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":67,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":67,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":68,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":68,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":68,"column":9,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":68,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":69,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":69,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":69,"column":11,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":69,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":70,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":70,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":70,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":70,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":71,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":71,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":71,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":71,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":75,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":75,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":75,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":75,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toEqual on an `error` typed value.","line":75,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":75,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":76,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":76,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":76,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":76,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":76,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":76,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":76,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":76,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":80,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":80,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":80,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":80,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":80,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":80,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalled on an `error` typed value.","line":80,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":80,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":81,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":81,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":81,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":81,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":81,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":81,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledTimes on an `error` typed value.","line":81,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":81,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":82,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":82,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":82,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":82,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":82,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":82,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":82,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":82,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":84,"column":43,"nodeType":"Property","messageId":"anyAssignment","endLine":84,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":84,"column":51,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":84,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":84,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":84,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":86,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":86,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":86,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":86,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":86,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":86,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":86,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":86,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":87,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":92,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":87,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":87,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":87,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":87,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":89,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":89,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":89,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":89,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":89,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":89,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":90,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":90,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":90,"column":22,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":90,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stringContaining on an `error` typed value.","line":90,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":90,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":96,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":96,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":100,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":100,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":100,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":100,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":101,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":101,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":101,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":101,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":102,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":102,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":102,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":102,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":106,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":106,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":106,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":106,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toEqual on an `error` typed value.","line":106,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":106,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":107,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":107,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":107,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":107,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":107,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":107,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":107,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":107,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":108,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":108,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":108,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":108,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":108,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":108,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":108,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":108,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":109,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":109,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":109,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":109,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":109,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":109,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":109,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":109,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":111,"column":43,"nodeType":"Property","messageId":"anyAssignment","endLine":111,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":111,"column":51,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":111,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":111,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":111,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":113,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":113,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":113,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":113,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":113,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":113,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":113,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":113,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":114,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":116,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":114,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":114,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":114,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":114,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":115,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":115,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":115,"column":22,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":115,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stringContaining on an `error` typed value.","line":115,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":115,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":120,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":120,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":124,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":124,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":124,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":124,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":125,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":125,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":125,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":125,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":126,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":126,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":126,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":126,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":130,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":130,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":130,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":130,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toEqual on an `error` typed value.","line":130,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":130,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":131,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":131,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":131,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":131,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":131,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":131,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":132,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":132,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":132,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":132,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":132,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":132,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":132,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":132,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":133,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":133,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":133,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":133,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":133,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":133,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":133,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":133,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":135,"column":43,"nodeType":"Property","messageId":"anyAssignment","endLine":135,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":135,"column":51,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":135,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":135,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":135,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":137,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":137,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":137,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":137,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":137,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":137,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":137,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":137,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":138,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":140,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":138,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":138,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":138,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":138,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":139,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":139,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":139,"column":22,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":139,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stringContaining on an `error` typed value.","line":139,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":139,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":144,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":144,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":148,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":148,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":148,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":148,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":149,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":149,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":149,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":149,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":150,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":150,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":150,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":150,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":154,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":154,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":154,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":154,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toEqual on an `error` typed value.","line":154,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":154,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":155,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":155,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":155,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":155,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":155,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":155,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":155,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":155,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":156,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":156,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":156,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":156,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":156,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":156,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":156,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":156,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":157,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":157,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":157,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":157,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":157,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":157,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":157,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":157,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":159,"column":43,"nodeType":"Property","messageId":"anyAssignment","endLine":159,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":159,"column":51,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":159,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":159,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":159,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":161,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":161,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":161,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":161,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":161,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":161,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":161,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":161,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":162,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":164,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":162,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":162,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":162,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":162,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":163,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":163,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":163,"column":22,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":163,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stringContaining on an `error` typed value.","line":163,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":163,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":168,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":168,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":170,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":170,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":170,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":170,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":171,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":171,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":171,"column":9,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":171,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":172,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":172,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":172,"column":11,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":172,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":173,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":173,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":173,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":173,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":174,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":174,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":174,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":174,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":178,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":178,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":178,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":178,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toEqual on an `error` typed value.","line":178,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":178,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":179,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":179,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":179,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":179,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":179,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":179,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalled on an `error` typed value.","line":179,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":179,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":180,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":180,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":180,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":180,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":180,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalled on an `error` typed value.","line":180,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":181,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":181,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":181,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":181,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":181,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":181,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":181,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":181,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":183,"column":43,"nodeType":"Property","messageId":"anyAssignment","endLine":183,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":183,"column":51,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":183,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":183,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":183,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":185,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":185,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":185,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":185,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":185,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":185,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":185,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":185,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":186,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":188,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":186,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":186,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":186,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":186,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":187,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":187,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":187,"column":22,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":187,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stringContaining on an `error` typed value.","line":187,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":187,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":192,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":192,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":193,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":193,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":193,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":193,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":195,"column":11,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":197,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":195,"column":11,"nodeType":"Identifier","messageId":"unsafeCall","endLine":195,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rejects on an `error` typed value.","line":197,"column":7,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":197,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":198,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":198,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":198,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":198,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .generateInvoicePdf on an `error` typed value.","line":198,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":198,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":198,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":198,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":199,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":199,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":199,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":199,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendInvoiceEmail on an `error` typed value.","line":199,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":199,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":199,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":199,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":200,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":200,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":200,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":200,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":200,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":200,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":200,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":200,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":201,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":201,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":201,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":201,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":201,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":201,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":201,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":201,"endColumn":45}],"suppressedMessages":[],"errorCount":241,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Test, TestingModule } from '@nestjs/testing';\nimport { NotFoundException } from '@nestjs/common';\nimport { InvoicesService } from './invoices.service';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { PdfService } from './pdf.service';\nimport { EmailService } from '../email/email.service';\nimport { NotificationsService } from '../notifications/notifications.service';\nimport { InvoiceStatus } from '@prisma/client';\n\n// Simple helpers\nconst makeInvoice = (overrides: Partial<any> = {}) => ({\n  id: 'inv_1',\n  userId: 'user_1',\n  client: { email: 'client@example.com' },\n  items: [],\n  user: {\n    emailNotificationsEnabled: true,\n    emailNotifyNewInvoice: true,\n  },\n  ...overrides,\n});\n\ndescribe('InvoicesService.sendInvoice', () => {\n  let service: InvoicesService;\n  let prisma: jest.Mocked<any>;\n  let pdf: jest.Mocked<PdfService>;\n  let email: jest.Mocked<EmailService>;\n\n  beforeEach(async () => {\n    prisma = {\n      invoice: {\n        findFirst: jest.fn(),\n        update: jest.fn(),\n      },\n      invoiceHistory: {\n        create: jest.fn(),\n      },\n    } as any;\n\n    pdf = {\n      generateInvoicePdf: jest.fn(),\n    } as any;\n\n    email = {\n      sendInvoiceEmail: jest.fn(),\n    } as any;\n\n    const moduleRef: TestingModule = await Test.createTestingModule({\n      providers: [\n        InvoicesService,\n        { provide: PrismaService, useValue: prisma },\n        { provide: PdfService, useValue: pdf },\n        { provide: EmailService, useValue: email },\n        { provide: NotificationsService, useValue: { emit: jest.fn() } },\n      ],\n    }).compile();\n\n    service = moduleRef.get<InvoicesService>(InvoicesService);\n  });\n\n  afterEach(() => {\n    jest.resetAllMocks();\n  });\n\n  it('sends email when preferences enabled', async () => {\n    const invoice = makeInvoice();\n    prisma.invoice.findFirst.mockResolvedValue(invoice);\n    pdf.generateInvoicePdf.mockResolvedValue(Buffer.from('PDF'));\n    email.sendInvoiceEmail.mockResolvedValue(undefined);\n    prisma.invoice.update.mockResolvedValue({});\n    prisma.invoiceHistory.create.mockResolvedValue({});\n\n    const res = await service.sendInvoice('inv_1', 'user_1');\n\n    expect(res).toEqual({ message: 'Invoice sent successfully' });\n    expect(prisma.invoice.findFirst).toHaveBeenCalledWith({\n      where: { id: 'inv_1', userId: 'user_1' },\n      include: { client: true, items: true, user: true },\n    });\n    expect(pdf.generateInvoicePdf).toHaveBeenCalled();\n    expect(email.sendInvoiceEmail).toHaveBeenCalledTimes(1);\n    expect(prisma.invoice.update).toHaveBeenCalledWith({\n      where: { id: 'inv_1' },\n      data: { status: InvoiceStatus.SENT, sentAt: expect.any(Date) },\n    });\n    expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n      data: expect.objectContaining({\n        invoiceId: 'inv_1',\n        action: expect.any(String),\n        description: expect.stringContaining('Invoice sent to'),\n        performedBy: 'user_1',\n      }),\n    });\n  });\n\n  it('skips email when preferences disabled', async () => {\n    const invoice = makeInvoice({\n      user: { emailNotificationsEnabled: false, emailNotifyNewInvoice: true },\n    });\n    prisma.invoice.findFirst.mockResolvedValue(invoice);\n    prisma.invoice.update.mockResolvedValue({});\n    prisma.invoiceHistory.create.mockResolvedValue({});\n\n    const res = await service.sendInvoice('inv_1', 'user_1');\n\n    expect(res).toEqual({ message: 'Invoice sent successfully' });\n    expect(pdf.generateInvoicePdf).not.toHaveBeenCalled();\n    expect(email.sendInvoiceEmail).not.toHaveBeenCalled();\n    expect(prisma.invoice.update).toHaveBeenCalledWith({\n      where: { id: 'inv_1' },\n      data: { status: InvoiceStatus.SENT, sentAt: expect.any(Date) },\n    });\n    expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n      data: expect.objectContaining({\n        description: expect.stringContaining('skipped by user preferences'),\n      }),\n    });\n  });\n\n  it('skips email when emailNotifyNewInvoice disabled', async () => {\n    const invoice = makeInvoice({\n      user: { emailNotificationsEnabled: true, emailNotifyNewInvoice: false },\n    });\n    prisma.invoice.findFirst.mockResolvedValue(invoice);\n    prisma.invoice.update.mockResolvedValue({});\n    prisma.invoiceHistory.create.mockResolvedValue({});\n\n    const res = await service.sendInvoice('inv_1', 'user_1');\n\n    expect(res).toEqual({ message: 'Invoice sent successfully' });\n    expect(pdf.generateInvoicePdf).not.toHaveBeenCalled();\n    expect(email.sendInvoiceEmail).not.toHaveBeenCalled();\n    expect(prisma.invoice.update).toHaveBeenCalledWith({\n      where: { id: 'inv_1' },\n      data: { status: InvoiceStatus.SENT, sentAt: expect.any(Date) },\n    });\n    expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n      data: expect.objectContaining({\n        description: expect.stringContaining('skipped by user preferences'),\n      }),\n    });\n  });\n\n  it('skips email when both preferences disabled', async () => {\n    const invoice = makeInvoice({\n      user: { emailNotificationsEnabled: false, emailNotifyNewInvoice: false },\n    });\n    prisma.invoice.findFirst.mockResolvedValue(invoice);\n    prisma.invoice.update.mockResolvedValue({});\n    prisma.invoiceHistory.create.mockResolvedValue({});\n\n    const res = await service.sendInvoice('inv_1', 'user_1');\n\n    expect(res).toEqual({ message: 'Invoice sent successfully' });\n    expect(pdf.generateInvoicePdf).not.toHaveBeenCalled();\n    expect(email.sendInvoiceEmail).not.toHaveBeenCalled();\n    expect(prisma.invoice.update).toHaveBeenCalledWith({\n      where: { id: 'inv_1' },\n      data: { status: InvoiceStatus.SENT, sentAt: expect.any(Date) },\n    });\n    expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n      data: expect.objectContaining({\n        description: expect.stringContaining('skipped by user preferences'),\n      }),\n    });\n  });\n\n  it('handles email failure gracefully', async () => {\n    const invoice = makeInvoice();\n    prisma.invoice.findFirst.mockResolvedValue(invoice);\n    pdf.generateInvoicePdf.mockResolvedValue(Buffer.from('PDF'));\n    email.sendInvoiceEmail.mockRejectedValue(new Error('SMTP failure'));\n    prisma.invoice.update.mockResolvedValue({});\n    prisma.invoiceHistory.create.mockResolvedValue({});\n\n    const res = await service.sendInvoice('inv_1', 'user_1');\n\n    expect(res).toEqual({ message: 'Invoice sent successfully' });\n    expect(pdf.generateInvoicePdf).toHaveBeenCalled();\n    expect(email.sendInvoiceEmail).toHaveBeenCalled();\n    expect(prisma.invoice.update).toHaveBeenCalledWith({\n      where: { id: 'inv_1' },\n      data: { status: InvoiceStatus.SENT, sentAt: expect.any(Date) },\n    });\n    expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n      data: expect.objectContaining({\n        description: expect.stringContaining('email sending failed'),\n      }),\n    });\n  });\n\n  it('throws NotFoundException when invoice not found', async () => {\n    prisma.invoice.findFirst.mockResolvedValue(null);\n\n    await expect(\n      service.sendInvoice('missing', 'user_1'),\n    ).rejects.toBeInstanceOf(NotFoundException);\n    expect(pdf.generateInvoicePdf).not.toHaveBeenCalled();\n    expect(email.sendInvoiceEmail).not.toHaveBeenCalled();\n    expect(prisma.invoice.update).not.toHaveBeenCalled();\n    expect(prisma.invoiceHistory.create).not.toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\invoices.service.ts","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":122,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":122,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4276,4276],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .status on an `any` value.","line":143,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":143,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .clientId on an `any` value.","line":147,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":147,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .OR on an `any` value.","line":151,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":151,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceDate on an `any` value.","line":158,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":158,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":191,"column":35,"nodeType":"Property","messageId":"anyAssignment","endLine":191,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":193,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":193,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":204,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":204,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":211,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":211,"endColumn":77},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .history on an `any` value.","line":211,"column":52,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":211,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":215,"column":7,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":215,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .description on an `any` value.","line":246,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":246,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":247,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":247,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .description on an `any` value.","line":247,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":247,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":250,"column":5,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":250,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .recurring on an `any` value.","line":265,"column":54,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":265,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .recurringInterval on an `any` value.","line":266,"column":62,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":266,"endColumn":79},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":268,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":268,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":270,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":280,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":270,"column":21,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":270,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":270,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":270,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .quantity on an `any` value.","line":271,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":271,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rate on an `any` value.","line":271,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":271,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":275,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":275,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .description on an `any` value.","line":275,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":275,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":276,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":276,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .quantity on an `any` value.","line":276,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":276,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":277,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":277,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rate on an `any` value.","line":277,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":277,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .taxRate on an `any` value.","line":282,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":282,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .taxRate on an `any` value.","line":283,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":283,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":286,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":290,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .discount on an `any` value.","line":286,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":286,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .discountType on an `any` value.","line":287,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":287,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .discount on an `any` value.","line":288,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":288,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .discount on an `any` value.","line":289,"column":39,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":289,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":294,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":300,"endColumn":8},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":308,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":308,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":308,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":308,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .map on an `any` value.","line":308,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":308,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":308,"column":36,"nodeType":"ObjectExpression","messageId":"unsafeReturn","endLine":308,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":311,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":311,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":316,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":316,"endColumn":23},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":338,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":338,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10090,10090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":378,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":378,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11049,11049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareEnabled on an `any` value.","line":394,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":394,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .shareId on an `any` value.","line":395,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":395,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":398,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":398,"endColumn":17},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":407,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":407,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11878,11878],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .cancelledAt on an `any` value.","line":451,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":451,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paidAt on an `any` value.","line":454,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":454,"endColumn":18},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":459,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":459,"endColumn":11},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":474,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":474,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13481,13481],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15839,15839],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'missingIds' is assigned a value but never used.","line":571,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":571,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":619,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":619,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":619,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":619,"endColumn":32},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":659,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":659,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19201,19201],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":663,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":663,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":663,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":663,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .cancelledAt on an `any` value.","line":702,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":702,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paidAt on an `any` value.","line":703,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":703,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":707,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":707,"endColumn":11},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":720,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":720,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20946,20946],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":730,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":730,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21146,21146],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":790,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":790,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22671,22671],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":840,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":840,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23921,23921],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":889,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":889,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":895,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":898,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":898,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":898,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ color?: string | undefined; font?: string | undefined; layout?: string | undefined; footer?: string | undefined; pageSize?: string | undefined; margins?: string | undefined; watermarkText?: string | undefined; ... 9 more ...; accentColor?: string | undefined; } | undefined`.","line":901,"column":56,"nodeType":"TSAsExpression","messageId":"unsafeArgument","endLine":901,"endColumn":76},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":990,"column":15,"nodeType":"BlockStatement","messageId":"unexpected","endLine":990,"endColumn":17,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28373,28373],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":1082,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":1082,"endColumn":63},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1103,"column":15,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1103,"endColumn":17,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31400,31400],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":73,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { randomUUID } from 'crypto';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { CreateInvoiceDto } from './dto/create-invoice.dto';\nimport { UpdateInvoiceDto } from './dto/update-invoice.dto';\nimport { PdfService } from './pdf.service';\nimport { InvoiceStatus, HistoryAction, Plan } from '../../common/enums';\nimport { EmailService } from '../email/email.service';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@Injectable()\nexport class InvoicesService {\n  constructor(\n    private prisma: PrismaService,\n    private pdfService: PdfService,\n    private emailService: EmailService,\n    private notifications: NotificationsService,\n  ) {}\n\n  async create(userId: string, createInvoiceDto: CreateInvoiceDto) {\n    // Calculate amounts and sanitize items first\n    let subtotal = 0;\n    const items = createInvoiceDto.items.map((item) => {\n      const amount = item.quantity * item.rate;\n      subtotal += amount;\n      return {\n        description: item.description,\n        quantity: item.quantity,\n        rate: item.rate,\n        amount,\n      };\n    });\n\n    const taxAmount = createInvoiceDto.taxRate\n      ? (subtotal * createInvoiceDto.taxRate) / 100\n      : 0;\n    const discountAmount = createInvoiceDto.discount\n      ? createInvoiceDto.discountType === 'PERCENTAGE'\n        ? (subtotal * createInvoiceDto.discount) / 100\n        : createInvoiceDto.discount\n      : 0;\n    const totalAmount = subtotal + taxAmount - discountAmount;\n\n    const invoice = await this.prisma.$transaction(async (tx) => {\n      // Enforce plan invoice limits before creating\n      const user = await tx.user.findUnique({\n        where: { id: userId },\n        select: { subscriptionPlan: true, invoiceLimit: true },\n      });\n\n      if (user && user.subscriptionPlan !== Plan.ENTERPRISE) {\n        if (typeof user.invoiceLimit === 'number' && user.invoiceLimit > 0) {\n          const currentCount = await tx.invoice.count({\n            where: { userId, status: { not: InvoiceStatus.CANCELLED } },\n          });\n          if (currentCount >= user.invoiceLimit) {\n            throw new BadRequestException(\n              'Invoice limit reached for your plan',\n            );\n          }\n        }\n      }\n\n      // Determine invoice number: if provided, use it; else atomically increment start number\n      let invoiceNumber = createInvoiceDto.invoiceNumber;\n      if (!invoiceNumber) {\n        const updatedUser = await tx.user.update({\n          where: { id: userId },\n          data: { invoiceStartNumber: { increment: 1 } },\n          select: { invoicePrefix: true, invoiceStartNumber: true },\n        });\n        const usedNumber = (updatedUser.invoiceStartNumber || 1) - 1;\n        invoiceNumber = `${updatedUser.invoicePrefix || 'INV'}-${String(usedNumber).padStart(5, '0')}`;\n      }\n\n      const created = await tx.invoice.create({\n        data: {\n          userId,\n          clientId: createInvoiceDto.clientId,\n          invoiceNumber,\n          invoiceDate: createInvoiceDto.invoiceDate || new Date(),\n          dueDate: createInvoiceDto.dueDate,\n          status: createInvoiceDto.status || InvoiceStatus.DRAFT,\n          subtotal,\n          taxRate: createInvoiceDto.taxRate || 0,\n          taxAmount,\n          discount: createInvoiceDto.discount || 0,\n          discountType: createInvoiceDto.discountType || 'FIXED',\n          totalAmount,\n          balanceDue: totalAmount,\n          currency: createInvoiceDto.currency || 'USD',\n          notes: createInvoiceDto.notes,\n          terms: createInvoiceDto.terms,\n          footer: createInvoiceDto.footer,\n          items: { create: items },\n        },\n        include: { client: true, items: true },\n      });\n\n      await tx.invoiceHistory.create({\n        data: {\n          invoiceId: created.id,\n          action: HistoryAction.CREATED,\n          description: `Invoice ${created.invoiceNumber} created`,\n          performedBy: userId,\n        },\n      });\n\n      return created;\n    });\n\n    // Emit event\n    try {\n      this.notifications.emit(userId, 'invoice.created', {\n        id: invoice.id,\n        invoiceNumber: invoice.invoiceNumber,\n      });\n    } catch {}\n    return invoice;\n  }\n\n  async findAll(\n    userId: string,\n    query?: {\n      status?: (typeof InvoiceStatus)[keyof typeof InvoiceStatus];\n      clientId?: string;\n      search?: string;\n      startDate?: Date;\n      endDate?: Date;\n      sortBy?: string;\n      sortDir?: 'asc' | 'desc';\n      page?: number;\n      limit?: number;\n    },\n  ) {\n    const where: any = { userId };\n\n    if (query?.status) {\n      where.status = query.status;\n    }\n\n    if (query?.clientId) {\n      where.clientId = query.clientId;\n    }\n\n    if (query?.search) {\n      where.OR = [\n        { invoiceNumber: { contains: query.search, mode: 'insensitive' } },\n        { client: { name: { contains: query.search, mode: 'insensitive' } } },\n      ];\n    }\n\n    if (query?.startDate && query?.endDate) {\n      where.invoiceDate = {\n        gte: query.startDate,\n        lte: query.endDate,\n      };\n    }\n\n    const rawPage = Number(query?.page);\n    const rawLimit = Number(query?.limit);\n    const page =\n      Number.isFinite(rawPage) && rawPage > 0 ? Math.floor(rawPage) : 1;\n    const limit =\n      Number.isFinite(rawLimit) && rawLimit > 0\n        ? Math.min(100, Math.floor(rawLimit))\n        : 10;\n\n    // Sorting\n    const allowedSort: Record<string, string> = {\n      createdAt: 'createdAt',\n      invoiceDate: 'invoiceDate',\n      dueDate: 'dueDate',\n      totalAmount: 'totalAmount',\n      status: 'status',\n    };\n    const sortBy =\n      query?.sortBy && allowedSort[query.sortBy]\n        ? allowedSort[query.sortBy]\n        : 'createdAt';\n    const sortDir: 'asc' | 'desc' =\n      query?.sortDir === 'asc' || query?.sortDir === 'desc'\n        ? query.sortDir\n        : 'desc';\n\n    const [total, itemsRaw] = await Promise.all([\n      this.prisma.invoice.count({ where }),\n      this.prisma.invoice.findMany({\n        where,\n        include: {\n          client: true,\n          payments: true,\n          history: {\n            where: { action: HistoryAction.CREATED },\n            select: { description: true },\n            take: 1,\n            orderBy: { createdAt: 'asc' },\n          },\n        },\n        orderBy: { [sortBy]: sortDir } as any,\n        skip: (page - 1) * limit,\n        take: limit,\n      }),\n    ]);\n\n    const items = itemsRaw.map((inv: any) => {\n      const createdDesc: string | undefined = inv?.history?.[0]?.description;\n      const generatedFromRecurring = !!(\n        createdDesc && createdDesc.includes('created from recurring template')\n      );\n      return { ...inv, generatedFromRecurring };\n    });\n\n    return {\n      items,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    };\n  }\n\n  async findOne(id: string, userId: string) {\n    const invoiceRaw = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n      include: {\n        client: true,\n        items: true,\n        payments: true,\n        history: {\n          orderBy: { createdAt: 'desc' },\n        },\n      },\n    });\n\n    if (!invoiceRaw) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    const createdEntry = invoiceRaw.history?.find(\n      (h) =>\n        typeof (h as any).description === 'string' &&\n        (h as any).description.includes('created from recurring template'),\n    );\n    const generatedFromRecurring = !!createdEntry;\n    return { ...invoiceRaw, generatedFromRecurring } as any;\n  }\n\n  async update(id: string, userId: string, updateInvoiceDto: UpdateInvoiceDto) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Recalculate amounts if items are updated\n    let updateData: any = { ...updateInvoiceDto };\n    // Remove fields that do not exist in Prisma schema\n    if ('recurring' in updateData) delete updateData.recurring;\n    if ('recurringInterval' in updateData) delete updateData.recurringInterval;\n\n    if ((updateInvoiceDto as any).items) {\n      let subtotal = 0;\n      const items = (updateInvoiceDto as any).items.map((item: any) => {\n        const amount = item.quantity * item.rate;\n        subtotal += amount;\n\n        return {\n          description: item.description,\n          quantity: item.quantity,\n          rate: item.rate,\n          amount,\n        };\n      });\n\n      const taxAmount = (updateInvoiceDto as any).taxRate\n        ? (subtotal * (updateInvoiceDto as any).taxRate) / 100\n        : 0;\n\n      const discountAmount = (updateInvoiceDto as any).discount\n        ? (updateInvoiceDto as any).discountType === 'PERCENTAGE'\n          ? (subtotal * (updateInvoiceDto as any).discount) / 100\n          : (updateInvoiceDto as any).discount\n        : 0;\n\n      const totalAmount = subtotal + taxAmount - discountAmount;\n\n      updateData = {\n        ...updateData,\n        subtotal,\n        taxAmount,\n        totalAmount,\n        balanceDue: totalAmount - invoice.paidAmount,\n      };\n\n      // Delete existing items and create new ones\n      await this.prisma.invoiceItem.deleteMany({\n        where: { invoiceId: id },\n      });\n\n      await this.prisma.invoiceItem.createMany({\n        data: items.map((item) => ({ ...item, invoiceId: id })),\n      });\n\n      delete updateData.items;\n    }\n\n    const updatedInvoice = await this.prisma.invoice.update({\n      where: { id },\n      data: updateData,\n      include: {\n        client: true,\n        items: true,\n      },\n    });\n\n    // Create history entry\n    await this.prisma.invoiceHistory.create({\n      data: {\n        invoiceId: id,\n        action: HistoryAction.UPDATED,\n        description: 'Invoice updated',\n        performedBy: userId,\n      },\n    });\n\n    try {\n      this.notifications.emit(userId, 'invoice.updated', {\n        id,\n        invoiceNumber: updatedInvoice.invoiceNumber,\n      });\n    } catch {}\n    return updatedInvoice;\n  }\n\n  async cancelInvoice(id: string, userId: string) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    if (invoice.status === InvoiceStatus.PAID) {\n      throw new BadRequestException('Cannot cancel a paid invoice');\n    }\n\n    if (invoice.status === InvoiceStatus.CANCELLED) {\n      return invoice;\n    }\n\n    const updated = await this.prisma.invoice.update({\n      where: { id },\n      data: {\n        status: InvoiceStatus.CANCELLED,\n        cancelledAt: new Date(),\n      },\n    });\n\n    await this.prisma.invoiceHistory.create({\n      data: {\n        invoiceId: id,\n        action: HistoryAction.CANCELLED,\n        description: 'Invoice cancelled',\n        performedBy: userId,\n      },\n    });\n\n    try {\n      this.notifications.emit(userId, 'invoice.cancelled', { id });\n    } catch {}\n    return updated;\n  }\n\n  async updateShare(\n    id: string,\n    userId: string,\n    opts: { enable?: boolean; regenerate?: boolean },\n  ) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n    });\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n    const data: any = {};\n    if (typeof opts.enable === 'boolean') data.shareEnabled = opts.enable;\n    if (opts.regenerate) data.shareId = randomUUID();\n    const updated = await this.prisma.invoice.update({\n      where: { id },\n      data: data,\n      select: { id: true, shareId: true, shareEnabled: true },\n    });\n    try {\n      this.notifications.emit(userId, 'invoice.share_updated', {\n        id,\n        shareId: updated.shareId,\n        shareEnabled: updated.shareEnabled,\n      });\n    } catch {}\n    return updated;\n  }\n\n  async remove(id: string, userId: string) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Check if invoice has payments\n    const paymentCount = await this.prisma.payment.count({\n      where: { invoiceId: id },\n    });\n\n    if (paymentCount > 0) {\n      throw new BadRequestException('Cannot delete invoice with payments');\n    }\n\n    await this.prisma.invoice.delete({\n      where: { id },\n    });\n\n    return { message: 'Invoice deleted successfully' };\n  }\n\n  async updateStatus(\n    id: string,\n    userId: string,\n    status: (typeof InvoiceStatus)[keyof typeof InvoiceStatus],\n  ) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    const data: any = { status };\n    if (status === InvoiceStatus.CANCELLED) {\n      data.cancelledAt = new Date();\n    }\n    if (status === InvoiceStatus.PAID) {\n      data.paidAt = new Date();\n    }\n\n    const updatedInvoice = await this.prisma.invoice.update({\n      where: { id },\n      data,\n    });\n\n    // Create history entry\n    await this.prisma.invoiceHistory.create({\n      data: {\n        invoiceId: id,\n        action: HistoryAction.STATUS_CHANGED,\n        description: `Status changed to ${status}`,\n        performedBy: userId,\n      },\n    });\n\n    try {\n      this.notifications.emit(userId, 'invoice.status_changed', { id, status });\n    } catch {}\n    return updatedInvoice;\n  }\n\n  async sendInvoice(id: string, userId: string) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n      include: {\n        client: true,\n        items: true,\n        user: true,\n      },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Respect user email preferences; attempt to send email if enabled\n    const shouldSendEmail = !!(\n      invoice.user?.emailNotificationsEnabled &&\n      invoice.user?.emailNotifyNewInvoice\n    );\n\n    let emailSent = false;\n    let emailSkipOrFailDescription: string | undefined;\n    if (shouldSendEmail) {\n      try {\n        // Ensure public share link is enabled so the client can view & pay\n        let invForEmail = invoice;\n        if (!invoice.shareEnabled || !invoice.shareId) {\n          invForEmail = await this.prisma.invoice.update({\n            where: { id },\n            data: {\n              shareEnabled: true,\n              shareId: invoice.shareId || randomUUID(),\n            },\n            include: { client: true, items: true, user: true },\n          });\n        }\n\n        const pdfBuffer = await this.pdfService.generateInvoicePdf(invForEmail);\n        await this.emailService.sendInvoiceEmail(invForEmail as any, pdfBuffer);\n        emailSent = true;\n      } catch (err) {\n        // Log and continue without failing the request\n        console.error('Failed to send invoice email:', err);\n        emailSkipOrFailDescription =\n          'Invoice marked as SENT (email sending failed)';\n      }\n    } else {\n      emailSkipOrFailDescription =\n        'Invoice marked as SENT (email sending skipped by user preferences)';\n    }\n\n    // Update status to SENT\n    await this.prisma.invoice.update({\n      where: { id },\n      data: {\n        status: InvoiceStatus.SENT,\n        sentAt: new Date(),\n      },\n    });\n\n    // Create history entry\n    await this.prisma.invoiceHistory.create({\n      data: {\n        invoiceId: id,\n        action: HistoryAction.SENT,\n        description: emailSent\n          ? `Invoice sent to ${invoice.client.email}`\n          : (emailSkipOrFailDescription as string),\n        performedBy: userId,\n      },\n    });\n\n    try {\n      this.notifications.emit(userId, 'invoice.sent', {\n        id,\n        emailSent: !!emailSent,\n      });\n    } catch {}\n    return { message: 'Invoice sent successfully' };\n  }\n\n  async sendInvoicesBulk(ids: string[], userId: string) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      throw new BadRequestException('ids array is required');\n    }\n\n    // Fetch all invoices belonging to user\n    const invoices = await this.prisma.invoice.findMany({\n      where: { id: { in: ids }, userId },\n      include: { client: true, items: true, user: true },\n    });\n\n    const foundIds = new Set(invoices.map((i) => i.id));\n    const missingIds = ids.filter((id) => !foundIds.has(id));\n\n    const results: Array<{\n      id: string;\n      status: 'sent' | 'skipped' | 'failed' | 'not_found';\n      message?: string;\n    }> = [];\n\n    for (const id of ids) {\n      const inv = invoices.find((i) => i.id === id);\n      if (!inv) {\n        results.push({\n          id,\n          status: 'not_found',\n          message: 'Invoice not found or not owned by user',\n        });\n        continue;\n      }\n\n      // Respect user email preferences\n      const shouldSendEmail = !!(\n        inv.user?.emailNotificationsEnabled && inv.user?.emailNotifyNewInvoice\n      );\n      if (!shouldSendEmail) {\n        try {\n          // Still mark as SENT (skipped email)\n          await this.prisma.invoice.update({\n            where: { id: inv.id },\n            data: { status: InvoiceStatus.SENT, sentAt: new Date() },\n          });\n          await this.prisma.invoiceHistory.create({\n            data: {\n              invoiceId: inv.id,\n              action: HistoryAction.SENT,\n              description:\n                'Invoice marked as SENT (email sending skipped by user preferences)',\n              performedBy: userId,\n            },\n          });\n          results.push({\n            id: inv.id,\n            status: 'skipped',\n            message: 'Email disabled by user preferences',\n          });\n        } catch (e: any) {\n          results.push({\n            id: inv.id,\n            status: 'failed',\n            message: e?.message || 'Failed to update invoice status',\n          });\n        }\n        continue;\n      }\n\n      try {\n        const pdfBuffer = await this.pdfService.generateInvoicePdf(inv as any);\n        await this.emailService.sendInvoiceEmail(inv as any, pdfBuffer);\n        await this.prisma.invoice.update({\n          where: { id: inv.id },\n          data: { status: InvoiceStatus.SENT, sentAt: new Date() },\n        });\n        await this.prisma.invoiceHistory.create({\n          data: {\n            invoiceId: inv.id,\n            action: HistoryAction.SENT,\n            description: `Invoice sent to ${inv.client.email}`,\n            performedBy: userId,\n          },\n        });\n        results.push({ id: inv.id, status: 'sent' });\n      } catch (e: any) {\n        // Log and continue\n\n        console.error('Failed to send invoice email (bulk):', e);\n        try {\n          await this.prisma.invoice.update({\n            where: { id: inv.id },\n            data: { status: InvoiceStatus.SENT, sentAt: new Date() },\n          });\n          await this.prisma.invoiceHistory.create({\n            data: {\n              invoiceId: inv.id,\n              action: HistoryAction.SENT,\n              description:\n                'Invoice marked as SENT (email sending failed in bulk)',\n              performedBy: userId,\n            },\n          });\n        } catch {}\n        results.push({\n          id: inv.id,\n          status: 'failed',\n          message: e?.message || 'Email sending failed',\n        });\n      }\n    }\n\n    const summary = {\n      totalRequested: ids.length,\n      sent: results.filter((r) => r.status === 'sent').length,\n      skipped: results.filter((r) => r.status === 'skipped').length,\n      failed: results.filter((r) => r.status === 'failed').length,\n      notFound: results.filter((r) => r.status === 'not_found').length,\n    } as const;\n\n    return { summary, results };\n  }\n\n  async updateStatusBulk(\n    ids: string[],\n    userId: string,\n    status: (typeof InvoiceStatus)[keyof typeof InvoiceStatus],\n  ) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      throw new BadRequestException('ids array is required');\n    }\n    const invoices = await this.prisma.invoice.findMany({\n      where: { id: { in: ids }, userId },\n    });\n    const foundIds = invoices.map((i) => i.id);\n    if (foundIds.length === 0) {\n      return {\n        summary: {\n          totalRequested: ids.length,\n          updated: 0,\n          notFound: ids.length,\n        },\n      };\n    }\n\n    const data: any = { status };\n    if (status === InvoiceStatus.CANCELLED) data.cancelledAt = new Date();\n    if (status === InvoiceStatus.PAID) data.paidAt = new Date();\n\n    await this.prisma.invoice.updateMany({\n      where: { id: { in: foundIds } },\n      data,\n    });\n\n    // Write history entries\n    try {\n      await this.prisma.invoiceHistory.createMany({\n        data: foundIds.map((id) => ({\n          invoiceId: id,\n          action: HistoryAction.STATUS_CHANGED,\n          description: `Status changed to ${status} (bulk)`,\n          performedBy: userId,\n        })),\n      });\n    } catch {}\n\n    // Emit events\n    try {\n      for (const id of foundIds) {\n        this.notifications.emit(userId, 'invoice.status_changed', {\n          id,\n          status,\n        });\n      }\n    } catch {}\n\n    return {\n      summary: {\n        totalRequested: ids.length,\n        updated: foundIds.length,\n        notFound: ids.length - foundIds.length,\n      },\n    };\n  }\n\n  async markPaidBulk(ids: string[], userId: string) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      throw new BadRequestException('ids array is required');\n    }\n    const invoices = await this.prisma.invoice.findMany({\n      where: { id: { in: ids }, userId },\n    });\n    const foundIds = invoices.map((i) => i.id);\n    if (foundIds.length === 0) {\n      return {\n        summary: {\n          totalRequested: ids.length,\n          updated: 0,\n          notFound: ids.length,\n        },\n      };\n    }\n\n    const now = new Date();\n    await this.prisma.$transaction([\n      ...invoices.map((inv) =>\n        this.prisma.invoice.update({\n          where: { id: inv.id },\n          data: {\n            status: InvoiceStatus.PAID,\n            paidAt: now,\n            paidAmount: inv.totalAmount,\n            balanceDue: 0,\n          },\n        }),\n      ),\n      this.prisma.invoiceHistory.createMany({\n        data: foundIds.map((id) => ({\n          invoiceId: id,\n          action: HistoryAction.PAYMENT_RECEIVED,\n          description: 'Marked as paid (bulk)',\n          performedBy: userId,\n        })),\n      }),\n    ]);\n\n    // Emit events\n    try {\n      for (const id of foundIds) {\n        this.notifications.emit(userId, 'invoice.status_changed', {\n          id,\n          status: InvoiceStatus.PAID,\n        });\n      }\n    } catch {}\n\n    return {\n      summary: {\n        totalRequested: ids.length,\n        updated: foundIds.length,\n        notFound: ids.length - foundIds.length,\n      },\n    };\n  }\n\n  async removeBulk(ids: string[], userId: string) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      throw new BadRequestException('ids array is required');\n    }\n    const invoices = await this.prisma.invoice.findMany({\n      where: { id: { in: ids }, userId },\n      select: { id: true },\n    });\n    const foundIds = invoices.map((i) => i.id);\n    if (foundIds.length === 0) {\n      return {\n        summary: {\n          totalRequested: ids.length,\n          deleted: 0,\n          skipped: 0,\n          notFound: ids.length,\n        },\n      };\n    }\n\n    const deletable: string[] = [];\n    for (const id of foundIds) {\n      const count = await this.prisma.payment.count({\n        where: { invoiceId: id },\n      });\n      if (count === 0) deletable.push(id);\n    }\n\n    if (deletable.length > 0) {\n      await this.prisma.invoice.deleteMany({\n        where: { id: { in: deletable }, userId },\n      });\n    }\n\n    // Emit events\n    try {\n      for (const id of deletable) {\n        this.notifications.emit(userId, 'invoice.deleted', { id });\n      }\n    } catch {}\n\n    return {\n      summary: {\n        totalRequested: ids.length,\n        deleted: deletable.length,\n        skipped: foundIds.length - deletable.length,\n        notFound: ids.length - foundIds.length,\n      },\n    };\n  }\n\n  async downloadPdf(\n    id: string,\n    userId: string,\n    options?: {\n      template?: string;\n      colorScheme?: string;\n      font?: string;\n      layout?: string;\n      footer?: string;\n    },\n  ): Promise<Buffer> {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { id, userId },\n      include: {\n        client: true,\n        items: true,\n        user: true,\n      },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Create history entry (non-blocking). If enum value is missing in DB, don't fail the request.\n    try {\n      await this.prisma.invoiceHistory.create({\n        data: {\n          invoiceId: id,\n          action: HistoryAction.EXPORTED,\n          description: 'Invoice PDF downloaded',\n          performedBy: userId,\n        },\n      });\n    } catch (e: any) {\n      console.error(\n        'Failed to write invoice history (EXPORTED):',\n        e?.message || e,\n      );\n    }\n\n    const mergedOptions = {\n      ...(options || {}),\n      footer:\n        options?.footer ??\n        invoice.footer ??\n        (invoice as any)?.user?.invoiceFooter,\n    };\n\n    return this.pdfService.generateInvoicePdf(invoice, mergedOptions as any);\n  }\n\n  async duplicateInvoice(id: string, userId: string) {\n    return this.prisma.$transaction(async (tx) => {\n      const invoice = await tx.invoice.findFirst({\n        where: { id, userId },\n        include: { items: true },\n      });\n\n      if (!invoice) {\n        throw new NotFoundException('Invoice not found');\n      }\n\n      // Enforce plan invoice limits before duplicating\n      const user = await tx.user.findUnique({\n        where: { id: userId },\n        select: { subscriptionPlan: true, invoiceLimit: true },\n      });\n\n      if (user && user.subscriptionPlan !== Plan.ENTERPRISE) {\n        if (typeof user.invoiceLimit === 'number' && user.invoiceLimit > 0) {\n          const currentCount = await tx.invoice.count({\n            where: { userId, status: { not: InvoiceStatus.CANCELLED } },\n          });\n          if (currentCount >= user.invoiceLimit) {\n            throw new BadRequestException(\n              'Invoice limit reached for your plan',\n            );\n          }\n        }\n      }\n\n      // Atomically increment and use previous number\n      const updatedUser = await tx.user.update({\n        where: { id: userId },\n        data: { invoiceStartNumber: { increment: 1 } },\n        select: { invoicePrefix: true, invoiceStartNumber: true },\n      });\n      const usedNumber = (updatedUser.invoiceStartNumber || 1) - 1;\n      const invoiceNumber = `${updatedUser.invoicePrefix || 'INV'}-${String(usedNumber).padStart(5, '0')}`;\n\n      const duplicate = await tx.invoice.create({\n        data: {\n          userId,\n          clientId: invoice.clientId,\n          invoiceNumber,\n          invoiceDate: new Date(),\n          dueDate: new Date(\n            Date.now() +\n              (invoice.dueDate.getTime() - invoice.invoiceDate.getTime()),\n          ),\n          status: InvoiceStatus.DRAFT,\n          subtotal: invoice.subtotal,\n          taxRate: invoice.taxRate,\n          taxAmount: invoice.taxAmount,\n          discount: invoice.discount,\n          discountType: invoice.discountType,\n          totalAmount: invoice.totalAmount,\n          balanceDue: invoice.totalAmount - invoice.paidAmount,\n          currency: invoice.currency,\n          notes: invoice.notes,\n          terms: invoice.terms,\n          footer: invoice.footer,\n          items: {\n            create: invoice.items.map((item) => ({\n              description: item.description,\n              quantity: item.quantity,\n              rate: item.rate,\n              amount: item.amount,\n            })),\n          },\n        },\n        include: { client: true, items: true },\n      });\n\n      await tx.invoiceHistory.create({\n        data: {\n          invoiceId: duplicate.id,\n          action: HistoryAction.CREATED,\n          description: `Invoice duplicated from ${invoice.invoiceNumber}`,\n          performedBy: userId,\n        },\n      });\n      try {\n        this.notifications.emit(userId, 'invoice.duplicated', {\n          id: duplicate.id,\n          from: invoice.id,\n        });\n      } catch {}\n      return duplicate;\n    });\n  }\n\n  async getStatistics(userId: string) {\n    const [total, paid, overdue, draft] = await Promise.all([\n      this.prisma.invoice.count({ where: { userId } }),\n      this.prisma.invoice.count({\n        where: { userId, status: InvoiceStatus.PAID },\n      }),\n      this.prisma.invoice.count({\n        where: {\n          userId,\n          status: InvoiceStatus.OVERDUE,\n        },\n      }),\n      this.prisma.invoice.count({\n        where: { userId, status: InvoiceStatus.DRAFT },\n      }),\n    ]);\n\n    const totalRevenue = await this.prisma.invoice.aggregate({\n      where: { userId, status: InvoiceStatus.PAID },\n      _sum: { totalAmount: true },\n    });\n\n    const pendingAmount = await this.prisma.invoice.aggregate({\n      where: {\n        userId,\n        status: {\n          in: [InvoiceStatus.SENT, InvoiceStatus.VIEWED, InvoiceStatus.OVERDUE],\n        },\n      },\n      _sum: { totalAmount: true },\n    });\n\n    return {\n      total,\n      paid,\n      overdue,\n      draft,\n      totalRevenue: totalRevenue._sum.totalAmount || 0,\n      pendingAmount: pendingAmount._sum.totalAmount || 0,\n    };\n  }\n\n  async getPublicInvoiceByShareId(\n    shareId: string,\n    metadata?: { ip?: string; userAgent?: string },\n  ) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { shareId, shareEnabled: true },\n      include: {\n        client: true,\n        items: true,\n        payments: true,\n        user: true,\n        history: { orderBy: { createdAt: 'desc' } },\n      },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Only mark viewed if not cancelled/paid\n    const shouldMarkViewed =\n      invoice.status !== InvoiceStatus.CANCELLED &&\n      invoice.status !== InvoiceStatus.PAID;\n\n    if (shouldMarkViewed) {\n      const newStatus =\n        invoice.status === InvoiceStatus.SENT ||\n        invoice.status === InvoiceStatus.DRAFT\n          ? InvoiceStatus.VIEWED\n          : invoice.status;\n\n      await this.prisma.$transaction(async (tx) => {\n        await tx.invoice.update({\n          where: { id: invoice.id },\n          data: {\n            viewedAt: new Date(),\n            status: newStatus,\n          },\n        });\n\n        await tx.invoiceHistory.create({\n          data: {\n            invoiceId: invoice.id,\n            action: HistoryAction.VIEWED,\n            description: 'Invoice viewed via share link',\n            metadata: metadata ? (metadata as any) : undefined,\n            performedBy: null,\n          },\n        });\n      });\n\n      // Return the fresh copy after updates\n      const updated = await this.prisma.invoice.findUnique({\n        where: { id: invoice.id },\n        include: {\n          client: true,\n          items: true,\n          payments: true,\n          user: true,\n          history: { orderBy: { createdAt: 'desc' } },\n        },\n      });\n      try {\n        this.notifications.emit(invoice.userId, 'invoice.viewed', {\n          id: invoice.id,\n        });\n      } catch {}\n      return updated!;\n    }\n\n    return invoice;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\pdf.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":31,"column":9,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":31,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":39,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":39,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .default on an `any` value.","line":39,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":39,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":40,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":40,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":42,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":42,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":42,"column":28,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":42,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .create on an `any` value.","line":42,"column":40,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":42,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":70,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":70,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":70,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":70,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .addPage on an `any` value.","line":70,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":70,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":71,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":71,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":71,"column":33,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":71,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .getSize on an `any` value.","line":71,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":71,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":98,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":102,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":99,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":99,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .embedFont on an `any` value.","line":99,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":99,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .Courier on an `any` value.","line":99,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":99,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":101,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":101,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .embedFont on an `any` value.","line":101,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":101,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .TimesRoman on an `any` value.","line":101,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":101,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":102,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":102,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .embedFont on an `any` value.","line":102,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":102,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .Helvetica on an `any` value.","line":102,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":102,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":103,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":107,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":104,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":104,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .embedFont on an `any` value.","line":104,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":104,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .CourierBold on an `any` value.","line":104,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":104,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":106,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":106,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .embedFont on an `any` value.","line":106,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":106,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .TimesRomanBold on an `any` value.","line":106,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":106,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":107,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":107,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .embedFont on an `any` value.","line":107,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":107,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .HelveticaBold on an `any` value.","line":107,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":107,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":131,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":131,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":131,"column":28,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":131,"endColumn":78},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":131,"column":28,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":131,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .currency on an `any` value.","line":131,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toString on an `any` value.","line":131,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toUpperCase on an `any` value.","line":131,"column":67,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":78},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":146,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":149,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":148,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":148,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":150,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":153,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":152,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":152,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":154,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":155,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":155,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":155,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":156,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":159,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":158,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":158,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":168,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":168,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":168,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":168,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":172,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":172,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":173,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":173,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":173,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":173,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":178,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":178,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":178,"column":28,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":178,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .split on an `any` value.","line":178,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":178,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":179,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":179,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .forEach on an `any` value.","line":179,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":179,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":180,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":180,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .trim on an `any` value.","line":180,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":181,"column":11,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":181,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":181,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":181,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":181,"column":25,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":181,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .trim on an `any` value.","line":181,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":181,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":185,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":185,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":186,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":186,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":186,"column":20,"nodeType":"Identifier","messageId":"unsafeCall","endLine":186,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":194,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":194,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":194,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":194,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":198,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":198,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":199,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":199,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":199,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":199,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":206,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":206,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":206,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":206,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":210,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":210,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":211,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":211,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":211,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":211,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":220,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":220,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":220,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":220,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":224,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":224,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":225,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":225,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":225,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":225,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":230,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":231,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceNumber on an `any` value.","line":231,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":231,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":231,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":231,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":232,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":232,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":232,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":232,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":236,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":236,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":237,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":237,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":237,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":237,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":243,"column":9,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":243,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceDate on an `any` value.","line":243,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":243,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":245,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":245,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":245,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":245,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":249,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":249,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":250,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":250,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":250,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":250,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | number | Date`.","line":256,"column":9,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":256,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .dueDate on an `any` value.","line":256,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":256,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":258,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":258,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":258,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":258,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":262,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":262,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":263,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":263,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":263,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":263,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":268,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":268,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":268,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":268,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":273,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":273,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":273,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":273,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":283,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":283,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":283,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":283,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":287,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":287,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":288,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":288,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":288,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":288,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":292,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":292,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":292,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":292,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":296,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":296,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":297,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":297,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":297,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":297,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":301,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":301,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":301,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":301,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":306,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":306,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":306,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":306,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":309,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":309,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":309,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":309,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":314,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":314,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":314,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":314,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":320,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":320,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .client on an `any` value.","line":320,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":320,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":321,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":322,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":322,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":322,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .companyName on an `any` value.","line":322,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":322,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":323,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":323,"endColumn":71},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .addressLine1 on an `any` value.","line":323,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":323,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .city on an `any` value.","line":324,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":324,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .state on an `any` value.","line":324,"column":69,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":324,"endColumn":74},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .postalCode on an `any` value.","line":324,"column":96,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":324,"endColumn":106},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":325,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":325,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .phone on an `any` value.","line":325,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":325,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":326,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":326,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .email on an `any` value.","line":326,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":326,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":329,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":329,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":329,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":329,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":333,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":333,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":334,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":334,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":334,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":334,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":338,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":338,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":338,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":338,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":342,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":342,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":343,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":343,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":343,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":343,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":347,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":347,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":347,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":347,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":351,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":351,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":352,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":352,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":352,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":352,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":357,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":357,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":357,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":357,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":361,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":361,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":362,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":362,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":362,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":362,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":368,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":368,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":368,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":368,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":372,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":372,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":373,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":373,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":373,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":373,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":379,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":379,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":379,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":379,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":383,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":383,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":384,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":384,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":384,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":384,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":388,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":388,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":388,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":388,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":392,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":392,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":393,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":393,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":393,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":393,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":397,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":397,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":397,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":397,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":401,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":401,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":402,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":402,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":402,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":402,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'tableStartY' is assigned a value but never used.","line":408,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":408,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":412,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":412,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":412,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":412,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":417,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":417,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":417,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":417,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":426,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":426,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":426,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":426,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":430,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":430,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":431,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":431,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":431,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":431,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":434,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":434,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":434,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":434,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":438,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":438,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":439,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":439,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":439,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":439,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":442,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":442,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":442,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":442,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":446,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":446,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":447,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":447,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":447,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":447,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":450,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":450,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":450,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":450,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":454,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":454,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":455,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":455,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":455,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":455,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":461,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":461,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":461,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":461,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":462,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":462,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .forEach on an `any` value.","line":462,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":462,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":465,"column":11,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":465,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":465,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":465,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":470,"column":13,"nodeType":"Property","messageId":"anyAssignment","endLine":470,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":470,"column":20,"nodeType":"Identifier","messageId":"unsafeCall","endLine":470,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":475,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":475,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":475,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":475,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":480,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":480,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":480,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":480,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":484,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":484,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":484,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":484,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .description on an `any` value.","line":484,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":484,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":488,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":488,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":489,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":489,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":489,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":489,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":493,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":493,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":493,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":493,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .quantity on an `any` value.","line":493,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":493,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":497,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":497,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":498,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":498,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":498,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":498,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":501,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":501,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":501,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":501,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `number`.","line":501,"column":38,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":501,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rate on an `any` value.","line":501,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":501,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":505,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":505,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":506,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":506,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":506,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":506,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":509,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":509,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":509,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":509,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `number`.","line":509,"column":38,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":509,"endColumn":54},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .amount on an `any` value.","line":509,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":509,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":513,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":513,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":514,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":514,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":514,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":514,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .subtotal on an `any` value.","line":526,"column":39,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":526,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .discount on an `any` value.","line":527,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":527,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .taxRate on an `any` value.","line":528,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":528,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .taxAmount on an `any` value.","line":530,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":530,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .totalAmount on an `any` value.","line":533,"column":17,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":533,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":537,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":537,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":537,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":537,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":541,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":541,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":542,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":542,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":542,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":542,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":545,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":545,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":545,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":545,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":549,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":549,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":550,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":550,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":550,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":550,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":554,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":554,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":554,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":554,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":559,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":559,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":559,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":559,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":565,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":565,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":565,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":565,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":569,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":569,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":570,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":570,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":570,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":570,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":573,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":573,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":573,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":573,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":577,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":577,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":578,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":578,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":578,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":578,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":581,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":581,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":581,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":581,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":586,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":586,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":586,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":586,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":593,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":593,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":593,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":593,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":597,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":597,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":598,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":598,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":598,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":598,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":601,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":601,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":601,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":601,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":605,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":605,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":606,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":606,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":606,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":606,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":609,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":609,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":609,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":609,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":614,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":614,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":614,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":614,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":621,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":621,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":621,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":621,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":626,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":626,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":626,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":626,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":629,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":629,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":629,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":629,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":633,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":633,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":634,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":634,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":634,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":634,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":637,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":637,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":637,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":637,"endColumn":20},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":641,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":641,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":642,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":642,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":642,"column":16,"nodeType":"Identifier","messageId":"unsafeCall","endLine":642,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":648,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":648,"endColumn":76},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .notes on an `any` value.","line":648,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":648,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .terms on an `any` value.","line":648,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":648,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":651,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":651,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":651,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":651,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":656,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":656,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":656,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":656,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":660,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":660,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":660,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":660,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":665,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":665,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":665,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":665,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":668,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":668,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":668,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":668,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":672,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":672,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":673,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":673,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":673,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":673,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":677,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":677,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":677,"column":27,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":677,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .split on an `any` value.","line":677,"column":33,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":677,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":679,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":679,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .forEach on an `any` value.","line":679,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":679,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":680,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":680,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .trim on an `any` value.","line":680,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":680,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":681,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":681,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":681,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":681,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":681,"column":27,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":681,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .trim on an `any` value.","line":681,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":681,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":685,"column":15,"nodeType":"Property","messageId":"anyAssignment","endLine":685,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":686,"column":15,"nodeType":"Property","messageId":"anyAssignment","endLine":686,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":686,"column":22,"nodeType":"Identifier","messageId":"unsafeCall","endLine":686,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":700,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":700,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":700,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":700,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":704,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":704,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":705,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":705,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":705,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":705,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":707,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":707,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":707,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":707,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":712,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":712,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":712,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":712,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":715,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":715,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":715,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":715,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":719,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":719,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":720,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":720,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":720,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":720,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":722,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":722,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":722,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":722,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":727,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":727,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":727,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":727,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":736,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":736,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawRectangle on an `any` value.","line":736,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":736,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":741,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":741,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":741,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":741,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":746,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":746,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":746,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":746,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":747,"column":26,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":747,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .widthOfTextAtSize on an `any` value.","line":747,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":747,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":750,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":750,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":751,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":751,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":751,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":751,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":757,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":757,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":757,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":757,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":758,"column":26,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":758,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .widthOfTextAtSize on an `any` value.","line":758,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":758,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":761,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":761,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":762,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":762,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":762,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":762,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":770,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":770,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":770,"column":25,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":770,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .widthOfTextAtSize on an `any` value.","line":770,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":770,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":773,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":773,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .drawText on an `any` value.","line":773,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":773,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":777,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":777,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":778,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":778,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":778,"column":18,"nodeType":"Identifier","messageId":"unsafeCall","endLine":778,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":780,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":780,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":780,"column":19,"nodeType":"Identifier","messageId":"unsafeCall","endLine":780,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":784,"column":32,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":784,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .save on an `any` value.","line":784,"column":39,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":784,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":803,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":803,"endColumn":33}],"suppressedMessages":[],"errorCount":378,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PdfService {\n  async generateInvoicePdf(\n    invoice: any,\n    options?: {\n      color?: string;\n      font?: string;\n      layout?: string;\n      footer?: string;\n      pageSize?: string;\n      margins?: string;\n      watermarkText?: string;\n      showSignature?: boolean;\n      customFields?: Record<string, string>;\n      logoSize?: string;\n      companyName?: string;\n      companyAddress?: string;\n      companyPhone?: string;\n      companyEmail?: string;\n      headerBorderColor?: string;\n      tableHeaderColor?: string;\n      accentColor?: string;\n    },\n  ): Promise<Buffer> {\n    try {\n      // Import pdf-lib\n      let mod: any;\n      try {\n        mod = await import('pdf-lib/dist/pdf-lib.js');\n      } catch {\n        try {\n          mod = await import('pdf-lib/cjs/index.js');\n        } catch {\n          mod = await import('pdf-lib');\n        }\n      }\n      const pdfLib = mod.default ?? mod;\n      const { PDFDocument, StandardFonts, rgb, degrees } = pdfLib;\n\n      const pdfDoc = await PDFDocument.create();\n\n      // Page size based on invoice.html (A4 with proper margins)\n      let pageWidth = 595,\n        pageHeight = 842; // A4 default\n      const pageSize = (options?.pageSize || '').toLowerCase();\n      switch (pageSize) {\n        case 'letter':\n          pageWidth = 612;\n          pageHeight = 792;\n          break;\n        case 'legal':\n          pageWidth = 612;\n          pageHeight = 1008;\n          break;\n        case 'a3':\n          pageWidth = 842;\n          pageHeight = 1191;\n          break;\n        case 'a5':\n          pageWidth = 420;\n          pageHeight = 595;\n          break;\n        default:\n          pageWidth = 595;\n          pageHeight = 842; // A4\n      }\n\n      const page = pdfDoc.addPage([pageWidth, pageHeight]);\n      const { width, height } = page.getSize();\n\n      // Invoice.html style margins (40px padding = ~30pt)\n      let marginTop = 30,\n        marginBottom = 30,\n        marginLeft = 30,\n        marginRight = 30;\n      const margins = (options?.margins || '').toLowerCase();\n      switch (margins) {\n        case 'narrow':\n          marginTop = marginBottom = marginLeft = marginRight = 20;\n          break;\n        case 'wide':\n          marginTop = marginBottom = marginLeft = marginRight = 50;\n          break;\n        case 'moderate':\n          marginTop = marginBottom = marginLeft = marginRight = 30;\n          break;\n        default:\n          marginTop = marginBottom = marginLeft = marginRight = 30;\n      }\n\n      // Fonts - Arial equivalent (Helvetica) as per invoice.html\n      const fontOpt = (options?.font || '').toLowerCase();\n      const useTimes = fontOpt.includes('time');\n      const useCourier =\n        fontOpt.includes('courier') || fontOpt.includes('mono');\n      const baseFont = useCourier\n        ? await pdfDoc.embedFont(StandardFonts.Courier)\n        : useTimes\n          ? await pdfDoc.embedFont(StandardFonts.TimesRoman)\n          : await pdfDoc.embedFont(StandardFonts.Helvetica);\n      const boldFont = useCourier\n        ? await pdfDoc.embedFont(StandardFonts.CourierBold)\n        : useTimes\n          ? await pdfDoc.embedFont(StandardFonts.TimesRomanBold)\n          : await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n\n      // Colors based on invoice.html CSS (#2c3e50)\n      const accentColor = options?.accentColor || '#2c3e50';\n      const headerBorderColor = options?.headerBorderColor || accentColor;\n      const tableHeaderColor = options?.tableHeaderColor || accentColor;\n\n      // Convert hex to RGB\n      const hexToRgb = (hex: string) => {\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result\n          ? {\n              r: parseInt(result[1], 16) / 255,\n              g: parseInt(result[2], 16) / 255,\n              b: parseInt(result[3], 16) / 255,\n            }\n          : { r: 0.17, g: 0.24, b: 0.31 }; // Default #2c3e50\n      };\n\n      const primaryColor = hexToRgb(accentColor);\n      const headerBorder = hexToRgb(headerBorderColor);\n      const tableHeader = hexToRgb(tableHeaderColor);\n\n      // Currency formatting\n      const currencyCode = (invoice.currency || 'USD').toString().toUpperCase();\n      let currencySymbol = '$';\n      switch (currencyCode) {\n        case 'USD':\n          currencySymbol = '$';\n          break;\n        case 'EUR':\n          currencySymbol = '€';\n          break;\n      }\n\n      const formatCurrency = (n: number) =>\n        `${currencySymbol}${(Number(n) || 0).toFixed(2)}`;\n\n      // Company information with customization options\n      const companyName =\n        options?.companyName ||\n        invoice.user?.companyName ||\n        'Your Company Name';\n      const companyAddress =\n        options?.companyAddress ||\n        invoice.user?.companyAddress ||\n        '123 Business Street\\nCity, State 12345';\n      const companyPhone =\n        options?.companyPhone || invoice.user?.companyPhone || '(555) 123-4567';\n      const companyEmail =\n        options?.companyEmail ||\n        invoice.user?.companyEmail ||\n        'contact@company.com';\n\n      // Starting position (invoice.html has 40px padding)\n      let yPosition = height - marginTop;\n\n      // HEADER SECTION - exactly like invoice.html\n      // Company info on left, Invoice details on right\n\n      // Company Name (28px font-size in CSS = ~21pt)\n      page.drawText(companyName, {\n        x: marginLeft,\n        y: yPosition,\n        size: 21,\n        font: boldFont,\n        color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n      });\n      yPosition -= 25;\n\n      // Company address lines\n      const addressLines = companyAddress.split('\\n');\n      addressLines.forEach((line) => {\n        if (line.trim()) {\n          page.drawText(line.trim(), {\n            x: marginLeft,\n            y: yPosition,\n            size: 10,\n            font: baseFont,\n            color: rgb(0.4, 0.4, 0.4), // #666 in CSS\n          });\n          yPosition -= 12;\n        }\n      });\n\n      // Phone\n      if (companyPhone) {\n        page.drawText(`Phone: ${companyPhone}`, {\n          x: marginLeft,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0.4, 0.4, 0.4),\n        });\n        yPosition -= 12;\n      }\n\n      // Email\n      if (companyEmail) {\n        page.drawText(`Email: ${companyEmail}`, {\n          x: marginLeft,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0.4, 0.4, 0.4),\n        });\n      }\n\n      // Invoice details on right side\n      const rightColumnX = width - 200;\n      let rightY = height - marginTop;\n\n      // INVOICE title (24px = ~18pt)\n      page.drawText('INVOICE', {\n        x: rightColumnX,\n        y: rightY,\n        size: 18,\n        font: boldFont,\n        color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n      });\n      rightY -= 25;\n\n      // Invoice Number\n      const invoiceNumber =\n        invoice.invoiceNumber || invoice.id || 'INV-2024-001';\n      page.drawText(`Invoice #: ${invoiceNumber}`, {\n        x: rightColumnX,\n        y: rightY,\n        size: 10,\n        font: boldFont,\n        color: rgb(0.4, 0.4, 0.4),\n      });\n      rightY -= 15;\n\n      // Invoice Date\n      const invoiceDate = new Date(\n        invoice.invoiceDate || Date.now(),\n      ).toLocaleDateString();\n      page.drawText(`Date: ${invoiceDate}`, {\n        x: rightColumnX,\n        y: rightY,\n        size: 10,\n        font: baseFont,\n        color: rgb(0.4, 0.4, 0.4),\n      });\n      rightY -= 15;\n\n      // Due Date\n      const dueDate = new Date(\n        invoice.dueDate || Date.now(),\n      ).toLocaleDateString();\n      page.drawText(`Due Date: ${dueDate}`, {\n        x: rightColumnX,\n        y: rightY,\n        size: 10,\n        font: baseFont,\n        color: rgb(0.4, 0.4, 0.4),\n      });\n\n      // Header border line (2px solid #2c3e50 in CSS)\n      const headerBottomY = Math.min(yPosition, rightY) - 20;\n      page.drawRectangle({\n        x: marginLeft,\n        y: headerBottomY,\n        width: width - marginLeft - marginRight,\n        height: 2,\n        color: rgb(headerBorder.r, headerBorder.g, headerBorder.b),\n      });\n\n      yPosition = headerBottomY - 30;\n\n      // BILLING SECTION - Bill To and Ship To side by side\n      const billToX = marginLeft;\n      const shipToX = width / 2 + 20;\n\n      // Bill To header\n      page.drawText('Bill To:', {\n        x: billToX,\n        y: yPosition,\n        size: 12,\n        font: boldFont,\n        color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n      });\n\n      // Ship To header\n      page.drawText('Ship To:', {\n        x: shipToX,\n        y: yPosition,\n        size: 12,\n        font: boldFont,\n        color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n      });\n\n      // Underline for headers\n      page.drawRectangle({\n        x: billToX,\n        y: yPosition - 2,\n        width: 50,\n        height: 1,\n        color: rgb(0.87, 0.87, 0.87), // #ddd\n      });\n\n      page.drawRectangle({\n        x: shipToX,\n        y: yPosition - 2,\n        width: 55,\n        height: 1,\n        color: rgb(0.87, 0.87, 0.87),\n      });\n\n      yPosition -= 20;\n\n      // Client information\n      const client = invoice.client || {};\n      const clientName =\n        client.name || client.companyName || 'Client Company Name';\n      const clientAddress = client.addressLine1 || '456 Client Avenue';\n      const clientCity = `${client.city || 'Client City'}, ${client.state || 'State'} ${client.postalCode || '67890'}`;\n      const clientPhone = client.phone || '(555) 987-6543';\n      const clientEmail = client.email || 'billing@client.com';\n\n      // Bill To content\n      page.drawText(clientName, {\n        x: billToX,\n        y: yPosition,\n        size: 10,\n        font: boldFont,\n        color: rgb(0, 0, 0),\n      });\n      yPosition -= 12;\n\n      page.drawText(clientAddress, {\n        x: billToX,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n      yPosition -= 12;\n\n      page.drawText(clientCity, {\n        x: billToX,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n      yPosition -= 12;\n\n      if (clientPhone) {\n        page.drawText(`Phone: ${clientPhone}`, {\n          x: billToX,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n        yPosition -= 12;\n      }\n\n      if (clientEmail) {\n        page.drawText(`Email: ${clientEmail}`, {\n          x: billToX,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n      }\n\n      // Ship To content (same as Bill To for now)\n      let shipToY = yPosition + 48; // Reset to same level as Bill To\n      page.drawText('Same as Bill To', {\n        x: shipToX,\n        y: shipToY,\n        size: 10,\n        font: boldFont,\n        color: rgb(0, 0, 0),\n      });\n      shipToY -= 12;\n\n      page.drawText(clientAddress, {\n        x: shipToX,\n        y: shipToY,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n      shipToY -= 12;\n\n      page.drawText(clientCity, {\n        x: shipToX,\n        y: shipToY,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n\n      yPosition -= 40;\n\n      // ITEMS TABLE\n      const tableStartY = yPosition;\n      const tableWidth = width - marginLeft - marginRight;\n\n      // Table header background (#2c3e50)\n      page.drawRectangle({\n        x: marginLeft,\n        y: yPosition - 25,\n        width: tableWidth,\n        height: 25,\n        color: rgb(tableHeader.r, tableHeader.g, tableHeader.b),\n      });\n\n      // Table headers\n      const descX = marginLeft + 10;\n      const qtyX = width - 250;\n      const rateX = width - 150;\n      const amountX = width - 80;\n\n      page.drawText('Description', {\n        x: descX,\n        y: yPosition - 18,\n        size: 10,\n        font: boldFont,\n        color: rgb(1, 1, 1), // white text\n      });\n\n      page.drawText('Qty', {\n        x: qtyX,\n        y: yPosition - 18,\n        size: 10,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n\n      page.drawText('Rate', {\n        x: rateX,\n        y: yPosition - 18,\n        size: 10,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n\n      page.drawText('Amount', {\n        x: amountX,\n        y: yPosition - 18,\n        size: 10,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n\n      yPosition -= 35;\n\n      // Table rows\n      const items = invoice.items || [];\n      items.forEach((item: any, index: number) => {\n        // Alternating row background (#f9f9f9)\n        if (index % 2 === 1) {\n          page.drawRectangle({\n            x: marginLeft,\n            y: yPosition - 20,\n            width: tableWidth,\n            height: 20,\n            color: rgb(0.976, 0.976, 0.976), // #f9f9f9\n          });\n        }\n\n        // Row border\n        page.drawRectangle({\n          x: marginLeft,\n          y: yPosition - 20,\n          width: tableWidth,\n          height: 1,\n          color: rgb(0.87, 0.87, 0.87), // #ddd\n        });\n\n        // Item data\n        page.drawText(item.description || '', {\n          x: descX,\n          y: yPosition - 15,\n          size: 9,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n          maxWidth: qtyX - descX - 20,\n        });\n\n        page.drawText(String(item.quantity || 0), {\n          x: qtyX,\n          y: yPosition - 15,\n          size: 9,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n\n        page.drawText(formatCurrency(item.rate || 0), {\n          x: rateX,\n          y: yPosition - 15,\n          size: 9,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n\n        page.drawText(formatCurrency(item.amount || 0), {\n          x: amountX,\n          y: yPosition - 15,\n          size: 9,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n\n        yPosition -= 25;\n      });\n\n      yPosition -= 20;\n\n      // TOTALS SECTION (right-aligned, 300px width like CSS)\n      const totalsX = width - 300 - marginRight;\n      const totalsWidth = 300;\n\n      const subtotal = Number(invoice.subtotal || 0);\n      const discountAmount = Number(invoice.discount || 0);\n      const taxRate = Number(invoice.taxRate || 0);\n      const taxAmount = Number(\n        invoice.taxAmount || ((subtotal - discountAmount) * taxRate) / 100,\n      );\n      const totalAmount = Number(\n        invoice.totalAmount || subtotal - discountAmount + taxAmount,\n      );\n\n      // Subtotal\n      page.drawText('Subtotal:', {\n        x: totalsX,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n\n      page.drawText(formatCurrency(subtotal), {\n        x: totalsX + 200,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n\n      // Border line\n      page.drawRectangle({\n        x: totalsX,\n        y: yPosition - 2,\n        width: totalsWidth,\n        height: 1,\n        color: rgb(0.87, 0.87, 0.87),\n      });\n\n      yPosition -= 20;\n\n      // Tax\n      page.drawText(`Tax (${taxRate}%):`, {\n        x: totalsX,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n\n      page.drawText(formatCurrency(taxAmount), {\n        x: totalsX + 200,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n\n      page.drawRectangle({\n        x: totalsX,\n        y: yPosition - 2,\n        width: totalsWidth,\n        height: 1,\n        color: rgb(0.87, 0.87, 0.87),\n      });\n\n      yPosition -= 20;\n\n      // Discount\n      if (discountAmount > 0) {\n        page.drawText('Discount:', {\n          x: totalsX,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n\n        page.drawText(`-${formatCurrency(discountAmount)}`, {\n          x: totalsX + 200,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n        });\n\n        page.drawRectangle({\n          x: totalsX,\n          y: yPosition - 2,\n          width: totalsWidth,\n          height: 1,\n          color: rgb(0.87, 0.87, 0.87),\n        });\n\n        yPosition -= 20;\n      }\n\n      // Total (with background color like CSS)\n      page.drawRectangle({\n        x: totalsX,\n        y: yPosition - 18,\n        width: totalsWidth,\n        height: 20,\n        color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n      });\n\n      page.drawText('Total:', {\n        x: totalsX + 10,\n        y: yPosition - 12,\n        size: 12,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n\n      page.drawText(formatCurrency(totalAmount), {\n        x: totalsX + 200,\n        y: yPosition - 12,\n        size: 12,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n\n      yPosition -= 40;\n\n      // NOTES SECTION (if any)\n      const notes = invoice.notes || invoice.terms || options?.footer || '';\n      if (notes) {\n        // Notes background (#f8f9fa with left border)\n        page.drawRectangle({\n          x: marginLeft,\n          y: yPosition - 60,\n          width: width - marginLeft - marginRight,\n          height: 60,\n          color: rgb(0.973, 0.976, 0.98), // #f8f9fa\n        });\n\n        // Left border (4px solid #2c3e50)\n        page.drawRectangle({\n          x: marginLeft,\n          y: yPosition - 60,\n          width: 4,\n          height: 60,\n          color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n        });\n\n        page.drawText('Payment Terms & Notes:', {\n          x: marginLeft + 20,\n          y: yPosition - 20,\n          size: 11,\n          font: boldFont,\n          color: rgb(primaryColor.r, primaryColor.g, primaryColor.b),\n        });\n\n        // Split notes into lines\n        const noteLines = notes.split('\\n');\n        let noteY = yPosition - 35;\n        noteLines.forEach((line) => {\n          if (line.trim() && noteY > marginBottom + 20) {\n            page.drawText(line.trim(), {\n              x: marginLeft + 20,\n              y: noteY,\n              size: 9,\n              font: baseFont,\n              color: rgb(0, 0, 0),\n              maxWidth: width - marginLeft - marginRight - 40,\n            });\n            noteY -= 12;\n          }\n        });\n\n        yPosition -= 80;\n      }\n\n      // Optional signature block (above footer)\n      if (options?.showSignature && yPosition > marginBottom + 80) {\n        // Draw signature label and line\n        const sigLabel = 'Authorized Signature';\n        page.drawText(sigLabel, {\n          x: marginLeft,\n          y: yPosition - 18,\n          size: 10,\n          font: boldFont,\n          color: rgb(0.2, 0.2, 0.2),\n        });\n        page.drawRectangle({\n          x: marginLeft,\n          y: yPosition - 34,\n          width: (width - marginLeft - marginRight) * 0.5,\n          height: 1,\n          color: rgb(0.7, 0.7, 0.7),\n        });\n        // Date line on the right\n        page.drawText('Date', {\n          x: width - marginRight - 150,\n          y: yPosition - 18,\n          size: 10,\n          font: boldFont,\n          color: rgb(0.2, 0.2, 0.2),\n        });\n        page.drawRectangle({\n          x: width - marginRight - 150,\n          y: yPosition - 34,\n          width: 140,\n          height: 1,\n          color: rgb(0.7, 0.7, 0.7),\n        });\n        yPosition -= 50;\n      }\n\n      // FOOTER\n      const footerText = options?.footer || 'Thank you for your business!';\n      if (footerText && yPosition > marginBottom + 40) {\n        // Footer border\n        page.drawRectangle({\n          x: marginLeft,\n          y: yPosition - 10,\n          width: width - marginLeft - marginRight,\n          height: 1,\n          color: rgb(0.87, 0.87, 0.87),\n        });\n\n        yPosition -= 25;\n\n        page.drawText(footerText, {\n          x: width / 2 - baseFont.widthOfTextAtSize(footerText, 10) / 2,\n          y: yPosition,\n          size: 10,\n          font: baseFont,\n          color: rgb(0.4, 0.4, 0.4),\n        });\n\n        yPosition -= 15;\n\n        const contactText = `If you have any questions about this invoice, please contact us at ${companyPhone}`;\n        page.drawText(contactText, {\n          x: width / 2 - baseFont.widthOfTextAtSize(contactText, 9) / 2,\n          y: yPosition,\n          size: 9,\n          font: baseFont,\n          color: rgb(0.4, 0.4, 0.4),\n        });\n      }\n\n      // Watermark if specified\n      if (options?.watermarkText) {\n        const wmText = String(options.watermarkText).toUpperCase();\n        const wmSize = 72;\n        const wmWidth = boldFont.widthOfTextAtSize(wmText, wmSize);\n        const wmX = (width - wmWidth) / 2;\n        const wmY = height / 2;\n        page.drawText(wmText, {\n          x: wmX,\n          y: wmY,\n          size: wmSize,\n          font: boldFont,\n          color: rgb(0.75, 0.75, 0.75),\n          opacity: 0.18,\n          rotate: degrees(45),\n        });\n      }\n\n      return Buffer.from(await pdfDoc.save());\n    } catch (error) {\n      console.error('PDF generation failed:', error);\n      try {\n        const { PDFDocument, StandardFonts, rgb } = await import('pdf-lib');\n        const pdfDoc2 = await PDFDocument.create();\n        const page2 = pdfDoc2.addPage();\n        const font2 = await pdfDoc2.embedFont(StandardFonts.Helvetica);\n        page2.drawText('Invoice generation failed. Please try again.', {\n          x: 50,\n          y: 750,\n          size: 12,\n          font: font2,\n          color: rgb(0, 0, 0),\n        });\n        return Buffer.from(await pdfDoc2.save());\n      } catch (fallbackError: any) {\n        console.error(\n          'PDF generation failed, creating fallback PDF:',\n          fallbackError?.message || fallbackError,\n        );\n        const emptyDoc = new Uint8Array();\n        return Buffer.from(emptyDoc);\n      }\n    }\n  }\n}\n/*\n      const title = 'INVOICE';\n      const titleSize = 26;\n      const titleWidth = boldFont.widthOfTextAtSize(title, titleSize);\n      // keep at least 20pt gap to logo; fall back to right margin if no logo\n      const rightLimit = (bannerLogoW > 0) ? (bannerLogoX - 20) : (width - 40);\n      const titleX = Math.max(280, rightLimit - titleWidth);\n      page.drawText(title, {\n        x: titleX,\n        y: bannerBottom + 30,\n        size: titleSize,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n      page.drawText(invoice.user.companyName || 'Company Name', {\n        x: 50,\n        y: bannerBottom + 35,\n        size: 20,\n        font: boldFont,\n        color: rgb(1, 1, 1),\n      });\n    }\n    \n    if (template !== 'modern' && template !== 'premium') {\n      // Classic: company name at top\n      page.drawText(invoice.user.companyName || 'Company Name', {\n        x: 50,\n        y: yPosition,\n        size: 20,\n        font: boldFont,\n        color: rgb(0, 0, 0),\n      });\n      yPosition -= isCompact ? 14 : 20;\n    }\n    // Contact / Address (always on white for modern)\n    if (invoice.user.companyAddress) {\n      page.drawText(invoice.user.companyAddress, {\n        x: 50,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0.25, 0.25, 0.25),\n      });\n      yPosition -= isCompact ? 10 : 15;\n    }\n    \n    if (invoice.user.companyPhone) {\n      page.drawText(`Phone: ${invoice.user.companyPhone}`, {\n        x: 50,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0.25, 0.25, 0.25),\n      });\n      yPosition -= isCompact ? 10 : 15;\n    }\n    \n    if (invoice.user.companyEmail) {\n      page.drawText(`Email: ${invoice.user.companyEmail}`, {\n        x: 50,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0.25, 0.25, 0.25),\n      });\n      yPosition -= isCompact ? 10 : 15;\n    }\n    // Separator line below header content\n    page.drawRectangle({ x: 50, y: yPosition - 6, width: width - 100, height: 0.5, color: rgb(0.88, 0.88, 0.92) });\n    yPosition -= isCompact ? 12 : 18;\n    \n    // Invoice Title (classic only; modern and premium already drew title in banner)\n    yPosition -= isCompact ? 18 : 30;\n    if (template !== 'modern' && template !== 'premium') {\n      page.drawText('INVOICE', {\n        x: width / 2 - 40,\n        y: yPosition,\n        size: 24,\n        font: boldFont,\n        color: schemeColor,\n      });\n    }\n    \n    // Invoice Details (styled meta box with premium enhancements)\n    yPosition -= isCompact ? 24 : 40;\n    const metaX = width - 230;\n    const metaW = 180;\n    const metaH = template === 'premium' ? 90 : 72;\n    const metaY = yPosition + (isCompact ? 24 : 34);\n    \n    if (template === 'premium') {\n      // Ultra-premium meta boxes with luxury styling\n      const metaItems = [\n        { label: 'Invoice #', value: String(invoice.invoiceNumber || invoice.id || '') },\n        { label: 'Invoice Date', value: new Date(invoice.invoiceDate).toLocaleDateString() },\n        { label: 'Due Date', value: new Date(invoice.dueDate).toLocaleDateString() },\n        { label: 'Project Code', value: `PRJ-${String(invoice.id).slice(-4)}` }\n      ];\n      \n      const boxWidth = 160;\n      const boxHeight = 70;\n      const boxSpacing = 20;\n      const startX = 50;\n      let currentX = startX;\n      \n      metaItems.forEach((item, idx) => {\n        if (currentX + boxWidth > width - 50) {\n          currentX = startX;\n          yPosition -= boxHeight + boxSpacing;\n        }\n        \n        // Luxury glass effect box\n        page.drawRectangle({\n          x: currentX + 3,\n          y: yPosition - boxHeight - 3,\n          width: boxWidth,\n          height: boxHeight,\n          color: rgb(0, 0, 0),\n          opacity: 0.1\n        });\n        \n        page.drawRectangle({\n          x: currentX,\n          y: yPosition - boxHeight,\n          width: boxWidth,\n          height: boxHeight,\n          color: rgb(1, 1, 1),\n          opacity: 0.95\n        });\n        \n        // Gold accent top border\n        page.drawRectangle({\n          x: currentX,\n          y: yPosition - 4,\n          width: boxWidth,\n          height: 4,\n          color: rgb(1, 0.84, 0)\n        });\n        \n        // Content\n        page.drawText(item.label.toUpperCase(), {\n          x: currentX + 15,\n          y: yPosition - 25,\n          size: 9,\n          font: boldFont,\n          color: rgb(0.4, 0.4, 0.4)\n        });\n        \n        page.drawText(item.value, {\n          x: currentX + 15,\n          y: yPosition - 45,\n          size: 12,\n          font: boldFont,\n          color: rgb(0.1, 0.1, 0.1)\n        });\n        \n        currentX += boxWidth + boxSpacing;\n      });\n      \n      yPosition -= boxHeight + 30;\n    } else {\n      // Standard meta box styling\n      page.drawRectangle({ \n        x: metaX + 2, \n        y: metaY - metaH - 2, \n        width: metaW, \n        height: metaH, \n        color: shadowColor,\n        opacity: 0.2 \n      });\n      page.drawRectangle({ \n        x: metaX, \n        y: metaY - metaH, \n        width: metaW, \n        height: metaH, \n        color: accentColor \n      });\n      // Elegant border\n      page.drawRectangle({ \n        x: metaX, \n        y: metaY - metaH, \n        width: metaW, \n        height: metaH, \n        color: schemeColor,\n        opacity: 0.15 \n      });\n      page.drawRectangle({ \n        x: metaX, \n        y: metaY - metaH, \n        width: metaW, \n        height: 1, \n        color: schemeColor,\n        opacity: 0.4 \n      });\n    }\n    // Only draw standard meta box content for non-premium templates\n    const metaBottom = metaY - metaH;\n    if (template !== 'premium') {\n      const labelColor = rgb(0.35, 0.35, 0.35);\n      let metaLineY = metaY - 16;\n      page.drawText('Invoice #', { x: metaX + 10, y: metaLineY, size: 9, font: baseFont, color: labelColor });\n      const invNo = String(invoice.invoiceNumber || invoice.id || '');\n      const invNoWidth = boldFont.widthOfTextAtSize(invNo, 10);\n      page.drawText(invNo, { x: metaX + metaW - 10 - invNoWidth, y: metaLineY, size: 10, font: boldFont, color: rgb(0,0,0) });\n      metaLineY -= 16;\n      page.drawText('Invoice Date', { x: metaX + 10, y: metaLineY, size: 9, font: baseFont, color: labelColor });\n      const invDate = new Date(invoice.invoiceDate).toLocaleDateString();\n      const invDateWidth = baseFont.widthOfTextAtSize(invDate, 10);\n      page.drawText(invDate, { x: metaX + metaW - 10 - invDateWidth, y: metaLineY, size: 10, font: baseFont, color: rgb(0,0,0) });\n      metaLineY -= 16;\n      page.drawText('Due Date', { x: metaX + 10, y: metaLineY, size: 9, font: baseFont, color: labelColor });\n      const dueDate = new Date(invoice.dueDate).toLocaleDateString();\n      const dueDateWidth = baseFont.widthOfTextAtSize(dueDate, 10);\n      page.drawText(dueDate, { x: metaX + metaW - 10 - dueDateWidth, y: metaLineY, size: 10, font: baseFont, color: rgb(0,0,0) });\n      // Optional status pill (inside meta box, top-right)\n      if (invoice.status) {\n        const pillText = String(invoice.status).replace(/_/g, ' ');\n        const pillPadding = 6;\n        const pillTextWidth = boldFont.widthOfTextAtSize(pillText, 8);\n        const pillW = pillTextWidth + pillPadding * 2;\n        const pillX = metaX + metaW - pillW - 10;\n        const pillY = metaY - 20;\n        page.drawRectangle({ x: pillX, y: pillY, width: pillW, height: 14, color: schemeColor });\n        page.drawText(pillText, { x: pillX + pillPadding, y: pillY + 3, size: 8, font: boldFont, color: rgb(1,1,1) });\n      }\n    }\n    \n    // Bill To\n    yPosition -= isCompact ? 24 : 40;\n    page.drawText('Bill To:', {\n      x: 50,\n      y: yPosition,\n      size: 12,\n      font: boldFont,\n      color: rgb(0, 0, 0),\n    });\n    const billToHeaderY = yPosition;\n    yPosition -= isCompact ? 12 : 20;\n    page.drawText(invoice.client.name, {\n      x: 50,\n      y: yPosition,\n      size: 10,\n      font: baseFont,\n      color: rgb(0, 0, 0),\n    });\n    \n    if (invoice.client.companyName) {\n      yPosition -= isCompact ? 10 : 15;\n      page.drawText(invoice.client.companyName, {\n        x: 50,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n    }\n    \n    if (invoice.client.addressLine1) {\n      yPosition -= isCompact ? 10 : 15;\n      page.drawText(invoice.client.addressLine1, {\n        x: 50,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n    }\n    \n    if (invoice.client.city || invoice.client.state || invoice.client.postalCode) {\n      yPosition -= isCompact ? 10 : 15;\n      const address = `${invoice.client.city || ''} ${invoice.client.state || ''} ${invoice.client.postalCode || ''}`.trim();\n      page.drawText(address, {\n        x: 50,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n    }\n    // From block (right column) to balance layout (always start below meta box bottom)\n    {\n      const fromX = width - 230;\n      let fromY = Math.min(billToHeaderY, metaBottom - 12);\n      page.drawText('From:', { x: fromX, y: fromY, size: 12, font: boldFont, color: rgb(0,0,0) });\n      fromY -= isCompact ? 12 : 20;\n      page.drawText(invoice.user.companyName || '', { x: fromX, y: fromY, size: 10, font: boldFont, color: rgb(0,0,0) });\n      if (invoice.user.companyAddress) { fromY -= isCompact ? 10 : 15; page.drawText(invoice.user.companyAddress, { x: fromX, y: fromY, size: 9, font: baseFont, color: rgb(0.25,0.25,0.25), maxWidth: 180 }); }\n      if (invoice.user.companyPhone) { fromY -= isCompact ? 10 : 15; page.drawText(`Phone: ${invoice.user.companyPhone}`, { x: fromX, y: fromY, size: 9, font: baseFont, color: rgb(0.25,0.25,0.25) }); }\n      if (invoice.user.companyEmail) { fromY -= isCompact ? 10 : 15; page.drawText(`Email: ${invoice.user.companyEmail}`, { x: fromX, y: fromY, size: 9, font: baseFont, color: rgb(0.25,0.25,0.25) }); }\n      if (invoice.user.taxNumber) { fromY -= isCompact ? 10 : 15; page.drawText(`VAT/Tax: ${invoice.user.taxNumber}`, { x: fromX, y: fromY, size: 9, font: baseFont, color: rgb(0.25,0.25,0.25) }); }\n      // Ensure the next section starts below both columns\n      yPosition = Math.min(yPosition, fromY) - (isCompact ? 8 : 12);\n    }\n    \n    // Premium Items Table Header with template-specific styling\n    yPosition -= isCompact ? 32 : 48;\n    const headerHeight = template === 'premium' ? 40 : 32;\n    \n    if (template === 'premium') {\n      // Ultra-premium table header with luxury dark gradient\n      const gradientSteps = 6;\n      for (let i = 0; i < gradientSteps; i++) {\n        const alpha = 1 - (i * 0.1);\n        const stepHeight = headerHeight / gradientSteps;\n        const stepY = yPosition - 20 + (i * stepHeight);\n        const gradientColor = rgb(\n          0.06 * alpha + 0.12 * (1 - alpha),\n          0.1 * alpha + 0.16 * (1 - alpha),\n          0.14 * alpha + 0.24 * (1 - alpha)\n        );\n        page.drawRectangle({ \n          x: 50, \n          y: stepY, \n          width: width - 100, \n          height: stepHeight + 1, \n          color: gradientColor \n        });\n      }\n      \n      // Gold accent bottom border\n      page.drawRectangle({\n        x: 50,\n        y: yPosition - 20,\n        width: width - 100,\n        height: 3,\n        color: rgb(1, 0.84, 0)\n      });\n      \n      // Luxury shadow\n      page.drawRectangle({\n        x: 52,\n        y: yPosition - 25,\n        width: width - 100,\n        height: headerHeight,\n        color: rgb(0, 0, 0),\n        opacity: 0.2\n      });\n    } else {\n      // Header shadow\n      page.drawRectangle({\n        x: 52,\n        y: yPosition - 22,\n        width: width - 100,\n        height: headerHeight,\n        color: shadowColor,\n        opacity: 0.15\n      });\n      \n      // Header background with subtle gradient\n      if (template === 'modern') {\n        // Primary header color\n        page.drawRectangle({\n          x: 50,\n          y: yPosition - 20,\n          width: width - 100,\n          height: headerHeight,\n          color: schemeColor,\n        });\n        // Gradient overlay\n        page.drawRectangle({\n          x: 50,\n          y: yPosition - 20,\n          width: width - 100,\n          height: headerHeight / 2,\n          color: rgb(1, 1, 1),\n          opacity: 0.1\n        });\n      } else {\n        page.drawRectangle({\n          x: 50,\n          y: yPosition - 20,\n          width: width - 100,\n          height: headerHeight,\n          color: lightGray,\n        });\n      }\n      \n      // Premium header border\n      page.drawRectangle({\n        x: 50,\n        y: yPosition - 20 + headerHeight - 1,\n        width: width - 100,\n        height: 1,\n        color: schemeColor,\n        opacity: 0.6\n      });\n    }\n    \n    // Premium header text with better spacing\n    const headerTextColor = (template === 'modern' || template === 'premium') ? rgb(1,1,1) : rgb(0.2, 0.2, 0.2);\n    const headerY = yPosition - (template === 'premium' ? 16 : 12);\n    \n    page.drawText('DESCRIPTION', {\n      x: 65,\n      y: headerY,\n      size: 9,\n      font: boldFont,\n      color: headerTextColor,\n    });\n    \n    page.drawText('QTY', {\n      x: 305,\n      y: headerY,\n      size: 9,\n      font: boldFont,\n      color: headerTextColor,\n    });\n    \n    page.drawText('RATE', {\n      x: 365,\n      y: headerY,\n      size: 9,\n      font: boldFont,\n      color: headerTextColor,\n    });\n    \n    page.drawText('AMOUNT', {\n      x: 475,\n      y: headerY,\n      size: 9,\n      font: boldFont,\n      color: headerTextColor,\n    });\n    \n    // Items with premium styling\n    yPosition -= isCompact ? 30 : 45; // extra gap to avoid overlap with header band\n    const qtyX = 310;\n    const rateX = 390;\n    const amountX = 520;\n    const colRightPadding = 20;\n    \n    invoice.items.forEach((item: any, idx: number) => {\n      const rowHeight = isCompact ? 16 : (template === 'premium' ? 28 : 22);\n      \n      if (template === 'premium') {\n        // Ultra-premium row styling with hover-like effects\n        if (idx % 2 === 1) {\n          // Luxury alternating row background\n          page.drawRectangle({ \n            x: 50, \n            y: yPosition - 6, \n            width: width - 100, \n            height: rowHeight, \n            color: rgb(0.98, 0.99, 1.0),\n            opacity: 0.8\n          });\n          \n          // Subtle shadow for depth\n          page.drawRectangle({ \n            x: 52, \n            y: yPosition - 8, \n            width: width - 100, \n            height: rowHeight, \n            color: rgb(0.9, 0.9, 0.95),\n            opacity: 0.3\n          });\n        }\n        \n        // Premium description with enhanced typography\n        const descLines = (item.description ?? '').split('\\n');\n        const mainDesc = descLines[0] || '';\n        const subDesc = descLines.slice(1).join(' ') || '';\n        \n        page.drawText(mainDesc, {\n          x: 65,\n          y: yPosition + 4,\n          size: 11,\n          font: boldFont,\n          color: rgb(0.1, 0.1, 0.1),\n          maxWidth: qtyX - 90,\n        });\n        \n        if (subDesc) {\n          page.drawText(subDesc, {\n            x: 65,\n            y: yPosition - 8,\n            size: 9,\n            font: baseFont,\n            color: rgb(0.4, 0.4, 0.4),\n            maxWidth: qtyX - 90,\n          });\n        }\n      } else {\n        // Standard zebra striping for readability\n        if (idx % 2 === 1) {\n          page.drawRectangle({ x: 50, y: yPosition - 4, width: width - 100, height: rowHeight, color: rowAlt });\n        }\n        \n        // Description (wrap lightly by truncation for now)\n        page.drawText(item.description ?? '', {\n          x: 60,\n          y: yPosition,\n          size: 9,\n          font: baseFont,\n          color: rgb(0, 0, 0),\n          maxWidth: qtyX - 80,\n        });\n      }\n      \n      // Right-aligned numeric columns with premium styling\n      const qtyText = String(item.quantity ?? 0);\n      const rateText = `${formatCurrency(item.rate ?? 0)}`;\n      const amountText = `${formatCurrency(item.amount ?? 0)}`;\n      const fontSize = template === 'premium' ? 10 : 9;\n      const fontWeight = template === 'premium' ? boldFont : baseFont;\n      const textColor = template === 'premium' ? rgb(0.1, 0.1, 0.1) : rgb(0, 0, 0);\n      \n      const qtyWidth = fontWeight.widthOfTextAtSize(qtyText, fontSize);\n      const rateWidth = fontWeight.widthOfTextAtSize(rateText, fontSize);\n      const amountWidth = fontWeight.widthOfTextAtSize(amountText, fontSize);\n      \n      page.drawText(qtyText, { x: qtyX - colRightPadding - qtyWidth, y: yPosition, size: fontSize, font: fontWeight, color: textColor });\n      page.drawText(rateText, { x: rateX - colRightPadding - rateWidth, y: yPosition, size: fontSize, font: fontWeight, color: textColor });\n      page.drawText(amountText, { x: amountX - colRightPadding - amountWidth, y: yPosition, size: fontSize, font: fontWeight, color: textColor });\n      \n      // Row separator with premium styling\n      if (template === 'premium') {\n        page.drawRectangle({ \n          x: 60, \n          y: yPosition - 10, \n          width: width - 120, \n          height: 0.5, \n          color: rgb(0.85, 0.87, 0.90),\n          opacity: 0.6\n        });\n      } else {\n        page.drawRectangle({ x: 50, y: yPosition - 6, width: width - 100, height: 0.5, color: rgb(0.9, 0.9, 0.9) });\n      }\n      \n      yPosition -= isCompact ? 14 : (template === 'premium' ? 24 : 20);\n    });\n    \n    // Totals\n    yPosition -= isCompact ? 12 : 20;\n    \n    // Subtotal\n    page.drawText('Subtotal:', {\n      x: layoutOpt.includes('left') ? 60 : 400,\n      y: yPosition,\n      size: 10,\n      font: baseFont,\n      color: rgb(0, 0, 0),\n    });\n    \n    page.drawText(`${formatCurrency(invoice.subtotal)}`, {\n      x: layoutOpt.includes('left') ? 130 : 470,\n      y: yPosition,\n      size: 10,\n      font: baseFont,\n      color: rgb(0, 0, 0),\n    });\n    \n    // Tax\n    if (invoice.taxAmount > 0) {\n      yPosition -= isCompact ? 10 : 15;\n      page.drawText(`Tax (${invoice.taxRate}%):`, {\n        x: layoutOpt.includes('left') ? 60 : 400,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n      \n      page.drawText(`${formatCurrency(invoice.taxAmount)}`, {\n        x: layoutOpt.includes('left') ? 130 : 470,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n    }\n    \n    // Discount\n    if (invoice.discount > 0) {\n      yPosition -= isCompact ? 10 : 15;\n      const discountText = invoice.discountType === 'PERCENTAGE' \n        ? `Discount (${invoice.discount}%):`\n        : 'Discount:';\n      \n      page.drawText(discountText, {\n        x: layoutOpt.includes('left') ? 60 : 400,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n      \n      const discountAmount = invoice.discountType === 'PERCENTAGE'\n        ? (invoice.subtotal * invoice.discount / 100)\n        : invoice.discount;\n      \n      page.drawText(`-${formatCurrency(discountAmount)}`, {\n        x: layoutOpt.includes('left') ? 130 : 470,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n    }\n    // Paid (if any)\n    if ((invoice.paidAmount ?? 0) > 0) {\n      yPosition -= isCompact ? 10 : 15;\n      page.drawText('Paid:', {\n        x: layoutOpt.includes('left') ? 60 : 400,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n      page.drawText(`${formatCurrency(invoice.paidAmount)}`, {\n        x: layoutOpt.includes('left') ? 130 : 470,\n        y: yPosition,\n        size: 10,\n        font: baseFont,\n        color: rgb(0, 0, 0),\n      });\n    }\n    \n    // Total (with premium styling for totals box)\n    yPosition -= isCompact ? 12 : 20;\n    const totalsBoxX = layoutOpt.includes('left') ? 50 : width - 220;\n    const totalsBoxY = yPosition + 30;\n    const totalsBoxW = layoutOpt.includes('left') ? 280 : (template === 'premium' ? 220 : 180);\n    const totalsBoxH = template === 'premium' ? 100 : 80;\n    \n    if (template === 'premium') {\n      // Ultra-premium totals box with luxury styling\n      // Shadow\n      page.drawRectangle({ \n        x: totalsBoxX + 4, \n        y: totalsBoxY - totalsBoxH - 4, \n        width: totalsBoxW, \n        height: totalsBoxH, \n        color: rgb(0, 0, 0),\n        opacity: 0.15\n      });\n      \n      // Main background\n      page.drawRectangle({ \n        x: totalsBoxX, \n        y: totalsBoxY - totalsBoxH, \n        width: totalsBoxW, \n        height: totalsBoxH, \n        color: rgb(1, 1, 1),\n        opacity: 0.98\n      });\n      \n      // Gold accent border\n      page.drawRectangle({ \n        x: totalsBoxX, \n        y: totalsBoxY - 4, \n        width: totalsBoxW, \n        height: 4, \n        color: rgb(1, 0.84, 0)\n      });\n      \n      // Subtle inner border\n      page.drawRectangle({ \n        x: totalsBoxX + 2, \n        y: totalsBoxY - totalsBoxH + 2, \n        width: totalsBoxW - 4, \n        height: totalsBoxH - 6, \n        color: rgb(0.95, 0.95, 0.95),\n        opacity: 0.5\n      });\n    } else {\n      page.drawRectangle({ x: totalsBoxX, y: totalsBoxY - totalsBoxH, width: totalsBoxW, height: totalsBoxH, color: rgb(0.97, 0.97, 1) });\n    }\n    // Total line with premium styling\n    const totalFontSize = template === 'premium' ? 14 : 11;\n    const balanceFontSize = template === 'premium' ? 16 : 12;\n    \n    page.drawText('Total:', {\n      x: totalsBoxX + (template === 'premium' ? 20 : 12),\n      y: totalsBoxY - (template === 'premium' ? 30 : 24),\n      size: totalFontSize,\n      font: boldFont,\n      color: template === 'premium' ? rgb(0.1, 0.1, 0.1) : rgb(0, 0, 0),\n    });\n    const totalText = `${formatCurrency(invoice.totalAmount ?? 0)}`;\n    const totalWidth = boldFont.widthOfTextAtSize(totalText, totalFontSize);\n    page.drawText(totalText, {\n      x: totalsBoxX + totalsBoxW - (template === 'premium' ? 20 : 12) - totalWidth,\n      y: totalsBoxY - (template === 'premium' ? 30 : 24),\n      size: totalFontSize,\n      font: boldFont,\n      color: template === 'premium' ? rgb(0.1, 0.1, 0.1) : rgb(0, 0, 0),\n    });\n    \n    // Currency code (secondary display)\n    const codeText = currencyCode;\n    const codeWidth = baseFont.widthOfTextAtSize(codeText, 8);\n    page.drawText(codeText, { \n      x: totalsBoxX + totalsBoxW - (template === 'premium' ? 20 : 12) - codeWidth, \n      y: totalsBoxY - (template === 'premium' ? 45 : 36), \n      size: 8, \n      font: baseFont, \n      color: rgb(0.4,0.4,0.4) \n    });\n    \n    // Balance Due line with premium styling\n    const balanceDue = (invoice.balanceDue ?? ((invoice.totalAmount ?? 0) - (invoice.paidAmount ?? 0)));\n    const balanceText = `${formatCurrency(balanceDue)}`;\n    \n    if (template === 'premium') {\n      // Premium separator with gold accent\n      page.drawRectangle({ \n        x: totalsBoxX + 15, \n        y: totalsBoxY - 60, \n        width: totalsBoxW - 30, \n        height: 1, \n        color: rgb(1, 0.84, 0),\n        opacity: 0.6\n      });\n    } else {\n      page.drawRectangle({ x: totalsBoxX + 8, y: totalsBoxY - 54, width: totalsBoxW - 16, height: 0.5, color: rgb(0.88, 0.88, 0.92) });\n    }\n    \n    page.drawText('Balance Due:', {\n      x: totalsBoxX + (template === 'premium' ? 20 : 12),\n      y: totalsBoxY - (template === 'premium' ? 75 : 64),\n      size: balanceFontSize,\n      font: boldFont,\n      color: template === 'premium' ? rgb(1, 0.84, 0) : schemeColor,\n    });\n    const balWidth = boldFont.widthOfTextAtSize(balanceText, balanceFontSize);\n    page.drawText(balanceText, {\n      x: totalsBoxX + totalsBoxW - (template === 'premium' ? 20 : 12) - balWidth,\n      y: totalsBoxY - (template === 'premium' ? 75 : 64),\n      size: balanceFontSize,\n      font: boldFont,\n      color: template === 'premium' ? rgb(1, 0.84, 0) : schemeColor,\n    });\n    \n    // Paid ribbon in totals box with premium styling\n    if (String(invoice.status || '').toUpperCase() === 'PAID') {\n      const ribbonW = template === 'premium' ? 60 : 48;\n      const ribbonH = template === 'premium' ? 20 : 16;\n      const ribbonX = totalsBoxX + totalsBoxW - ribbonW - (template === 'premium' ? 20 : 12);\n      const ribbonY = totalsBoxY - (template === 'premium' ? 20 : 16);\n      \n      if (template === 'premium') {\n        // Premium PAID ribbon with gold styling\n        page.drawRectangle({ \n          x: ribbonX, \n          y: ribbonY, \n          width: ribbonW, \n          height: ribbonH, \n          color: rgb(1, 0.84, 0)\n        });\n        page.drawText('PAID', { \n          x: ribbonX + 12, \n          y: ribbonY + 5, \n          size: 11, \n          font: boldFont, \n          color: rgb(0.1, 0.1, 0.1)\n        });\n      } else {\n        page.drawRectangle({ x: ribbonX, y: ribbonY, width: ribbonW, height: ribbonH, color: schemeColor });\n        page.drawText('PAID', { x: ribbonX + 8, y: ribbonY + 3, size: 9, font: boldFont, color: rgb(1,1,1) });\n      }\n    }\n    // Ensure following sections are below the totals box\n    yPosition = totalsBoxY - totalsBoxH - (isCompact ? 16 : 24);\n\n    // Optional QR code linking to public invoice/pay URL\n    try {\n      let QR: any = null;\n      try {\n        // Avoid static analyzer resolution; require at runtime if available\n        // eslint-disable-next-line @typescript-eslint/no-implied-eval\n        const req: any = eval('require');\n        const moduleName = 'qrcode';\n        QR = req(moduleName);\n      } catch {}\n      if (QR && typeof QR.toDataURL === 'function') {\n        const baseUrl = process.env.FRONTEND_PUBLIC_URL || process.env.APP_URL || 'http://localhost:3000';\n        const path = (invoice.shareId ? `/public/invoices/${invoice.shareId}` : `/invoices/${invoice.id}`);\n        const url = `${baseUrl}${path}`;\n        const dataUrl: string = await QR.toDataURL(url, { margin: 0, width: 120 });\n        const m = /^data:image\\/png;base64,(.+)$/.exec(dataUrl);\n        if (m) {\n          const bytes = new Uint8Array(Buffer.from(m[1], 'base64'));\n          const img = await pdfDoc.embedPng(bytes);\n          const imgW = 90; const scale = imgW / img.width; const imgH = img.height * scale;\n          const qrX = 50; const qrY = Math.max(90, yPosition - imgH - 10);\n          page.drawImage(img, { x: qrX, y: qrY, width: imgW, height: imgH });\n          page.drawText('Scan to view/pay', { x: qrX, y: qrY - 12, size: 8, font: baseFont, color: rgb(0.4,0.4,0.4) });\n        }\n      }\n    } catch { /* optional */\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\invoices\\public-invoices.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":12,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":14,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":17,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":17,"endColumn":9}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Controller, Get, Param, Req } from '@nestjs/common';\nimport type { Request } from 'express';\nimport { InvoicesService } from './invoices.service';\n\n@Controller('public/invoices')\nexport class PublicInvoicesController {\n  constructor(private readonly invoicesService: InvoicesService) {}\n\n  @Get(':shareId')\n  getByShareId(@Param('shareId') shareId: string, @Req() req: Request) {\n    const ipHeader = (req.headers['x-forwarded-for'] as string) || req.ip;\n    const ip = Array.isArray(ipHeader)\n      ? ipHeader[0]\n      : ipHeader?.split(',')[0] || req.ip;\n    const userAgent = req.headers['user-agent'];\n    return this.invoicesService.getPublicInvoiceByShareId(shareId, {\n      ip,\n      userAgent,\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\notifications\\notifications.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Get' is defined but never used.","line":1,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":25}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Controller, Get, Query, Sse } from '@nestjs/common';\nimport { NotificationsService } from './notifications.service';\nimport { Observable } from 'rxjs';\nimport { MessageEvent } from '@nestjs/common';\n\n@Controller('notifications')\nexport class NotificationsController {\n  constructor(private readonly notifications: NotificationsService) {}\n\n  // Server-Sent Events stream: client must pass a JWT token (same as API token)\n  @Sse('stream')\n  stream(@Query('token') token?: string): Observable<MessageEvent> {\n    const payload = this.notifications.verifyToken(token);\n    const userId = payload?.sub;\n    return this.notifications.stream(userId);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\notifications\\notifications.module.ts","messages":[{"ruleId":"@typescript-eslint/require-await","severity":2,"message":"Async method 'useFactory' has no 'await' expression.","line":12,"column":7,"nodeType":"ArrowFunctionExpression","messageId":"missingAwait","endLine":12,"endColumn":25,"suggestions":[{"messageId":"removeAsync","fix":{"range":[399,405],"text":""},"desc":"Remove 'async'."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Module } from '@nestjs/common';\nimport { NotificationsService } from './notifications.service';\nimport { NotificationsController } from './notifications.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (config: ConfigService) => ({\n        secret:\n          config.get('JWT_SECRET') ||\n          (config.get('NODE_ENV') === 'production'\n            ? undefined\n            : 'dev_jwt_secret'),\n        signOptions: { expiresIn: config.get('JWT_EXPIRATION', '7d') },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [NotificationsService],\n  controllers: [NotificationsController],\n  exports: [NotificationsService],\n})\nexport class NotificationsModule {}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\notifications\\notifications.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":27,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":27,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used.","line":44,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":44,"endColumn":15}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  UnauthorizedException,\n  MessageEvent,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nexport type AppEvent = {\n  userId?: string; // owner user id (for scoping)\n  type: string; // e.g., invoice.sent, payment.processed\n  payload?: any;\n  ts: string; // ISO timestamp\n};\n\n@Injectable()\nexport class NotificationsService {\n  private subject = new Subject<AppEvent>();\n\n  constructor(private readonly jwtService: JwtService) {}\n\n  emit(userId: string | undefined, type: string, payload?: any) {\n    const evt: AppEvent = {\n      userId,\n      type,\n      payload,\n      ts: new Date().toISOString(),\n    };\n    this.subject.next(evt);\n  }\n\n  stream(userId?: string): Observable<MessageEvent> {\n    return this.subject.asObservable().pipe(\n      filter((e) => !userId || e.userId === userId),\n      map((e) => ({ data: e }) as MessageEvent),\n    );\n  }\n\n  verifyToken(token?: string): { sub: string } {\n    if (!token) throw new UnauthorizedException('Missing token');\n    try {\n      return this.jwtService.verify(token);\n    } catch (e) {\n      throw new UnauthorizedException('Invalid token');\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\dto\\create-payment.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\payments.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Patch' is defined but never used.","line":6,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":8},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Delete' is defined but never used.","line":8,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":27,"column":40,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":27,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":27,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":27,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":35,"column":48,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":35,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":35,"column":53,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":35,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":40,"column":54,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":40,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":40,"column":59,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":40,"endColumn":61},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":67,"column":41,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":67,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":67,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `{ invoiceId?: string | undefined; status?: PaymentStatus | undefined; method?: any; dateFrom?: string | undefined; dateTo?: string | undefined; search?: string | undefined; page?: number | undefined; limit?: number | undefined; } | undefined`.","line":67,"column":50,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":67,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":72,"column":45,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":72,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":72,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":72,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":81,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":81,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":81,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":81,"endColumn":51}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { ProcessPaymentDto } from './dto/create-payment.dto';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { EmailVerifiedGuard } from '../auth/guards/email-verified.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport { PaymentStatus, PaymentMethod } from '../../common/enums';\n\n@Controller('payments')\n@UseGuards(JwtAuthGuard, EmailVerifiedGuard)\nexport class PaymentsController {\n  constructor(private readonly paymentsService: PaymentsService) {}\n\n  @Post('record')\n  create(@CurrentUser() user, @Body() createPaymentDto: CreatePaymentDto) {\n    return this.paymentsService.create(user.id, createPaymentDto);\n  }\n\n  @Post('process')\n  processPayment(\n    @CurrentUser() user,\n    @Body() processPaymentDto: ProcessPaymentDto,\n  ) {\n    return this.paymentsService.processPayment(user.id, processPaymentDto);\n  }\n\n  @Get('statistics')\n  getStatistics(@CurrentUser() user) {\n    return this.paymentsService.getPaymentStatistics(user.id);\n  }\n\n  @Get()\n  findAll(\n    @CurrentUser() user,\n    @Query('invoiceId') invoiceId?: string,\n    @Query('status')\n    status?: (typeof PaymentStatus)[keyof typeof PaymentStatus],\n    @Query('method')\n    method?: (typeof PaymentMethod)[keyof typeof PaymentMethod],\n    @Query('search') search?: string,\n    @Query('dateFrom') dateFrom?: string,\n    @Query('dateTo') dateTo?: string,\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n  ) {\n    const query: any = {\n      invoiceId,\n      status,\n      method,\n      search,\n      dateFrom,\n      dateTo,\n      page: page ? Number(page) : undefined,\n      limit: limit ? Number(limit) : undefined,\n    };\n    return this.paymentsService.findAll(user.id, query);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @CurrentUser() user) {\n    return this.paymentsService.findOne(id, user.id);\n  }\n\n  @Post(':id/refund')\n  refund(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Body('amount') amount?: number,\n  ) {\n    return this.paymentsService.refund(id, user.id, amount);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\payments.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\payments.service.spec.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":34,"column":1,"nodeType":"Identifier","messageId":"unsafeCall","endLine":34,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":40,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":40,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":41,"column":5,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":53,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":43,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":43,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":43,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":43,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":43,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":43,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":44,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":44,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":44,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":44,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":44,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":44,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":47,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":47,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":47,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":47,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":47,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":47,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":48,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":48,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":48,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":48,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":48,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":48,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":51,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":51,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":51,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":51,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":51,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":51,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":55,"column":5,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":59,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":56,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":56,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":56,"column":33,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":56,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":56,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":56,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":58,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":58,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":58,"column":38,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":58,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":58,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":58,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":64,"column":35,"nodeType":"Property","messageId":"anyAssignment","endLine":64,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":65,"column":34,"nodeType":"Property","messageId":"anyAssignment","endLine":65,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":67,"column":54,"nodeType":"Property","messageId":"anyAssignment","endLine":67,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":67,"column":60,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":67,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":67,"column":65,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":74,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":74,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":75,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":75,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .resetAllMocks on an `error` typed value.","line":75,"column":10,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":75,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":77,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":77,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .useRealTimers on an `error` typed value.","line":77,"column":10,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":77,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":80,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":80,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":81,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":81,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":83,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":83,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":83,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":83,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":84,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":84,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":84,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":84,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":85,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":85,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":85,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":85,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":86,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":86,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":86,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":86,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":87,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":87,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":87,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":87,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":89,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":94,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":95,"column":54,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":95,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":97,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":97,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":97,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":97,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBeDefined on an `error` typed value.","line":97,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":97,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":98,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":98,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":98,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":98,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":98,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":98,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":98,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":98,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":99,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":99,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":99,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":99,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":100,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":100,"endColumn":77},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":100,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":100,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":100,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":100,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":103,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":103,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":103,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":103,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":103,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":103,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":103,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":103,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":105,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":108,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":105,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":105,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":105,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":105,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":107,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":107,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":107,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":107,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":107,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":107,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":110,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":110,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":110,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":110,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":110,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":110,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":110,"column":44,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":110,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":111,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":114,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":111,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":111,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":111,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":111,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":112,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":112,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":112,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":112,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .any on an `error` typed value.","line":112,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":112,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":116,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":116,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":116,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":116,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":116,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":116,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledTimes on an `error` typed value.","line":116,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":116,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":119,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":119,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":126,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":126,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":126,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":126,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":127,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":127,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":127,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":127,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":130,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":130,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":130,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":130,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":131,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":131,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":131,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":133,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":137,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":138,"column":54,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":138,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":140,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":140,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":140,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":140,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBeDefined on an `error` typed value.","line":140,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":140,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":141,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":141,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":141,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":141,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":141,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":141,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":141,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":141,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":143,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":143,"endColumn":80},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":143,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":143,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":143,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":143,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":145,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":145,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":145,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":145,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":145,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":145,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":145,"column":44,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":145,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":146,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":148,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":146,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":146,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":146,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":146,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":147,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":147,"endColumn":72},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":147,"column":24,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":147,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stringContaining on an `error` typed value.","line":147,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":147,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":150,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":150,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":150,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":150,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":150,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":150,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":150,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":150,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":153,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":153,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":160,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":160,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":160,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":160,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":161,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":161,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":161,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":161,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":162,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":162,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":162,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":162,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":163,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":163,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":163,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":163,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":165,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":169,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":170,"column":38,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":170,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":172,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":172,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":172,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":172,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":172,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":172,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":172,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":172,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":175,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":175,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":177,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":177,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":177,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":177,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":178,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":178,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":178,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":178,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":179,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":179,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":179,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":179,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":180,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":180,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":180,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":181,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":181,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":181,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":181,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":185,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":189,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":190,"column":54,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":190,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":192,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":192,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":192,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":192,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBeDefined on an `error` typed value.","line":192,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":192,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":193,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":193,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":193,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":193,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":193,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":193,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledTimes on an `error` typed value.","line":193,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":193,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":197,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":197,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":198,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":198,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":198,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":198,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":199,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":203,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":205,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":205,"endColumn":73},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":205,"column":13,"nodeType":"Identifier","messageId":"unsafeCall","endLine":205,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":205,"column":45,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":205,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rejects on an `error` typed value.","line":205,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":205,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":210,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":210,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":215,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":215,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":215,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":215,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":216,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":220,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":222,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":222,"endColumn":73},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":222,"column":13,"nodeType":"Identifier","messageId":"unsafeCall","endLine":222,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":222,"column":45,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":222,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rejects on an `error` typed value.","line":222,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":222,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":228,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":228,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":229,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":229,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":230,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":230,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .useFakeTimers on an `error` typed value.","line":230,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":230,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":234,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":234,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":234,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":234,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":235,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":235,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":235,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":235,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":236,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":236,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":236,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":236,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":237,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":237,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":237,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":237,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":238,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":238,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":238,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":238,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":240,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":244,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":245,"column":56,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":245,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":246,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":246,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .advanceTimersByTimeAsync on an `error` typed value.","line":246,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":246,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":249,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":249,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":249,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":249,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":249,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":249,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":250,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":250,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":250,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":250,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":250,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":250,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":250,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":250,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":251,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":251,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":251,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":251,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":252,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":252,"endColumn":77},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":252,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":252,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":252,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":252,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":255,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":255,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":255,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":255,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":255,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":255,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledTimes on an `error` typed value.","line":255,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":255,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":258,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":258,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":259,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":259,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .useFakeTimers on an `error` typed value.","line":259,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":259,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":268,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":268,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":268,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":268,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":269,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":269,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":269,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":269,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":270,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":270,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":270,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":270,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":271,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":271,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":271,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":271,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":273,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":277,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":278,"column":56,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":278,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":279,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":279,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .advanceTimersByTimeAsync on an `error` typed value.","line":279,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":279,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":282,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":282,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":282,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":282,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":282,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":282,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":282,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":282,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":285,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":285,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":286,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":286,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .useFakeTimers on an `error` typed value.","line":286,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":286,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":295,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":295,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":295,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":295,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":296,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":296,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":296,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":296,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":297,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":297,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":297,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":297,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":298,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":298,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":298,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":298,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":300,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":304,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":305,"column":56,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":305,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":306,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":306,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .advanceTimersByTimeAsync on an `error` typed value.","line":306,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":306,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":309,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":309,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":309,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":309,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":309,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":309,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":309,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":309,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":312,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":312,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":313,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":313,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .useFakeTimers on an `error` typed value.","line":313,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":313,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":317,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":317,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":317,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":317,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":318,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":318,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":318,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":318,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":319,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":319,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":319,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":319,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":320,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":320,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceHistory on an `error` typed value.","line":320,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":320,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":321,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":321,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":321,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":321,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":325,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":329,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":330,"column":56,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":330,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":331,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":331,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .advanceTimersByTimeAsync on an `error` typed value.","line":331,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":331,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":334,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":334,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":334,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":334,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":334,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":334,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":335,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":335,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":335,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":335,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":335,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":335,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledTimes on an `error` typed value.","line":335,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":335,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":338,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":338,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":339,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":339,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":339,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":339,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":341,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":347,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":341,"column":13,"nodeType":"Identifier","messageId":"unsafeCall","endLine":341,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":342,"column":42,"nodeType":"TSAsExpression","messageId":"unsafeArgument","endLine":346,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rejects on an `error` typed value.","line":347,"column":9,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":347,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":350,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":350,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":351,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":351,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .useFakeTimers on an `error` typed value.","line":351,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":351,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":355,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":355,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `error` typed value.","line":355,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":355,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":356,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":356,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":356,"column":14,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":356,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":360,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":364,"endColumn":15},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":365,"column":50,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":365,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":366,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":366,"endColumn":78},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":366,"column":25,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":366,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":366,"column":25,"nodeType":"Identifier","messageId":"unsafeCall","endLine":366,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rejects on an `error` typed value.","line":366,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":366,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":367,"column":13,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":367,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .advanceTimersByTimeAsync on an `error` typed value.","line":367,"column":18,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":367,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":369,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":369,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":369,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":369,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .payment on an `error` typed value.","line":369,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":369,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveBeenCalledWith on an `error` typed value.","line":369,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":369,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":370,"column":9,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":370,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":370,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":370,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":371,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":371,"endColumn":74},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":371,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":371,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .objectContaining on an `error` typed value.","line":371,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":371,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":374,"column":7,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":374,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":374,"column":7,"nodeType":"Identifier","messageId":"unsafeCall","endLine":374,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .sendPaymentReceivedEmail on an `error` typed value.","line":374,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":374,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .not on an `error` typed value.","line":374,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":374,"endColumn":49}],"suppressedMessages":[],"errorCount":290,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Test, TestingModule } from '@nestjs/testing';\nimport { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { EmailService } from '../email/email.service';\nimport { PaymentStatus, InvoiceStatus } from '@prisma/client';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n// Helpers\nconst makeInvoice = (overrides: Partial<any> = {}) => ({\n  id: 'inv_1',\n  userId: 'user_1',\n  totalAmount: 100,\n  payments: [],\n  client: { name: 'Client A', email: 'client@example.com' },\n  user: {\n    emailNotificationsEnabled: true,\n    emailNotifyPaymentReceived: true,\n  },\n  ...overrides,\n});\n\nconst makePayment = (overrides: Partial<any> = {}) => ({\n  id: 'pay_1',\n  invoiceId: 'inv_1',\n  amount: 100,\n  status: PaymentStatus.COMPLETED,\n  paymentDate: new Date(),\n  paymentNumber: 'PMT-1',\n  netAmount: 100,\n  ...overrides,\n});\n\ndescribe('PaymentsService', () => {\n  let service: PaymentsService;\n  let prisma: jest.Mocked<any>;\n  let email: jest.Mocked<EmailService>;\n  const realRandom = Math.random;\n\n  beforeEach(async () => {\n    prisma = {\n      invoice: {\n        findFirst: jest.fn(),\n        update: jest.fn(),\n      },\n      payment: {\n        create: jest.fn(),\n        update: jest.fn(),\n      },\n      invoiceHistory: {\n        create: jest.fn(),\n      },\n    } as any;\n\n    email = {\n      sendPaymentReceivedEmail: jest.fn(),\n      // PaymentsService also calls this when emailNotificationsEnabled is true\n      sendClientPaymentReceiptEmail: jest.fn(),\n    } as any;\n\n    const moduleRef: TestingModule = await Test.createTestingModule({\n      providers: [\n        PaymentsService,\n        { provide: PrismaService, useValue: prisma },\n        { provide: EmailService, useValue: email },\n        // Minimal notifications mock to satisfy DI\n        { provide: NotificationsService, useValue: { emit: jest.fn() } },\n      ],\n    }).compile();\n\n    service = moduleRef.get<PaymentsService>(PaymentsService);\n  });\n\n  afterEach(() => {\n    jest.resetAllMocks();\n    Math.random = realRandom;\n    jest.useRealTimers();\n  });\n\n  describe('create', () => {\n    it('creates full payment, updates invoice to PAID, logs history, and sends email when prefs enabled', async () => {\n      const invoice = makeInvoice();\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n      email.sendPaymentReceivedEmail.mockResolvedValue(undefined);\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n        notes: 'note',\n      } as any;\n      const payment = await service.create('user_1', dto);\n\n      expect(payment).toBeDefined();\n      expect(prisma.payment.create).toHaveBeenCalledWith(\n        expect.objectContaining({\n          data: expect.objectContaining({ status: PaymentStatus.COMPLETED }),\n        }),\n      );\n      expect(prisma.invoice.update).toHaveBeenCalledWith({\n        where: { id: 'inv_1' },\n        data: expect.objectContaining({\n          status: InvoiceStatus.PAID,\n          paidAt: expect.any(Date),\n        }),\n      });\n      expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n        data: expect.objectContaining({\n          action: expect.any(String),\n          description: 'Invoice fully paid',\n        }),\n      });\n      expect(email.sendPaymentReceivedEmail).toHaveBeenCalledTimes(1);\n    });\n\n    it('creates partial payment, updates invoice to PARTIALLY_PAID, logs history, and does not send email if emailNotificationsEnabled is false', async () => {\n      const invoice = makeInvoice({\n        user: {\n          emailNotificationsEnabled: false,\n          emailNotifyPaymentReceived: true,\n        },\n      });\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(\n        makePayment({ amount: 50, netAmount: 50 }),\n      );\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 50,\n        paymentMethod: 'CASH',\n      } as any;\n      const payment = await service.create('user_1', dto);\n\n      expect(payment).toBeDefined();\n      expect(prisma.invoice.update).toHaveBeenCalledWith({\n        where: { id: 'inv_1' },\n        data: expect.objectContaining({ status: InvoiceStatus.PARTIALLY_PAID }),\n      });\n      expect(prisma.invoiceHistory.create).toHaveBeenCalledWith({\n        data: expect.objectContaining({\n          description: expect.stringContaining('Partial payment of 50'),\n        }),\n      });\n      expect(email.sendPaymentReceivedEmail).not.toHaveBeenCalled();\n    });\n\n    it('does not send email if emailNotifyPaymentReceived is false', async () => {\n      const invoice = makeInvoice({\n        user: {\n          emailNotificationsEnabled: true,\n          emailNotifyPaymentReceived: false,\n        },\n      });\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      await service.create('user_1', dto);\n\n      expect(email.sendPaymentReceivedEmail).not.toHaveBeenCalled();\n    });\n\n    it('handles email sending failure gracefully', async () => {\n      const invoice = makeInvoice();\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n      email.sendPaymentReceivedEmail.mockRejectedValue(\n        new Error('SMTP failure'),\n      );\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      const payment = await service.create('user_1', dto);\n\n      expect(payment).toBeDefined();\n      expect(email.sendPaymentReceivedEmail).toHaveBeenCalledTimes(1);\n      // No throw despite email failure\n    });\n\n    it('throws NotFoundException when invoice not found', async () => {\n      prisma.invoice.findFirst.mockResolvedValue(null);\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n\n      await expect(service.create('user_1', dto)).rejects.toBeInstanceOf(\n        NotFoundException,\n      );\n    });\n\n    it('throws BadRequestException when overpaying', async () => {\n      const invoice = makeInvoice({\n        totalAmount: 100,\n        payments: [{ amount: 80, status: PaymentStatus.COMPLETED }],\n      });\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 30,\n        paymentMethod: 'CASH',\n      } as any; // exceeds 20 remaining\n\n      await expect(service.create('user_1', dto)).rejects.toBeInstanceOf(\n        BadRequestException,\n      );\n    });\n  });\n\n  describe('processPayment', () => {\n    it('processes payment successfully and sends email when prefs enabled', async () => {\n      jest.useFakeTimers();\n      Math.random = () => 0.9; // success\n\n      const invoice = makeInvoice();\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n      email.sendPaymentReceivedEmail.mockResolvedValue(undefined);\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      const promise = service.processPayment('user_1', dto);\n      await jest.advanceTimersByTimeAsync(1000);\n      const res = await promise;\n\n      expect(res).toHaveProperty('message', 'Payment processed successfully');\n      expect(prisma.payment.create).toHaveBeenCalledWith(\n        expect.objectContaining({\n          data: expect.objectContaining({ status: PaymentStatus.COMPLETED }),\n        }),\n      );\n      expect(email.sendPaymentReceivedEmail).toHaveBeenCalledTimes(1);\n    });\n\n    it('processes payment successfully but does not send email when prefs disabled', async () => {\n      jest.useFakeTimers();\n      Math.random = () => 0.9; // success\n\n      const invoice = makeInvoice({\n        user: {\n          emailNotificationsEnabled: false,\n          emailNotifyPaymentReceived: true,\n        },\n      });\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      const promise = service.processPayment('user_1', dto);\n      await jest.advanceTimersByTimeAsync(1000);\n      await promise;\n\n      expect(email.sendPaymentReceivedEmail).not.toHaveBeenCalled();\n    });\n\n    it('processes payment successfully but does not send email when emailNotifyPaymentReceived is false', async () => {\n      jest.useFakeTimers();\n      Math.random = () => 0.9; // success\n\n      const invoice = makeInvoice({\n        user: {\n          emailNotificationsEnabled: true,\n          emailNotifyPaymentReceived: false,\n        },\n      });\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      const promise = service.processPayment('user_1', dto);\n      await jest.advanceTimersByTimeAsync(1000);\n      await promise;\n\n      expect(email.sendPaymentReceivedEmail).not.toHaveBeenCalled();\n    });\n\n    it('handles email sending failure gracefully on success path', async () => {\n      jest.useFakeTimers();\n      Math.random = () => 0.9; // success\n\n      const invoice = makeInvoice();\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValue(makePayment());\n      prisma.invoice.update.mockResolvedValue({});\n      prisma.invoiceHistory.create.mockResolvedValue({});\n      email.sendPaymentReceivedEmail.mockRejectedValue(\n        new Error('SMTP failure'),\n      );\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      const promise = service.processPayment('user_1', dto);\n      await jest.advanceTimersByTimeAsync(1000);\n      const res = await promise;\n\n      expect(res).toHaveProperty('message', 'Payment processed successfully');\n      expect(email.sendPaymentReceivedEmail).toHaveBeenCalledTimes(1);\n    });\n\n    it('throws NotFoundException when invoice not found', async () => {\n      prisma.invoice.findFirst.mockResolvedValue(null);\n\n      await expect(\n        service.processPayment('user_1', {\n          invoiceId: 'missing',\n          amount: 10,\n          paymentMethod: 'CASH',\n        } as any),\n      ).rejects.toBeInstanceOf(NotFoundException);\n    });\n\n    it('creates failed payment and throws BadRequestException when processing fails', async () => {\n      jest.useFakeTimers();\n      Math.random = () => 0.05; // failure\n\n      const invoice = makeInvoice();\n      prisma.invoice.findFirst.mockResolvedValue(invoice);\n      prisma.payment.create.mockResolvedValueOnce(\n        makePayment({ status: PaymentStatus.FAILED, netAmount: 0 }),\n      );\n\n      const dto = {\n        invoiceId: 'inv_1',\n        amount: 100,\n        paymentMethod: 'CASH',\n      } as any;\n      const p = service.processPayment('user_1', dto);\n      const assertion = expect(p).rejects.toBeInstanceOf(BadRequestException);\n      await jest.advanceTimersByTimeAsync(1000);\n      await assertion;\n      expect(prisma.payment.create).toHaveBeenCalledWith(\n        expect.objectContaining({\n          data: expect.objectContaining({ status: PaymentStatus.FAILED }),\n        }),\n      );\n      expect(email.sendPaymentReceivedEmail).not.toHaveBeenCalled();\n    });\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\payments.service.ts","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":158,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":158,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4642,4642],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'failedPayment' is assigned a value but never used.","line":192,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":192,"endColumn":26},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":327,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":327,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9688,9688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceId on an `any` value.","line":351,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":351,"endColumn":22},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .status on an `any` value.","line":355,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":355,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":359,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":359,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paymentMethod on an `any` value.","line":359,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":359,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paymentDate on an `any` value.","line":363,"column":13,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":363,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paymentDate on an `any` value.","line":367,"column":15,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":367,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .paymentDate on an `any` value.","line":372,"column":15,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":372,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .OR on an `any` value.","line":379,"column":15,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":379,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoice on an `any` value.","line":392,"column":11,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":392,"endColumn":18},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":409,"column":37,"nodeType":"Property","messageId":"anyAssignment","endLine":409,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":411,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":411,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":422,"column":43,"nodeType":"Property","messageId":"anyAssignment","endLine":422,"endColumn":48},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'updatedInvoice' is assigned a value but never used.","line":500,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":500,"endColumn":25},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":527,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":527,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14915,14915],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { CreatePaymentDto, ProcessPaymentDto } from './dto/create-payment.dto';\nimport {\n  PaymentStatus,\n  InvoiceStatus,\n  HistoryAction,\n} from '../../common/enums';\nimport { EmailService } from '../email/email.service';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@Injectable()\nexport class PaymentsService {\n  constructor(\n    private prisma: PrismaService,\n    private emailService: EmailService,\n    private notifications: NotificationsService,\n  ) {}\n\n  async create(userId: string, createPaymentDto: CreatePaymentDto) {\n    // Verify invoice exists and belongs to user\n    const invoice = await this.prisma.invoice.findFirst({\n      where: {\n        id: createPaymentDto.invoiceId,\n        userId,\n      },\n      include: {\n        payments: true,\n        client: true,\n        user: true,\n      },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Calculate total paid amount\n    const totalPaid = invoice.payments.reduce(\n      (sum, payment) =>\n        sum + (payment.status === PaymentStatus.COMPLETED ? payment.amount : 0),\n      0,\n    );\n\n    const remainingAmount = invoice.totalAmount - totalPaid;\n\n    if (createPaymentDto.amount > remainingAmount) {\n      throw new BadRequestException('Payment amount exceeds invoice balance');\n    }\n\n    // Create payment\n    const payment = await this.prisma.payment.create({\n      data: {\n        ...createPaymentDto,\n        status: PaymentStatus.COMPLETED,\n        paymentDate: createPaymentDto.paymentDate || new Date(),\n        paymentNumber: `PMT-${Date.now()}`,\n        netAmount: createPaymentDto.amount,\n      },\n    });\n\n    // Update invoice status if fully paid\n    const newTotalPaid = totalPaid + createPaymentDto.amount;\n    if (newTotalPaid >= invoice.totalAmount) {\n      await this.prisma.invoice.update({\n        where: { id: createPaymentDto.invoiceId },\n        data: {\n          status: InvoiceStatus.PAID,\n          paidAmount: newTotalPaid,\n          balanceDue: 0,\n          paidAt: new Date(),\n        },\n      });\n\n      // Create history entry\n      await this.prisma.invoiceHistory.create({\n        data: {\n          invoiceId: createPaymentDto.invoiceId,\n          action: HistoryAction.PAYMENT_RECEIVED,\n          description: `Invoice fully paid`,\n          performedBy: userId,\n        },\n      });\n    } else {\n      await this.prisma.invoice.update({\n        where: { id: createPaymentDto.invoiceId },\n        data: {\n          status: InvoiceStatus.PARTIALLY_PAID,\n          paidAmount: newTotalPaid,\n          balanceDue: invoice.totalAmount - newTotalPaid,\n        },\n      });\n\n      // Create history entry\n      await this.prisma.invoiceHistory.create({\n        data: {\n          invoiceId: createPaymentDto.invoiceId,\n          action: HistoryAction.PAYMENT_RECEIVED,\n          description: `Partial payment of ${createPaymentDto.amount} received`,\n          performedBy: userId,\n        },\n      });\n    }\n\n    // Send payment received email to the user if preferences allow\n    if (\n      invoice.user?.emailNotificationsEnabled &&\n      invoice.user?.emailNotifyPaymentReceived\n    ) {\n      try {\n        await this.emailService.sendPaymentReceivedEmail(\n          invoice.user as any,\n          invoice.client as any,\n          invoice as any,\n          createPaymentDto.amount,\n        );\n      } catch (err) {\n        console.error('Failed to send payment received email (create):', err);\n      }\n    }\n\n    // Send receipt email to the client (respect global emailNotificationsEnabled)\n    if (invoice.user?.emailNotificationsEnabled) {\n      try {\n        const updatedPaidAmount = newTotalPaid;\n        const updatedBalance = Math.max(\n          0,\n          (invoice.totalAmount || 0) - updatedPaidAmount,\n        );\n        await this.emailService.sendClientPaymentReceiptEmail(\n          invoice.client as any,\n          {\n            ...invoice,\n            paidAmount: updatedPaidAmount,\n            balanceDue: updatedBalance,\n          } as any,\n          createPaymentDto.amount,\n          invoice.user as any,\n        );\n      } catch (err) {\n        console.error(\n          'Failed to send client payment receipt email (create):',\n          err,\n        );\n      }\n    }\n\n    try {\n      this.notifications.emit(userId, 'payment.recorded', {\n        invoiceId: createPaymentDto.invoiceId,\n        amount: createPaymentDto.amount,\n        paymentId: payment.id,\n      });\n    } catch {}\n    return payment;\n  }\n\n  async processPayment(userId: string, processPaymentDto: ProcessPaymentDto) {\n    // Verify invoice exists and belongs to user\n    const invoice = await this.prisma.invoice.findFirst({\n      where: {\n        id: processPaymentDto.invoiceId,\n        userId,\n      },\n      include: {\n        payments: true,\n        client: true,\n        user: true,\n      },\n    });\n\n    if (!invoice) {\n      throw new NotFoundException('Invoice not found');\n    }\n\n    // Mock payment processing\n    // In a real application, this would integrate with payment gateways\n    const transactionId = `TXN-${Date.now()}-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\n\n    // Simulate payment processing delay\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    // Mock success/failure (90% success rate for demo)\n    const isSuccess = Math.random() > 0.1;\n\n    if (!isSuccess) {\n      // Create failed payment record\n      const failedPayment = await this.prisma.payment.create({\n        data: {\n          invoiceId: processPaymentDto.invoiceId,\n          amount: processPaymentDto.amount,\n          paymentMethod: processPaymentDto.paymentMethod,\n          paymentDate: new Date(),\n          transactionId,\n          status: PaymentStatus.FAILED,\n          notes: 'Payment processing failed',\n          paymentNumber: `PMT-${Date.now()}`,\n          netAmount: 0,\n        },\n      });\n\n      throw new BadRequestException(\n        'Payment processing failed. Please try again.',\n      );\n    }\n\n    // Create successful payment\n    const payment = await this.prisma.payment.create({\n      data: {\n        invoiceId: processPaymentDto.invoiceId,\n        amount: processPaymentDto.amount,\n        paymentMethod: processPaymentDto.paymentMethod,\n        paymentDate: new Date(),\n        transactionId,\n        status: PaymentStatus.COMPLETED,\n        notes: processPaymentDto.notes,\n        paymentNumber: `PMT-${Date.now()}`,\n        netAmount: processPaymentDto.amount,\n      },\n    });\n\n    // Calculate total paid amount\n    const totalPaid =\n      invoice.payments.reduce(\n        (sum, p) => sum + (p.status === PaymentStatus.COMPLETED ? p.amount : 0),\n        0,\n      ) + processPaymentDto.amount;\n\n    // Update invoice status\n    if (totalPaid >= invoice.totalAmount) {\n      await this.prisma.invoice.update({\n        where: { id: processPaymentDto.invoiceId },\n        data: {\n          status: InvoiceStatus.PAID,\n          paidAmount: totalPaid,\n          balanceDue: 0,\n          paidAt: new Date(),\n        },\n      });\n\n      // Create history entry\n      await this.prisma.invoiceHistory.create({\n        data: {\n          invoiceId: processPaymentDto.invoiceId,\n          action: HistoryAction.PAYMENT_RECEIVED,\n          description: `Invoice paid via ${processPaymentDto.paymentMethod}`,\n          performedBy: userId,\n        },\n      });\n    } else {\n      await this.prisma.invoice.update({\n        where: { id: processPaymentDto.invoiceId },\n        data: {\n          status: InvoiceStatus.PARTIALLY_PAID,\n          paidAmount: totalPaid,\n          balanceDue: invoice.totalAmount - totalPaid,\n        },\n      });\n\n      // Create history entry\n      await this.prisma.invoiceHistory.create({\n        data: {\n          invoiceId: processPaymentDto.invoiceId,\n          action: HistoryAction.PAYMENT_RECEIVED,\n          description: `Partial payment of ${processPaymentDto.amount} via ${processPaymentDto.paymentMethod}`,\n          performedBy: userId,\n        },\n      });\n    }\n\n    // Send payment received email to the user if preferences allow\n    if (\n      invoice.user?.emailNotificationsEnabled &&\n      invoice.user?.emailNotifyPaymentReceived\n    ) {\n      try {\n        await this.emailService.sendPaymentReceivedEmail(\n          invoice.user as any,\n          invoice.client as any,\n          invoice as any,\n          processPaymentDto.amount,\n        );\n      } catch (err) {\n        console.error(\n          'Failed to send payment received email (processPayment):',\n          err,\n        );\n      }\n    }\n\n    // Send receipt email to the client (respect global emailNotificationsEnabled)\n    if (invoice.user?.emailNotificationsEnabled) {\n      try {\n        const updatedBalance = Math.max(\n          0,\n          (invoice.totalAmount || 0) - totalPaid,\n        );\n        await this.emailService.sendClientPaymentReceiptEmail(\n          invoice.client as any,\n          {\n            ...invoice,\n            paidAmount: totalPaid,\n            balanceDue: updatedBalance,\n          } as any,\n          processPaymentDto.amount,\n          invoice.user as any,\n        );\n      } catch (err) {\n        console.error(\n          'Failed to send client payment receipt email (processPayment):',\n          err,\n        );\n      }\n    }\n\n    try {\n      this.notifications.emit(userId, 'payment.processed', {\n        invoiceId: processPaymentDto.invoiceId,\n        amount: processPaymentDto.amount,\n        paymentId: payment.id,\n        transactionId,\n      });\n    } catch {}\n    return {\n      payment,\n      message: 'Payment processed successfully',\n      transactionId,\n    };\n  }\n\n  async findAll(\n    userId: string,\n    query?: {\n      invoiceId?: string;\n      status?: PaymentStatus;\n      method?: any;\n      dateFrom?: string;\n      dateTo?: string;\n      search?: string;\n      page?: number;\n      limit?: number;\n    },\n  ) {\n    const where: any = {};\n\n    if (query?.invoiceId) {\n      where.invoiceId = query.invoiceId;\n    }\n\n    if (query?.status) {\n      where.status = query.status;\n    }\n\n    if (query?.method) {\n      where.paymentMethod = query.method;\n    }\n\n    if (query?.dateFrom || query?.dateTo) {\n      where.paymentDate = {};\n      if (query.dateFrom) {\n        const from = new Date(query.dateFrom);\n        from.setHours(0, 0, 0, 0);\n        where.paymentDate.gte = from;\n      }\n      if (query.dateTo) {\n        const to = new Date(query.dateTo);\n        to.setHours(23, 59, 59, 999);\n        where.paymentDate.lte = to;\n      }\n    }\n\n    if (query?.search) {\n      const s = String(query.search).trim();\n      if (s.length > 0) {\n        where.OR = [\n          { transactionId: { contains: s, mode: 'insensitive' } },\n          { paymentNumber: { contains: s, mode: 'insensitive' } },\n          { notes: { contains: s, mode: 'insensitive' } },\n          { invoice: { invoiceNumber: { contains: s, mode: 'insensitive' } } },\n          {\n            invoice: { client: { name: { contains: s, mode: 'insensitive' } } },\n          },\n        ];\n      }\n    }\n\n    // Verify user owns the invoices\n    where.invoice = { userId };\n\n    const include = {\n      invoice: {\n        include: {\n          client: true,\n        },\n      },\n    } as const;\n\n    const orderBy = { paymentDate: 'desc' } as const;\n\n    if (query?.page && query?.limit) {\n      const page = Math.max(1, Number(query.page) || 1);\n      const limit = Math.max(1, Math.min(100, Number(query.limit) || 10));\n      const skip = (page - 1) * limit;\n      const [total, items] = await Promise.all([\n        this.prisma.payment.count({ where }),\n        this.prisma.payment.findMany({\n          where,\n          include,\n          orderBy,\n          skip,\n          take: limit,\n        }),\n      ]);\n      const totalPages = Math.max(1, Math.ceil(total / limit));\n      return { items, total, totalPages, page, limit };\n    }\n\n    return this.prisma.payment.findMany({ where, include, orderBy });\n  }\n\n  async findOne(id: string, userId: string) {\n    const payment = await this.prisma.payment.findUnique({\n      where: { id },\n      include: {\n        invoice: {\n          include: {\n            client: true,\n          },\n        },\n      },\n    });\n\n    if (!payment) {\n      throw new NotFoundException('Payment not found');\n    }\n\n    // Verify user owns the invoice\n    if (payment.invoice.userId !== userId) {\n      throw new NotFoundException('Payment not found');\n    }\n\n    return payment;\n  }\n\n  async refund(id: string, userId: string, amount?: number) {\n    const payment = await this.prisma.payment.findUnique({\n      where: { id },\n      include: {\n        invoice: true,\n      },\n    });\n\n    if (!payment) {\n      throw new NotFoundException('Payment not found');\n    }\n\n    // Verify user owns the invoice\n    if (payment.invoice.userId !== userId) {\n      throw new NotFoundException('Payment not found');\n    }\n\n    if (payment.status !== PaymentStatus.COMPLETED) {\n      throw new BadRequestException('Can only refund completed payments');\n    }\n\n    const refundAmount = amount || payment.amount;\n\n    if (refundAmount > payment.amount) {\n      throw new BadRequestException('Refund amount exceeds payment amount');\n    }\n\n    // Create refund payment record\n    const refund = await this.prisma.payment.create({\n      data: {\n        invoiceId: payment.invoiceId,\n        amount: -refundAmount,\n        paymentMethod: payment.paymentMethod,\n        paymentDate: new Date(),\n        transactionId: `REFUND-${payment.transactionId}`,\n        status: PaymentStatus.REFUNDED,\n        notes: `Refund for payment ${payment.transactionId}`,\n        paymentNumber: `PMT-${Date.now()}`,\n        netAmount: -refundAmount,\n      },\n    });\n\n    // Update original payment status if fully refunded\n    if (refundAmount === payment.amount) {\n      await this.prisma.payment.update({\n        where: { id },\n        data: { status: PaymentStatus.REFUNDED },\n      });\n    }\n\n    // Update invoice paid amount\n    const updatedInvoice = await this.prisma.invoice.update({\n      where: { id: payment.invoiceId },\n      data: {\n        paidAmount: {\n          decrement: refundAmount,\n        },\n        status: InvoiceStatus.SENT, // Reset to SENT status after refund\n        balanceDue: { increment: refundAmount },\n      },\n    });\n\n    // Create history entry\n    await this.prisma.invoiceHistory.create({\n      data: {\n        invoiceId: payment.invoiceId,\n        action: HistoryAction.STATUS_CHANGED,\n        description: `Payment refunded: ${refundAmount}`,\n        performedBy: userId,\n      },\n    });\n\n    try {\n      this.notifications.emit(userId, 'payment.refunded', {\n        paymentId: id,\n        invoiceId: payment.invoiceId,\n        amount: refundAmount,\n      });\n    } catch {}\n    return {\n      refund,\n      message: 'Payment refunded successfully',\n    };\n  }\n\n  async getPaymentStatistics(userId: string) {\n    const currentMonth = new Date();\n    currentMonth.setDate(1);\n    currentMonth.setHours(0, 0, 0, 0);\n\n    const lastMonth = new Date(currentMonth);\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\n\n    const [totalReceived, monthlyReceived, pendingPayments, failedPayments] =\n      await Promise.all([\n        // Total received\n        this.prisma.payment.aggregate({\n          where: {\n            invoice: { userId },\n            status: PaymentStatus.COMPLETED,\n            amount: { gt: 0 },\n          },\n          _sum: { amount: true },\n        }),\n        // This month received\n        this.prisma.payment.aggregate({\n          where: {\n            invoice: { userId },\n            status: PaymentStatus.COMPLETED,\n            amount: { gt: 0 },\n            paymentDate: { gte: currentMonth },\n          },\n          _sum: { amount: true },\n        }),\n        // Pending payments count\n        this.prisma.payment.count({\n          where: {\n            invoice: { userId },\n            status: PaymentStatus.PENDING,\n          },\n        }),\n        // Failed payments count\n        this.prisma.payment.count({\n          where: {\n            invoice: { userId },\n            status: PaymentStatus.FAILED,\n          },\n        }),\n      ]);\n\n    return {\n      totalReceived: totalReceived._sum.amount || 0,\n      monthlyReceived: monthlyReceived._sum.amount || 0,\n      pendingPayments,\n      failedPayments,\n    };\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\public-payments.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":42,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":49,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `CreatePaymentDto`.","line":50,"column":56,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":50,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":77,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":86,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `ProcessPaymentDto`.","line":87,"column":64,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":87,"endColumn":71}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Body, Controller, Param, Post } from '@nestjs/common';\nimport { PaymentsService } from './payments.service';\nimport { InvoicesService } from '../invoices/invoices.service';\nimport { StripeService } from './stripe.service';\n\n// Public endpoints to allow payments by shareId (no auth)\n// Routes:\n// POST /public/invoices/:shareId/payments/record\n// POST /public/invoices/:shareId/payments/process\n\n@Controller('public/invoices')\nexport class PublicPaymentsController {\n  constructor(\n    private readonly paymentsService: PaymentsService,\n    private readonly invoicesService: InvoicesService,\n    private readonly stripeService: StripeService,\n  ) {}\n\n  @Post(':shareId/payments/record')\n  async recordPublic(\n    @Param('shareId') shareId: string,\n    @Body()\n    body: {\n      amount: number;\n      paymentMethod:\n        | 'CASH'\n        | 'BANK_TRANSFER'\n        | 'CREDIT_CARD'\n        | 'DEBIT_CARD'\n        | 'PAYPAL'\n        | 'STRIPE'\n        | 'CHECK'\n        | 'OTHER';\n      paymentDate?: string | Date;\n      transactionId?: string;\n      notes?: string;\n    },\n  ) {\n    // Resolve invoice by shareId, then delegate to service with userId + invoiceId\n    const invoice =\n      await this.invoicesService.getPublicInvoiceByShareId(shareId);\n    const payload = {\n      invoiceId: invoice.id,\n      amount: Number(body.amount),\n      paymentMethod: body.paymentMethod,\n      paymentDate: body.paymentDate ? new Date(body.paymentDate) : undefined,\n      transactionId: body.transactionId,\n      notes: body.notes,\n    } as any;\n    return this.paymentsService.create(invoice.userId, payload);\n  }\n\n  @Post(':shareId/payments/process')\n  async processPublic(\n    @Param('shareId') shareId: string,\n    @Body()\n    body: {\n      amount: number;\n      paymentMethod:\n        | 'CREDIT_CARD'\n        | 'BANK_TRANSFER'\n        | 'PAYPAL'\n        | 'STRIPE'\n        | 'CASH'\n        | 'DEBIT_CARD'\n        | 'CHECK'\n        | 'OTHER';\n      cardNumber?: string;\n      cardExpiry?: string;\n      cardCvv?: string;\n      bankAccount?: string;\n      notes?: string;\n    },\n  ) {\n    const invoice =\n      await this.invoicesService.getPublicInvoiceByShareId(shareId);\n    const payload = {\n      invoiceId: invoice.id,\n      amount: Number(body.amount),\n      paymentMethod: body.paymentMethod,\n      cardNumber: body.cardNumber,\n      cardExpiry: body.cardExpiry,\n      cardCvv: body.cardCvv,\n      bankAccount: body.bankAccount,\n      notes: body.notes,\n    } as any;\n    return this.paymentsService.processPayment(invoice.userId, payload);\n  }\n\n  // Stripe Checkout (public) — returns a URL to redirect the client for card payment\n  @Post(':shareId/payments/stripe/checkout')\n  async createStripeCheckout(@Param('shareId') shareId: string) {\n    return this.stripeService.createInvoiceCheckoutByShareId(shareId);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\stripe.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":28,"column":58,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":28,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":28,"column":63,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":28,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":34,"column":51,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":34,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":34,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":34,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":41,"column":52,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":41,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":41,"column":57,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":41,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":47,"column":41,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":47,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":47,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":47,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rawBody on an `any` value.","line":57,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":57,"endColumn":37}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Body,\n  Controller,\n  Get,\n  Headers,\n  Post,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport type { Request } from 'express';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { EmailVerifiedGuard } from '../auth/guards/email-verified.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport { StripeService } from './stripe.service';\n\n@Controller()\nexport class StripeController {\n  constructor(private readonly stripe: StripeService) {}\n\n  // Admin SaaS subscription checkout (for current authenticated user)\n  @Post('payments/stripe/subscription/checkout')\n  @UseGuards(JwtAuthGuard, EmailVerifiedGuard)\n  createSubscriptionCheckout(\n    @CurrentUser() user: any,\n    @Body() body: { plan?: 'BASIC' | 'PREMIUM' },\n  ) {\n    const plan = body?.plan === 'BASIC' ? 'BASIC' : 'PREMIUM';\n    return this.stripe.createSubscriptionCheckoutSession(user.id, plan);\n  }\n\n  @Post('payments/stripe/subscription/portal')\n  @UseGuards(JwtAuthGuard, EmailVerifiedGuard)\n  createPortal(@CurrentUser() user: any) {\n    return this.stripe.createBillingPortalSession(user.id);\n  }\n\n  // User payments: Stripe Connect onboarding/status\n  @Post('payments/stripe/connect/onboarding')\n  @UseGuards(JwtAuthGuard, EmailVerifiedGuard)\n  createConnectOnboarding(@CurrentUser() user: any) {\n    return this.stripe.createConnectOnboardingLink(user.id);\n  }\n\n  @Get('payments/stripe/connect/status')\n  @UseGuards(JwtAuthGuard, EmailVerifiedGuard)\n  getConnectStatus(@CurrentUser() user: any) {\n    return this.stripe.getConnectStatus(user.id);\n  }\n\n  // Webhook endpoint (no auth)\n  @Post('webhooks/stripe')\n  async webhook(\n    @Req() req: Request,\n    @Headers('stripe-signature') signature?: string,\n  ) {\n    // req['rawBody'] is available because app.enable rawBody in NestFactory.create({ rawBody: true })\n    const raw = (req as any).rawBody as Buffer;\n    return this.stripe.handleWebhook(raw, signature);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\payments\\stripe.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Plan' is defined but never used.","line":8,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":14},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":35,"column":29,"nodeType":"Property","messageId":"anyAssignment","endLine":35,"endColumn":67},{"ruleId":"@typescript-eslint/require-await","severity":2,"message":"Async method 'getFrontendUrl' has no 'await' expression.","line":54,"column":3,"nodeType":"FunctionExpression","messageId":"missingAwait","endLine":54,"endColumn":31,"suggestions":[{"messageId":"removeAsync","fix":{"range":[1644,1683],"text":"getFrontendUrl(): string"},"desc":"Remove 'async'."}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeCustomerId on an `any` value.","line":66,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":66,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":66,"column":41,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":66,"endColumn":79},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeCustomerId on an `any` value.","line":66,"column":62,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":66,"endColumn":78},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":73,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":73,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":74,"column":11,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":74,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":74,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":74,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeConnectAccountId on an `any` value.","line":121,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":121,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":122,"column":7,"nodeType":"ReturnStatement","messageId":"unsafeReturn","endLine":122,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeConnectAccountId on an `any` value.","line":122,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":122,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":130,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":130,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":131,"column":11,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":131,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":131,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":131,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":140,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":140,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":143,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":143,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeConnectAccountId on an `any` value.","line":155,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":155,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `AccountRetrieveParams | undefined`.","line":157,"column":7,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":157,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeConnectAccountId on an `any` value.","line":157,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":157,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":159,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":159,"endColumn":71},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .details_submitted on an `any` value.","line":159,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":159,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":160,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":160,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .charges_enabled on an `any` value.","line":160,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":160,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeConnectAccountId on an `any` value.","line":162,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":162,"endColumn":56},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":163,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":163,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":164,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":164,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":194,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":194,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .stripeConnectAccountId on an `any` value.","line":194,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":194,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `AccountRetrieveParams | undefined`.","line":202,"column":51,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":202,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":203,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":203,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .charges_enabled on an `any` value.","line":203,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":203,"endColumn":60},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":244,"column":26,"nodeType":"Property","messageId":"anyAssignment","endLine":244,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":263,"column":37,"nodeType":"Property","messageId":"anyAssignment","endLine":263,"endColumn":75},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":270,"column":56,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":270,"endColumn":63},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":277,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":277,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .type on an `any` value.","line":277,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":277,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":303,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":303,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .invoiceId on an `any` value.","line":303,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":303,"endColumn":59},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":304,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":304,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .userId on an `any` value.","line":304,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":304,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":307,"column":16,"nodeType":"Property","messageId":"anyAssignment","endLine":307,"endColumn":29},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":320,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":320,"endColumn":39},{"ruleId":"@typescript-eslint/no-base-to-string","severity":2,"message":"'session.payment_intent || session.id' may use Object's default stringification format ('[object Object]') when stringified.","line":322,"column":31,"nodeType":"LogicalExpression","messageId":"baseToString","endLine":322,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":323,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":323,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":340,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":340,"endColumn":72},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":350,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":350,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":352,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":352,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":388,"column":12,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":388,"endColumn":19},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":396,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":396,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .userId on an `any` value.","line":396,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":396,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .plan on an `any` value.","line":397,"column":45,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":397,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":402,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":405,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":405,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":405,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":408,"column":55,"nodeType":"Identifier","messageId":"unsafeArgument","endLine":408,"endColumn":69},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":415,"column":16,"nodeType":"Property","messageId":"anyAssignment","endLine":415,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":417,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":417,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":425,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":425,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":426,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":428,"endColumn":7},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":426,"column":24,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":426,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":426,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":426,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":430,"column":11,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":430,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":430,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":430,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":431,"column":16,"nodeType":"Property","messageId":"anyAssignment","endLine":431,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":431,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":431,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":433,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":433,"endColumn":40}],"suppressedMessages":[],"errorCount":63,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  BadRequestException,\n  NotFoundException,\n} from '@nestjs/common';\nimport Stripe from 'stripe';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { Plan } from '../../common/enums';\nimport { EmailService } from '../email/email.service';\n\n// Utility to read a set of keys from SystemSettings\nasync function readSettings(prisma: PrismaService, keys: string[]) {\n  const rows = await prisma.systemSettings.findMany({\n    where: { key: { in: keys } },\n  });\n  const map = new Map(rows.map((r) => [r.key, r.value])) as Map<string, any>;\n  return map;\n}\n\n@Injectable()\nexport class StripeService {\n  constructor(\n    private prisma: PrismaService,\n    private emailService: EmailService,\n  ) {}\n\n  private async getStripe(): Promise<Stripe> {\n    const map = await readSettings(this.prisma, ['STRIPE_SECRET_KEY']);\n    const sk = String(map.get('STRIPE_SECRET_KEY') || '');\n    if (!sk || sk === '__SECRET__') {\n      throw new BadRequestException(\n        'Stripe is not configured (missing STRIPE_SECRET_KEY)',\n      );\n    }\n    return new Stripe(sk, { apiVersion: '2024-11-20.acacia' as any });\n  }\n\n  // --- Admin SaaS subscription billing ---\n  private async getPrices(): Promise<{ BASIC?: string; PREMIUM?: string }> {\n    const map = await readSettings(this.prisma, [\n      'STRIPE_PRICE_BASIC',\n      'STRIPE_PRICE_PREMIUM',\n    ]);\n    return {\n      BASIC: map.get('STRIPE_PRICE_BASIC')\n        ? String(map.get('STRIPE_PRICE_BASIC'))\n        : undefined,\n      PREMIUM: map.get('STRIPE_PRICE_PREMIUM')\n        ? String(map.get('STRIPE_PRICE_PREMIUM'))\n        : undefined,\n    };\n  }\n\n  private async getFrontendUrl(): Promise<string> {\n    // Prefer configured FRONTEND_ORIGINS first value, else default to localhost:3000\n    const origins = (process.env.FRONTEND_ORIGINS || '')\n      .split(',')\n      .map((s) => s.trim())\n      .filter(Boolean);\n    return origins[0] || 'http://localhost:3000';\n  }\n\n  private async ensureStripeCustomerId(userId: string): Promise<string> {\n    const user = await this.prisma.user.findUnique({ where: { id: userId } });\n    if (!user) throw new NotFoundException('User not found');\n    if ((user as any).stripeCustomerId) return (user as any).stripeCustomerId;\n    const stripe = await this.getStripe();\n    const customer = await stripe.customers.create({\n      email: user.email,\n      name:\n        `${user.firstName || ''} ${user.lastName || ''}`.trim() || undefined,\n    });\n    const prismaAny = this.prisma as any;\n    await prismaAny.user.update({\n      where: { id: userId },\n      data: { stripeCustomerId: customer.id },\n    });\n    return customer.id;\n  }\n\n  async createSubscriptionCheckoutSession(\n    userId: string,\n    plan: 'BASIC' | 'PREMIUM',\n  ) {\n    const stripe = await this.getStripe();\n    const prices = await this.getPrices();\n    const priceId = plan === 'BASIC' ? prices.BASIC : prices.PREMIUM;\n    if (!priceId)\n      throw new BadRequestException(\n        `Stripe price for ${plan} is not configured`,\n      );\n    const customer = await this.ensureStripeCustomerId(userId);\n    const origin = await this.getFrontendUrl();\n    const session = await stripe.checkout.sessions.create({\n      mode: 'subscription',\n      customer,\n      line_items: [{ price: priceId, quantity: 1 }],\n      success_url: `${origin}/settings?tab=billing&success=1`,\n      cancel_url: `${origin}/settings?tab=billing&canceled=1`,\n      metadata: { type: 'subscription', userId, plan },\n    });\n    return { url: session.url };\n  }\n\n  async createBillingPortalSession(userId: string) {\n    const stripe = await this.getStripe();\n    const customer = await this.ensureStripeCustomerId(userId);\n    const origin = await this.getFrontendUrl();\n    const portal = await stripe.billingPortal.sessions.create({\n      customer,\n      return_url: `${origin}/settings?tab=billing`,\n    });\n    return { url: portal.url };\n  }\n\n  // --- Stripe Connect for user invoice payments ---\n  async createOrGetConnectAccount(userId: string) {\n    const stripe = await this.getStripe();\n    const user = await this.prisma.user.findUnique({ where: { id: userId } });\n    if (!user) throw new NotFoundException('User not found');\n    if ((user as any).stripeConnectAccountId)\n      return (user as any).stripeConnectAccountId;\n    const account = await stripe.accounts.create({\n      type: 'express',\n      country: 'US',\n      email: user.companyEmail || user.email,\n      business_type: 'individual',\n      metadata: { userId },\n    });\n    const prismaAny = this.prisma as any;\n    await prismaAny.user.update({\n      where: { id: userId },\n      data: { stripeConnectAccountId: account.id },\n    });\n    return account.id;\n  }\n\n  async createConnectOnboardingLink(userId: string) {\n    const stripe = await this.getStripe();\n    const accountId = await this.createOrGetConnectAccount(userId);\n    const origin = await this.getFrontendUrl();\n    const link = await stripe.accountLinks.create({\n      account: accountId,\n      refresh_url: `${origin}/settings?tab=billing&connect=refresh`,\n      return_url: `${origin}/settings?tab=billing&connect=return`,\n      type: 'account_onboarding',\n    });\n    return { url: link.url };\n  }\n\n  async getConnectStatus(userId: string) {\n    const stripe = await this.getStripe();\n    const user = await this.prisma.user.findUnique({ where: { id: userId } });\n    if (!user) throw new NotFoundException('User not found');\n    if (!(user as any).stripeConnectAccountId) return { connected: false };\n    const acct = await stripe.accounts.retrieve(\n      (user as any).stripeConnectAccountId,\n    );\n    const detailsSubmitted = (acct as any)?.details_submitted || false;\n    const chargesEnabled = (acct as any)?.charges_enabled || false;\n    return {\n      connected: !!(user as any).stripeConnectAccountId,\n      detailsSubmitted,\n      chargesEnabled,\n    };\n  }\n\n  // Create a Checkout session for paying an invoice by shareId using destination charges to a user's connected account\n  async createInvoiceCheckoutByShareId(shareId: string) {\n    const invoice = await this.prisma.invoice.findFirst({\n      where: { shareId, shareEnabled: true },\n      include: { user: true, client: true },\n    });\n    if (!invoice) throw new NotFoundException('Invoice not found');\n    const amountDue = Math.max(\n      0,\n      Math.round((invoice.balanceDue || invoice.totalAmount) * 100),\n    ); // in cents\n    if (amountDue <= 0)\n      throw new BadRequestException('Invoice has no balance due');\n\n    const currency = (invoice.currency || 'USD').toLowerCase();\n    const stripe = await this.getStripe();\n\n    const platformFeeBpsRow = await this.prisma.systemSettings.findUnique({\n      where: { key: 'STRIPE_PLATFORM_FEE_BPS' },\n    });\n    const feeBps = Number(platformFeeBpsRow?.value || 0);\n    const application_fee_amount = Math.floor(\n      (amountDue * Math.max(0, Math.min(10000, feeBps))) / 10000,\n    );\n\n    // Enforce that the invoice owner's Stripe Connect account is set up\n    const destination = (invoice.user as any).stripeConnectAccountId;\n    if (!destination) {\n      throw new BadRequestException(\n        'Payment is not available yet. The seller has not connected Stripe. Please contact them to set up payments.',\n      );\n    }\n    // Verify charges are enabled on the connected account\n    try {\n      const acct = await stripe.accounts.retrieve(destination);\n      const chargesEnabled = (acct as any)?.charges_enabled;\n      if (!chargesEnabled) {\n        throw new BadRequestException(\n          'Payment is not available yet. The seller’s Stripe account is not fully enabled for charges.',\n        );\n      }\n    } catch (e) {\n      if (e instanceof BadRequestException) throw e;\n      throw new BadRequestException(\n        'Unable to verify seller’s Stripe account. Please try again later.',\n      );\n    }\n\n    const origin = await this.getFrontendUrl();\n    const session = await stripe.checkout.sessions.create({\n      mode: 'payment',\n      line_items: [\n        {\n          price_data: {\n            currency,\n            product_data: {\n              name: `Invoice ${invoice.invoiceNumber}`,\n              description: invoice.client?.name\n                ? `Client: ${invoice.client.name}`\n                : undefined,\n            },\n            unit_amount: amountDue,\n          },\n          quantity: 1,\n        },\n      ],\n      customer_email: invoice.client?.email || undefined,\n      success_url: `${origin}/public/invoices/${encodeURIComponent(shareId)}?paid=1`,\n      cancel_url: `${origin}/public/invoices/${encodeURIComponent(shareId)}?canceled=1`,\n      metadata: {\n        type: 'invoice_payment',\n        invoiceId: invoice.id,\n        userId: invoice.userId,\n        shareId,\n      },\n      payment_intent_data: {\n        transfer_data: { destination },\n        application_fee_amount,\n      },\n    });\n\n    return { url: session.url };\n  }\n\n  // --- Webhook handling ---\n  async handleWebhook(rawBody: Buffer, signature: string | undefined) {\n    const map = await readSettings(this.prisma, [\n      'STRIPE_SECRET_KEY',\n      'STRIPE_WEBHOOK_SECRET',\n      'STRIPE_PRICE_BASIC',\n      'STRIPE_PRICE_PREMIUM',\n    ]);\n    const sk = String(map.get('STRIPE_SECRET_KEY') || '');\n    const wh = String(map.get('STRIPE_WEBHOOK_SECRET') || '');\n    if (!sk || !wh) throw new BadRequestException('Stripe is not configured');\n    const stripe = new Stripe(sk, { apiVersion: '2024-11-20.acacia' as any });\n\n    let event: Stripe.Event;\n    try {\n      event = stripe.webhooks.constructEvent(rawBody, signature || '', wh);\n    } catch (err: any) {\n      throw new BadRequestException(\n        `Webhook signature verification failed: ${err?.message || err}`,\n      );\n    }\n\n    switch (event.type) {\n      case 'checkout.session.completed': {\n        const session = event.data.object;\n        const type = (session.metadata as any)?.type;\n        if (type === 'invoice_payment') {\n          await this.onInvoicePaymentSessionCompleted(session);\n        } else if (type === 'subscription') {\n          await this.onSubscriptionSessionCompleted(session);\n        }\n        break;\n      }\n      case 'customer.subscription.deleted': {\n        const sub = event.data.object;\n        const customerId =\n          typeof sub.customer === 'string' ? sub.customer : sub.customer?.id;\n        if (customerId) await this.onSubscriptionCanceled(customerId);\n        break;\n      }\n      default:\n        // noop\n        break;\n    }\n\n    return { received: true };\n  }\n\n  private async onInvoicePaymentSessionCompleted(\n    session: Stripe.Checkout.Session,\n  ) {\n    const invoiceId = (session.metadata as any)?.invoiceId;\n    const userId = (session.metadata as any)?.userId;\n    if (!invoiceId || !userId) return;\n    const invoice = await this.prisma.invoice.findUnique({\n      where: { id: invoiceId },\n      include: { payments: true, client: true, user: true },\n    });\n    if (!invoice) return;\n\n    const paidCents = session.amount_total || 0;\n    const paid = Math.max(0, paidCents / 100);\n\n    // Create a payment record\n    await this.prisma.payment.create({\n      data: {\n        invoiceId: invoice.id,\n        amount: paid,\n        paymentMethod: 'STRIPE' as any,\n        paymentDate: new Date(),\n        transactionId: String(session.payment_intent || session.id),\n        status: 'COMPLETED' as any,\n        notes: 'Stripe Checkout payment',\n        paymentNumber: `PMT-${Date.now()}`,\n        netAmount: paid,\n      },\n    });\n\n    // Update invoice totals and status\n    const newTotalPaid =\n      (invoice.payments || [])\n        .filter((p) => p.status === 'COMPLETED')\n        .reduce((s, p) => s + p.amount, 0) + paid;\n\n    const fullyPaid = newTotalPaid >= invoice.totalAmount - 0.0001;\n    await this.prisma.invoice.update({\n      where: { id: invoice.id },\n      data: {\n        status: fullyPaid ? ('PAID' as any) : ('PARTIALLY_PAID' as any),\n        paidAmount: newTotalPaid,\n        balanceDue: Math.max(0, invoice.totalAmount - newTotalPaid),\n        paidAt: fullyPaid ? new Date() : invoice.paidAt,\n      },\n    });\n\n    await this.prisma.invoiceHistory.create({\n      data: {\n        invoiceId: invoice.id,\n        action: 'PAYMENT_RECEIVED' as any,\n        description: `Stripe payment of ${paid.toFixed(2)} received via Checkout`,\n        performedBy: userId,\n      },\n    });\n\n    // Send emails (respect preferences)\n    try {\n      if (\n        invoice.user?.emailNotificationsEnabled &&\n        invoice.user?.emailNotifyPaymentReceived\n      ) {\n        await this.emailService.sendPaymentReceivedEmail(\n          invoice.user as any,\n          invoice.client as any,\n          invoice as any,\n          paid,\n        );\n      }\n      if (invoice.user?.emailNotificationsEnabled) {\n        const updatedBalance = Math.max(\n          0,\n          (invoice.totalAmount || 0) - ((invoice.paidAmount || 0) + paid),\n        );\n        await this.emailService.sendClientPaymentReceiptEmail(\n          invoice.client as any,\n          {\n            ...invoice,\n            paidAmount: (invoice.paidAmount || 0) + paid,\n            balanceDue: updatedBalance,\n          } as any,\n          paid,\n          invoice.user as any,\n        );\n      }\n    } catch (e) {\n      console.error(\n        'Failed to send payment email after Stripe payment:',\n        e?.message || e,\n      );\n    }\n  }\n\n  private async onSubscriptionSessionCompleted(\n    session: Stripe.Checkout.Session,\n  ) {\n    const userId = (session.metadata as any)?.userId;\n    const plan = (session.metadata as any)?.plan as 'BASIC' | 'PREMIUM';\n    if (!userId || !plan) return;\n\n    // Retrieve the subscription to get current period end\n    const stripe = await this.getStripe();\n    const subscriptionId =\n      typeof session.subscription === 'string'\n        ? session.subscription\n        : (session.subscription as any)?.id;\n    let periodEnd: Date | null = null;\n    if (subscriptionId) {\n      const sub = await stripe.subscriptions.retrieve(subscriptionId);\n      const endTs = sub.current_period_end || 0;\n      periodEnd = endTs ? new Date(endTs * 1000) : null;\n    }\n\n    const invoiceLimit = plan === 'BASIC' ? 50 : 0;\n    await this.prisma.user.update({\n      where: { id: userId },\n      data: {\n        subscriptionPlan: plan as any,\n        subscriptionEnd: periodEnd,\n        invoiceLimit,\n      },\n    });\n  }\n\n  private async onSubscriptionCanceled(customerId: string) {\n    const prismaAny = this.prisma as any;\n    const user = await prismaAny.user.findFirst({\n      where: { stripeCustomerId: customerId },\n    });\n    if (!user) return;\n    await prismaAny.user.update({\n      where: { id: user.id },\n      data: {\n        subscriptionPlan: 'FREE' as any,\n        subscriptionEnd: null,\n        invoiceLimit: 5,\n      },\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\public-config\\public-config.controller.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\public-config\\public-config.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\recurring-invoices\\dto\\create-recurring-invoice.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\recurring-invoices\\dto\\update-recurring-invoice.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\recurring-invoices\\recurring-invoices.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":27,"column":32,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":27,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":27,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":27,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":40,"column":33,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":40,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":40,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":40,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":51,"column":37,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":51,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":51,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":51,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":60,"column":36,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":60,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":60,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":60,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":65,"column":36,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":65,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":65,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":65,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":70,"column":35,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":70,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":70,"column":40,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":70,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":75,"column":36,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":75,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":75,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":75,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":80,"column":36,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":80,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":80,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":80,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":85,"column":36,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":85,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":85,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":85,"endColumn":43}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  ParseEnumPipe,\n  UseGuards,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport { RecurringInvoicesService } from './recurring-invoices.service';\nimport { CreateRecurringInvoiceDto } from './dto/create-recurring-invoice.dto';\nimport { UpdateRecurringInvoiceDto } from './dto/update-recurring-invoice.dto';\nimport { RecurringStatus } from '../../common/enums';\n\n@UseGuards(JwtAuthGuard)\n@Controller('recurring-invoices')\nexport class RecurringInvoicesController {\n  constructor(private readonly service: RecurringInvoicesService) {}\n\n  @Post()\n  create(@CurrentUser() user, @Body() dto: CreateRecurringInvoiceDto) {\n    return this.service.create(user.id, dto);\n  }\n\n  @Get()\n  findAll(\n    @CurrentUser() user,\n    @Query('status', new ParseEnumPipe(RecurringStatus, { optional: true }))\n    status?: RecurringStatus,\n    @Query('clientId') clientId?: string,\n    @Query('search') search?: string,\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n  ) {\n    return this.service.findAll(user.id, {\n      status,\n      clientId,\n      search,\n      page: page ? parseInt(page, 10) : undefined,\n      limit: limit ? parseInt(limit, 10) : undefined,\n    });\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @CurrentUser() user) {\n    return this.service.findOne(id, user.id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @CurrentUser() user,\n    @Body() dto: UpdateRecurringInvoiceDto,\n  ) {\n    return this.service.update(id, user.id, dto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @CurrentUser() user) {\n    return this.service.remove(id, user.id);\n  }\n\n  @Post(':id/pause')\n  pause(@Param('id') id: string, @CurrentUser() user) {\n    return this.service.pause(id, user.id);\n  }\n\n  @Post(':id/resume')\n  resume(@Param('id') id: string, @CurrentUser() user) {\n    return this.service.resume(id, user.id);\n  }\n\n  @Post(':id/cancel')\n  cancel(@Param('id') id: string, @CurrentUser() user) {\n    return this.service.cancel(id, user.id);\n  }\n\n  @Post(':id/run-now')\n  runNow(@Param('id') id: string, @CurrentUser() user) {\n    return this.service.runNow(id, user.id);\n  }\n\n  // Optional admin/utility endpoint to trigger processing manually\n  @Post('process-due')\n  processDue() {\n    return this.service.processDue();\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\recurring-invoices\\recurring-invoices.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\recurring-invoices\\recurring-invoices.scheduler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\recurring-invoices\\recurring-invoices.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .status on an `any` value.","line":91,"column":15,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":91,"endColumn":21},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .clientId on an `any` value.","line":93,"column":34,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":93,"endColumn":42},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .OR on an `any` value.","line":95,"column":15,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":95,"endColumn":17},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":117,"column":46,"nodeType":"Property","messageId":"anyAssignment","endLine":117,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":119,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":119,"endColumn":16},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":159,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":159,"endColumn":43},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'updated' is assigned a value but never used.","line":161,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":161,"endColumn":18},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":163,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":163,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":168,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":168,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":173,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":182,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":173,"column":15,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":173,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":173,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":173,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":175,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":175,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .description on an `any` value.","line":175,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":175,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":176,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":176,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .quantity on an `any` value.","line":176,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":176,"endColumn":32},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":177,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":177,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rate on an `any` value.","line":177,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":177,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":178,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":178,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .unit on an `any` value.","line":178,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":178,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":179,"column":11,"nodeType":"Property","messageId":"anyAssignment","endLine":179,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .taxable on an `any` value.","line":179,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":179,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .quantity on an `any` value.","line":180,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .rate on an `any` value.","line":180,"column":36,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":40}],"suppressedMessages":[],"errorCount":24,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  BadRequestException,\n  NotFoundException,\n  Logger,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { CreateRecurringInvoiceDto } from './dto/create-recurring-invoice.dto';\nimport { UpdateRecurringInvoiceDto } from './dto/update-recurring-invoice.dto';\nimport {\n  DiscountType,\n  HistoryAction,\n  InvoiceStatus,\n  Plan,\n  RecurrenceFrequency,\n  RecurringStatus,\n} from '../../common/enums';\nimport { InvoicesService } from '../invoices/invoices.service';\n\n@Injectable()\nexport class RecurringInvoicesService {\n  private readonly logger = new Logger(RecurringInvoicesService.name);\n\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly invoicesService: InvoicesService,\n  ) {}\n\n  async create(userId: string, dto: CreateRecurringInvoiceDto) {\n    // Validate items\n    if (!dto.items || dto.items.length === 0) {\n      throw new BadRequestException('At least one item is required');\n    }\n\n    const startDate = dto.startDate ? new Date(dto.startDate) : new Date();\n\n    const created = await this.prisma.recurringInvoice.create({\n      data: {\n        userId,\n        clientId: dto.clientId,\n        taxRate: dto.taxRate ?? 0,\n        discount: dto.discount ?? 0,\n        discountType: dto.discountType ?? DiscountType.FIXED,\n        currency: dto.currency ?? 'USD',\n        notes: dto.notes,\n        terms: dto.terms,\n        footer: dto.footer,\n        dueInDays: dto.dueInDays ?? null,\n        frequency: dto.frequency,\n        interval: dto.interval ?? 1,\n        startDate,\n        endDate: dto.endDate ?? null,\n        nextRunAt: startDate,\n        maxOccurrences: dto.maxOccurrences ?? null,\n        status: RecurringStatus.ACTIVE,\n        autoSend: dto.autoSend ?? false,\n        items: {\n          create: dto.items.map((it, idx) => ({\n            description: it.description,\n            quantity: it.quantity,\n            rate: it.rate,\n            unit: it.unit ?? 'unit',\n            taxable: it.taxable ?? true,\n            amount: it.quantity * it.rate,\n            order: idx,\n          })),\n        },\n      },\n      include: { items: true },\n    });\n\n    return created;\n  }\n\n  async findAll(\n    userId: string,\n    query?: {\n      status?: RecurringStatus;\n      clientId?: string;\n      search?: string; // by client name\n      page?: number;\n      limit?: number;\n    },\n  ) {\n    try {\n      const where: any = { userId };\n      if (query?.status) {\n        if (!Object.values(RecurringStatus).includes(query.status)) {\n          throw new BadRequestException('Invalid status');\n        }\n        where.status = query.status;\n      }\n      if (query?.clientId) where.clientId = query.clientId;\n      if (query?.search) {\n        where.OR = [\n          {\n            client: {\n              is: { name: { contains: query.search, mode: 'insensitive' } },\n            },\n          },\n          { notes: { contains: query.search, mode: 'insensitive' } },\n          { terms: { contains: query.search, mode: 'insensitive' } },\n          { footer: { contains: query.search, mode: 'insensitive' } },\n        ];\n      }\n\n      const rawPage = Number(query?.page);\n      const rawLimit = Number(query?.limit);\n      const page =\n        Number.isFinite(rawPage) && rawPage > 0 ? Math.floor(rawPage) : 1;\n      const limit =\n        Number.isFinite(rawLimit) && rawLimit > 0\n          ? Math.min(100, Math.floor(rawLimit))\n          : 10;\n\n      const [total, items] = await Promise.all([\n        this.prisma.recurringInvoice.count({ where }),\n        this.prisma.recurringInvoice.findMany({\n          where,\n          include: { client: true, items: true },\n          orderBy: { createdAt: 'desc' },\n          skip: (page - 1) * limit,\n          take: limit,\n        }),\n      ]);\n\n      return {\n        items,\n        total,\n        page,\n        limit,\n        totalPages: Math.ceil(total / limit),\n      };\n    } catch (e) {\n      this.logger.error('Failed to fetch recurring invoices', e);\n      throw e instanceof BadRequestException\n        ? e\n        : new BadRequestException('Failed to fetch recurring invoices');\n    }\n  }\n\n  async findOne(id: string, userId: string) {\n    const rec = await this.prisma.recurringInvoice.findFirst({\n      where: { id, userId },\n      include: { client: true, items: true },\n    });\n    if (!rec) throw new NotFoundException('Recurring invoice not found');\n    return rec;\n  }\n\n  async update(id: string, userId: string, dto: UpdateRecurringInvoiceDto) {\n    const exists = await this.prisma.recurringInvoice.findFirst({\n      where: { id, userId },\n    });\n    if (!exists) throw new NotFoundException('Recurring invoice not found');\n\n    const data: any = { ...dto };\n    // Normalize fields not in schema\n    if ('items' in data) delete data.items;\n\n    const updated = await this.prisma.recurringInvoice.update({\n      where: { id },\n      data,\n      include: { client: true, items: true },\n    });\n\n    // Replace items if provided\n    if ((dto as any).items) {\n      await this.prisma.recurringInvoiceItem.deleteMany({\n        where: { recurringInvoiceId: id },\n      });\n      await this.prisma.recurringInvoiceItem.createMany({\n        data: (dto as any).items.map((it: any, idx: number) => ({\n          recurringInvoiceId: id,\n          description: it.description,\n          quantity: it.quantity,\n          rate: it.rate,\n          unit: it.unit ?? 'unit',\n          taxable: it.taxable ?? true,\n          amount: it.quantity * it.rate,\n          order: idx,\n        })),\n      });\n    }\n\n    return this.findOne(id, userId);\n  }\n\n  async remove(id: string, userId: string) {\n    const exists = await this.prisma.recurringInvoice.findFirst({\n      where: { id, userId },\n    });\n    if (!exists) throw new NotFoundException('Recurring invoice not found');\n    await this.prisma.recurringInvoice.delete({ where: { id } });\n    return { message: 'Recurring invoice deleted successfully' };\n  }\n\n  async pause(id: string, userId: string) {\n    return this.setStatus(id, userId, RecurringStatus.PAUSED);\n  }\n\n  async resume(id: string, userId: string) {\n    return this.setStatus(id, userId, RecurringStatus.ACTIVE);\n  }\n\n  async cancel(id: string, userId: string) {\n    return this.setStatus(id, userId, RecurringStatus.CANCELLED);\n  }\n\n  private async setStatus(id: string, userId: string, status: RecurringStatus) {\n    const rec = await this.prisma.recurringInvoice.findFirst({\n      where: { id, userId },\n    });\n    if (!rec) throw new NotFoundException('Recurring invoice not found');\n    const updated = await this.prisma.recurringInvoice.update({\n      where: { id },\n      data: { status },\n    });\n    return updated;\n  }\n\n  async runNow(id: string, userId: string) {\n    const rec = await this.prisma.recurringInvoice.findFirst({\n      where: { id, userId },\n      include: { items: true, user: true, client: true },\n    });\n    if (!rec) throw new NotFoundException('Recurring invoice not found');\n    if (rec.status !== RecurringStatus.ACTIVE) {\n      throw new BadRequestException('Recurring invoice is not active');\n    }\n    const now = new Date();\n    // If endDate is set and passed, do not run\n    if (rec.endDate && now > rec.endDate) {\n      throw new BadRequestException('End date reached');\n    }\n    return this.generateFor(rec.id);\n  }\n\n  async processDue(now = new Date()) {\n    // Find due recurring invoices\n    const due = await this.prisma.recurringInvoice.findMany({\n      where: {\n        status: RecurringStatus.ACTIVE,\n        nextRunAt: { lte: now },\n        AND: [{ OR: [{ endDate: null }, { endDate: { gte: now } }] }],\n      },\n      include: { items: true, user: true, client: true },\n      orderBy: { nextRunAt: 'asc' },\n    });\n\n    for (const rec of due) {\n      try {\n        await this.generateFor(rec.id);\n      } catch (e) {\n        this.logger.error(`Failed processing recurring invoice ${rec.id}`, e);\n      }\n    }\n\n    return { processed: due.length };\n  }\n\n  private computeNextRun(\n    currentNext: Date,\n    frequency: RecurrenceFrequency,\n    interval: number,\n  ): Date {\n    const next = new Date(currentNext);\n    switch (frequency) {\n      case RecurrenceFrequency.DAILY:\n        next.setDate(next.getDate() + interval);\n        break;\n      case RecurrenceFrequency.WEEKLY:\n        next.setDate(next.getDate() + 7 * interval);\n        break;\n      case RecurrenceFrequency.MONTHLY: {\n        const originalDay = next.getDate();\n        // Move to first day of target month to avoid overflow issues\n        next.setDate(1);\n        next.setMonth(next.getMonth() + interval);\n        // Clamp to last day of target month if original day exceeds it\n        const lastDayOfTargetMonth = new Date(\n          next.getFullYear(),\n          next.getMonth() + 1,\n          0,\n        ).getDate();\n        next.setDate(Math.min(originalDay, lastDayOfTargetMonth));\n        break;\n      }\n      case RecurrenceFrequency.YEARLY:\n        next.setFullYear(next.getFullYear() + interval);\n        break;\n      default:\n        next.setDate(next.getDate() + interval);\n    }\n    return next;\n  }\n\n  private addDays(date: Date, days: number) {\n    const d = new Date(date);\n    d.setDate(d.getDate() + days);\n    return d;\n  }\n\n  async generateFor(recurringId: string) {\n    const now = new Date();\n\n    // Use a transaction to guard against race conditions and enforce plan limits and numbering\n    const result = await this.prisma.$transaction(async (tx) => {\n      const rec = await tx.recurringInvoice.findUnique({\n        where: { id: recurringId },\n        include: { items: true, user: true, client: true },\n      });\n      if (!rec) throw new NotFoundException('Recurring invoice not found');\n      if (rec.status !== RecurringStatus.ACTIVE)\n        throw new BadRequestException('Recurring invoice is not active');\n      if (rec.endDate && now > rec.endDate)\n        throw new BadRequestException('End date reached');\n      if (rec.maxOccurrences && rec.occurrencesCount >= rec.maxOccurrences) {\n        throw new BadRequestException('Max occurrences reached');\n      }\n      if (rec.nextRunAt > now) {\n        throw new BadRequestException('Not due yet');\n      }\n\n      // Enforce plan invoice limits before creating\n      const user = await tx.user.findUnique({\n        where: { id: rec.userId },\n        select: {\n          subscriptionPlan: true,\n          invoiceLimit: true,\n          paymentTerms: true,\n          invoicePrefix: true,\n          invoiceStartNumber: true,\n        },\n      });\n\n      if (user && user.subscriptionPlan !== Plan.ENTERPRISE) {\n        if (typeof user.invoiceLimit === 'number' && user.invoiceLimit > 0) {\n          const currentCount = await tx.invoice.count({\n            where: {\n              userId: rec.userId,\n              status: { not: InvoiceStatus.CANCELLED },\n            },\n          });\n          if (currentCount >= user.invoiceLimit) {\n            throw new BadRequestException(\n              'Invoice limit reached for your plan',\n            );\n          }\n        }\n      }\n\n      // Compute amounts\n      let subtotal = 0;\n      const items = rec.items.map((it) => {\n        const amount = it.quantity * it.rate;\n        subtotal += amount;\n        return {\n          description: it.description,\n          quantity: it.quantity,\n          rate: it.rate,\n          amount,\n        };\n      });\n      const taxAmount = rec.taxRate ? (subtotal * rec.taxRate) / 100 : 0;\n      const discountAmount = rec.discount\n        ? rec.discountType === DiscountType.PERCENTAGE\n          ? (subtotal * rec.discount) / 100\n          : rec.discount\n        : 0;\n      const totalAmount = subtotal + taxAmount - discountAmount;\n\n      // Compute dates\n      const invoiceDate = now;\n      const dueDays = rec.dueInDays ?? user?.paymentTerms ?? 30;\n      const dueDate = this.addDays(invoiceDate, dueDays);\n\n      // Atomically increment and compute invoice number\n      const updatedUser = await tx.user.update({\n        where: { id: rec.userId },\n        data: { invoiceStartNumber: { increment: 1 } },\n        select: { invoicePrefix: true, invoiceStartNumber: true },\n      });\n      const usedNumber = (updatedUser.invoiceStartNumber || 1) - 1;\n      const invoiceNumber = `${updatedUser.invoicePrefix || 'INV'}-${String(usedNumber).padStart(5, '0')}`;\n\n      const createdInvoice = await tx.invoice.create({\n        data: {\n          userId: rec.userId,\n          clientId: rec.clientId,\n          invoiceNumber,\n          invoiceDate,\n          dueDate,\n          status: InvoiceStatus.DRAFT,\n          subtotal,\n          taxRate: rec.taxRate || 0,\n          taxAmount,\n          discount: rec.discount || 0,\n          discountType: rec.discountType || DiscountType.FIXED,\n          totalAmount,\n          balanceDue: totalAmount,\n          currency: rec.currency || 'USD',\n          notes: rec.notes ?? undefined,\n          terms: rec.terms ?? undefined,\n          footer: rec.footer ?? undefined,\n          items: { create: items },\n        },\n        include: { client: true, items: true },\n      });\n\n      await tx.invoiceHistory.create({\n        data: {\n          invoiceId: createdInvoice.id,\n          action: HistoryAction.CREATED,\n          description: `Invoice ${createdInvoice.invoiceNumber} created from recurring template ${rec.id}`,\n          performedBy: null,\n        },\n      });\n\n      // Advance schedule\n      const next = this.computeNextRun(\n        rec.nextRunAt,\n        rec.frequency,\n        rec.interval || 1,\n      );\n      const occurrencesCount = (rec.occurrencesCount ?? 0) + 1;\n\n      // Determine new status after increment\n      let newStatus: RecurringStatus = RecurringStatus.ACTIVE;\n      const nextRunAt = next;\n      if (\n        (rec.maxOccurrences && occurrencesCount >= rec.maxOccurrences) ||\n        (rec.endDate && next > rec.endDate)\n      ) {\n        newStatus = RecurringStatus.CANCELLED;\n        // Keep nextRunAt as computed but status prevents future runs\n      }\n\n      await tx.recurringInvoice.update({\n        where: { id: rec.id },\n        data: {\n          lastRunAt: now,\n          nextRunAt,\n          occurrencesCount,\n          status: newStatus,\n        },\n      });\n\n      return { createdInvoice, template: rec };\n    });\n\n    // Auto-send if enabled\n    try {\n      if (result.template.autoSend) {\n        await this.invoicesService.sendInvoice(\n          result.createdInvoice.id,\n          result.createdInvoice.userId,\n        );\n      }\n    } catch (e) {\n      this.logger.error(\n        `Auto-send failed for invoice ${result.createdInvoice.id}`,\n        e,\n      );\n      // continue without throwing\n    }\n\n    return result.createdInvoice;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\users\\dto\\update-user.dto.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Min' is defined but never used.","line":7,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":6},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'IsEnum' is defined but never used.","line":8,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":9}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsBoolean,\n  IsNumber,\n  Min,\n  IsEnum,\n  IsNotEmpty,\n  MinLength,\n} from 'class-validator';\n\nexport class UpdateProfileDto {\n  @IsString()\n  @IsOptional()\n  firstName?: string;\n\n  @IsString()\n  @IsOptional()\n  lastName?: string;\n\n  @IsString()\n  @IsOptional()\n  companyName?: string;\n\n  @IsString()\n  @IsOptional()\n  companyAddress?: string;\n\n  @IsString()\n  @IsOptional()\n  companyPhone?: string;\n\n  @IsEmail()\n  @IsOptional()\n  companyEmail?: string;\n\n  @IsString()\n  @IsOptional()\n  taxNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  companyLogo?: string;\n}\n\nexport class UpdateSettingsDto {\n  @IsString()\n  @IsOptional()\n  invoicePrefix?: string;\n\n  @IsNumber()\n  @IsOptional()\n  invoiceStartNumber?: number;\n\n  @IsString()\n  @IsOptional()\n  currency?: string;\n\n  @IsNumber()\n  @IsOptional()\n  taxRate?: number;\n\n  @IsNumber()\n  @IsOptional()\n  paymentTerms?: number;\n\n  @IsString()\n  @IsOptional()\n  invoiceNotes?: string;\n\n  @IsString()\n  @IsOptional()\n  invoiceFooter?: string;\n\n  // Notification preferences\n  @IsBoolean()\n  @IsOptional()\n  emailNotificationsEnabled?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  emailNotifyNewInvoice?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  emailNotifyPaymentReceived?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  emailNotifyInvoiceOverdue?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  emailNotifyWeeklySummary?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  emailNotifyNewClientAdded?: boolean;\n}\n\nexport class ChangePasswordDto {\n  @IsString()\n  @IsNotEmpty()\n  currentPassword: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  newPassword: string;\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\users\\users.controller.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Patch' is defined but never used.","line":6,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":8},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Param' is defined but never used.","line":7,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":8},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Query' is defined but never used.","line":10,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":8},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":36,"column":41,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":36,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":36,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":36,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":44,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":44,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":44,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":44,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":49,"column":42,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":49,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":49,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":49,"endColumn":49},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":57,"column":45,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":57,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":57,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":57,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":65,"column":45,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":65,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":65,"column":50,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":65,"endColumn":52},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":70,"column":44,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":70,"endColumn":51},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":70,"column":49,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":70,"endColumn":51},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":19,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":21,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2104,2104],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":101,"column":41,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":101,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":101,"column":46,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":101,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":111,"column":46,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":111,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":111,"column":51,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":111,"endColumn":53},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `string`.","line":116,"column":50,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":116,"endColumn":57},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .id on an `any` value.","line":116,"column":55,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":116,"endColumn":57}],"suppressedMessages":[],"errorCount":13,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  Put,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UsersService } from './users.service';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { EmailVerifiedGuard } from '../auth/guards/email-verified.guard';\nimport { CurrentUser } from '../../common/decorators/current-user.decorator';\nimport {\n  UpdateProfileDto,\n  UpdateSettingsDto,\n  ChangePasswordDto,\n} from './dto/update-user.dto';\nimport { diskStorage } from 'multer';\nimport { extname, join } from 'path';\nimport * as fs from 'fs';\n\n@Controller('users')\n@UseGuards(JwtAuthGuard, EmailVerifiedGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get('profile')\n  async getProfile(@CurrentUser() user) {\n    return this.usersService.getProfile(user.id);\n  }\n\n  @Put('profile')\n  async updateProfile(\n    @CurrentUser() user,\n    @Body() updateProfileDto: UpdateProfileDto,\n  ) {\n    return this.usersService.updateProfile(user.id, updateProfileDto);\n  }\n\n  @Get('settings')\n  async getSettings(@CurrentUser() user) {\n    return this.usersService.getSettings(user.id);\n  }\n\n  @Put('settings')\n  async updateSettings(\n    @CurrentUser() user,\n    @Body() updateSettingsDto: UpdateSettingsDto,\n  ) {\n    return this.usersService.updateSettings(user.id, updateSettingsDto);\n  }\n\n  @Put('password')\n  async changePassword(\n    @CurrentUser() user,\n    @Body() changePasswordDto: ChangePasswordDto,\n  ) {\n    return this.usersService.changePassword(user.id, changePasswordDto);\n  }\n\n  @Delete('account')\n  async deleteAccount(@CurrentUser() user) {\n    return this.usersService.deleteAccount(user.id);\n  }\n\n  @Post('upload-logo')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: (_req, _file, cb) => {\n          const dir = join(process.cwd(), 'uploads', 'logos');\n          try {\n            fs.mkdirSync(dir, { recursive: true });\n          } catch {}\n          cb(null, dir);\n        },\n        filename: (_req, file, cb) => {\n          const unique = Date.now() + '-' + Math.round(Math.random() * 1e9);\n          const extension = extname(file.originalname) || '';\n          cb(null, `logo-${unique}${extension}`);\n        },\n      }),\n    }),\n  )\n  async uploadLogo(\n    @CurrentUser() user,\n    @UploadedFile() file: Express.Multer.File,\n  ) {\n    if (!file) {\n      return { message: 'No file uploaded' };\n    }\n    // File saved by Multer to /uploads/logos with generated filename\n    const logoUrl = `/uploads/logos/${file.filename}`;\n    return this.usersService.uploadLogo(user.id, logoUrl);\n  }\n\n  // Mock billing endpoints (no real payment integration)\n  @Post('upgrade-mock')\n  async upgradeMock(\n    @CurrentUser() user,\n    @Body() body: { plan?: 'BASIC' | 'PREMIUM' },\n  ) {\n    const plan = body?.plan === 'BASIC' ? 'BASIC' : 'PREMIUM';\n    return this.usersService.upgradePlanMock(user.id, plan);\n  }\n\n  @Post('downgrade-mock')\n  async downgradeMock(@CurrentUser() user) {\n    return this.usersService.downgradeToFreeMock(user.id);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\users\\users.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\modules\\users\\users.service.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":186,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":186,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":216,"column":67,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":216,"endColumn":74},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":233,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":233,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .message on an `any` value.","line":262,"column":16,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":262,"endColumn":23}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport {\n  UpdateProfileDto,\n  UpdateSettingsDto,\n  ChangePasswordDto,\n} from './dto/update-user.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { Plan } from '../../common/enums';\nimport { EmailService } from '../email/email.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private prisma: PrismaService,\n    private emailService: EmailService,\n  ) {}\n\n  async getProfile(userId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        email: true,\n        firstName: true,\n        lastName: true,\n        companyName: true,\n        companyLogo: true,\n        companyAddress: true,\n        companyPhone: true,\n        companyEmail: true,\n        taxNumber: true,\n        role: true,\n        emailVerified: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  async updateProfile(userId: string, updateProfileDto: UpdateProfileDto) {\n    const user = await this.prisma.user.update({\n      where: { id: userId },\n      data: updateProfileDto,\n      select: {\n        id: true,\n        email: true,\n        firstName: true,\n        lastName: true,\n        companyName: true,\n        companyLogo: true,\n        companyAddress: true,\n        companyPhone: true,\n        companyEmail: true,\n        taxNumber: true,\n      },\n    });\n\n    return user;\n  }\n\n  async getSettings(userId: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        invoicePrefix: true,\n        invoiceStartNumber: true,\n        currency: true,\n        taxRate: true,\n        paymentTerms: true,\n        invoiceNotes: true,\n        invoiceFooter: true,\n        // Notification preferences\n        emailNotificationsEnabled: true,\n        emailNotifyNewInvoice: true,\n        emailNotifyPaymentReceived: true,\n        emailNotifyInvoiceOverdue: true,\n        emailNotifyWeeklySummary: true,\n        emailNotifyNewClientAdded: true,\n        subscriptionPlan: true,\n        subscriptionEnd: true,\n        invoiceLimit: true,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  async updateSettings(userId: string, updateSettingsDto: UpdateSettingsDto) {\n    const user = await this.prisma.user.update({\n      where: { id: userId },\n      data: updateSettingsDto,\n      select: {\n        invoicePrefix: true,\n        invoiceStartNumber: true,\n        currency: true,\n        taxRate: true,\n        paymentTerms: true,\n        invoiceNotes: true,\n        invoiceFooter: true,\n        // Notification preferences\n        emailNotificationsEnabled: true,\n        emailNotifyNewInvoice: true,\n        emailNotifyPaymentReceived: true,\n        emailNotifyInvoiceOverdue: true,\n        emailNotifyWeeklySummary: true,\n        emailNotifyNewClientAdded: true,\n      },\n    });\n\n    return user;\n  }\n\n  async changePassword(userId: string, changePasswordDto: ChangePasswordDto) {\n    const user = await this.prisma.user.findUnique({\n      where: { id: userId },\n    });\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const isPasswordValid = await bcrypt.compare(\n      changePasswordDto.currentPassword,\n      user.password,\n    );\n\n    if (!isPasswordValid) {\n      throw new BadRequestException('Current password is incorrect');\n    }\n\n    const hashedPassword = await bcrypt.hash(changePasswordDto.newPassword, 10);\n\n    await this.prisma.user.update({\n      where: { id: userId },\n      data: { password: hashedPassword },\n    });\n\n    return { message: 'Password changed successfully' };\n  }\n\n  async deleteAccount(userId: string) {\n    await this.prisma.user.delete({\n      where: { id: userId },\n    });\n\n    return { message: 'Account deleted successfully' };\n  }\n\n  async uploadLogo(userId: string, logoUrl: string) {\n    const user = await this.prisma.user.update({\n      where: { id: userId },\n      data: { companyLogo: logoUrl },\n      select: {\n        companyLogo: true,\n      },\n    });\n\n    return user;\n  }\n\n  // Mock billing operations\n  async upgradePlanMock(userId: string, plan: 'BASIC' | 'PREMIUM' = 'PREMIUM') {\n    const targetPlan = plan === 'BASIC' ? Plan.BASIC : Plan.PREMIUM;\n    // 30 days from now\n    const subscriptionEnd = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);\n    const invoiceLimit = targetPlan === Plan.BASIC ? 50 : 0; // 0 means unlimited in enforcement checks\n\n    const updated = await this.prisma.user.update({\n      where: { id: userId },\n      data: {\n        subscriptionPlan: targetPlan as any,\n        subscriptionEnd,\n        invoiceLimit,\n      },\n      select: {\n        subscriptionPlan: true,\n        subscriptionEnd: true,\n        invoiceLimit: true,\n        emailNotificationsEnabled: true,\n        email: true,\n        firstName: true,\n        companyName: true,\n      },\n    });\n\n    // Fire-and-forget email notification\n    if (updated?.emailNotificationsEnabled) {\n      void (async () => {\n        try {\n          await this.emailService.sendPlanUpgradedEmail(\n            {\n              email: updated.email,\n              firstName: updated.firstName,\n              companyName: updated.companyName,\n            } as any,\n            String(updated.subscriptionPlan),\n            updated.subscriptionEnd,\n            updated.invoiceLimit,\n          );\n        } catch (e) {\n          console.error('Failed to send plan upgraded email:', e?.message || e);\n        }\n      })();\n    }\n\n    return {\n      subscriptionPlan: updated.subscriptionPlan,\n      subscriptionEnd: updated.subscriptionEnd,\n      invoiceLimit: updated.invoiceLimit,\n      message: `Upgraded to ${targetPlan} (mock)`,\n    } as const;\n  }\n\n  async downgradeToFreeMock(userId: string) {\n    const updated = await this.prisma.user.update({\n      where: { id: userId },\n      data: {\n        subscriptionPlan: Plan.FREE as any,\n        subscriptionEnd: null,\n        invoiceLimit: 5,\n      },\n      select: {\n        subscriptionPlan: true,\n        subscriptionEnd: true,\n        invoiceLimit: true,\n        emailNotificationsEnabled: true,\n        email: true,\n        firstName: true,\n        companyName: true,\n      },\n    });\n\n    if (updated?.emailNotificationsEnabled) {\n      void (async () => {\n        try {\n          await this.emailService.sendPlanDowngradedEmail(\n            {\n              email: updated.email,\n              firstName: updated.firstName,\n              companyName: updated.companyName,\n            } as any,\n            String(updated.subscriptionPlan),\n          );\n        } catch (e) {\n          console.error(\n            'Failed to send plan downgraded email:',\n            e?.message || e,\n          );\n        }\n      })();\n    }\n\n    return {\n      subscriptionPlan: updated.subscriptionPlan,\n      subscriptionEnd: updated.subscriptionEnd,\n      invoiceLimit: updated.invoiceLimit,\n      message: 'Downgraded to FREE (mock)',\n    } as const;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\prisma\\prisma.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\prisma\\prisma.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\src\\types\\iconv-lite-encodings.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\test\\app.e2e-spec.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":8,"column":1,"nodeType":"Identifier","messageId":"unsafeCall","endLine":8,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":11,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":11,"endColumn":13},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":14,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":14,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":14,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":14,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":14,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":14,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":14,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":14,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":14,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":14,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":15,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":15,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":15,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":15,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":15,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":15,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":15,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":15,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":15,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":15,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":17,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":24,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":17,"column":21,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":17,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":17,"column":21,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":17,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":17,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":17,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":17,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":17,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":41,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":41,"endColumn":5}],"suppressedMessages":[],"errorCount":18,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Test, TestingModule } from '@nestjs/testing';\nimport { INestApplication } from '@nestjs/common';\nimport request from 'supertest';\nimport { App } from 'supertest/types';\nimport { AppModule } from './../src/app.module';\nimport { PrismaService } from '../src/prisma/prisma.service';\n\ndescribe('AppController (e2e)', () => {\n  let app: INestApplication<App>;\n\n  beforeEach(async () => {\n    process.env.JWT_SECRET = process.env.JWT_SECRET || 'test_secret';\n    const prismaMock = {\n      $connect: jest.fn().mockResolvedValue(undefined),\n      $disconnect: jest.fn().mockResolvedValue(undefined),\n      user: {\n        findUnique: jest.fn().mockResolvedValue({\n          id: 'user_1',\n          email: 'e2e@example.com',\n          isActive: true,\n          role: 'USER',\n          firstName: 'E2E',\n          lastName: 'Tester',\n        }),\n      },\n    } as Partial<PrismaService> as PrismaService;\n\n    const moduleBuilder = Test.createTestingModule({\n      imports: [AppModule],\n    });\n\n    const moduleFixture: TestingModule = await moduleBuilder\n      .overrideProvider(PrismaService)\n      .useValue(prismaMock)\n      .compile();\n\n    app = moduleFixture.createNestApplication();\n    await app.init();\n  });\n\n  it('/ (GET)', () => {\n    return request(app.getHttpServer())\n      .get('/')\n      .expect(200)\n      .expect('Hello World!');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\test\\notifications.e2e-spec.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":7,"column":1,"nodeType":"Identifier","messageId":"unsafeCall","endLine":7,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":10,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":10,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":14,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":14,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":14,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":14,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":14,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":14,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":14,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":14,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":14,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":14,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":15,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":15,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":15,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":15,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":15,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":15,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":15,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":15,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":15,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":15,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":37,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":37,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":41,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":41,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `App`.","line":42,"column":19,"nodeType":"CallExpression","messageId":"unsafeArgument","endLine":42,"endColumn":38}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { INestApplication, ValidationPipe } from '@nestjs/common';\nimport { Test, TestingModule } from '@nestjs/testing';\nimport request from 'supertest';\nimport { AppModule } from '../src/app.module';\nimport { PrismaService } from '../src/prisma/prisma.service';\n\ndescribe('Notifications SSE (e2e)', () => {\n  let app: INestApplication;\n\n  beforeAll(async () => {\n    process.env.JWT_SECRET = process.env.JWT_SECRET || 'test_secret';\n\n    const prismaMock: any = {\n      $connect: jest.fn().mockResolvedValue(undefined),\n      $disconnect: jest.fn().mockResolvedValue(undefined),\n    };\n\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule],\n    })\n      .overrideProvider(PrismaService)\n      .useValue(prismaMock)\n      .compile();\n\n    app = moduleFixture.createNestApplication();\n    app.setGlobalPrefix('api');\n    app.useGlobalPipes(\n      new ValidationPipe({\n        whitelist: true,\n        transform: true,\n        transformOptions: { enableImplicitConversion: true },\n      }),\n    );\n    await app.init();\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n\n  it('GET /api/notifications/stream without token -> 401', async () => {\n    await request(app.getHttpServer())\n      .get('/api/notifications/stream')\n      .expect(401);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"D:\\Programming and Development\\Nextjs, Nestjs and Prisma\\13.Invoicy\\Invoicy\\backend\\test\\recurring-invoices.e2e-spec.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":16,"column":1,"nodeType":"Identifier","messageId":"unsafeCall","endLine":16,"endColumn":9},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":20,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":20,"endColumn":12},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":25,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":25,"endColumn":55},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":25,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":25,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":25,"column":17,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":25,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":25,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":25,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":25,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":25,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":26,"column":7,"nodeType":"Property","messageId":"anyAssignment","endLine":26,"endColumn":58},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":26,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":26,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":26,"column":20,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":26,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":26,"column":25,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":26,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":26,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":26,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":28,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":35,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":28,"column":21,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":28,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":28,"column":21,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":28,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":28,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":28,"endColumn":28},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":28,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":28,"endColumn":48},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":38,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":38,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":38,"column":16,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":38,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":38,"column":16,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":38,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":38,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":38,"endColumn":23},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":38,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":38,"endColumn":43},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":39,"column":9,"nodeType":"Property","messageId":"anyAssignment","endLine":39,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":39,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":39,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":39,"column":19,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":39,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .fn on an `error` typed value.","line":39,"column":24,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":39,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mockResolvedValue on an `error` typed value.","line":39,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":39,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":67,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":67,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":71,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":71,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `App`.","line":72,"column":31,"nodeType":"CallExpression","messageId":"unsafeArgument","endLine":72,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":77,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":77,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":77,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":77,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBeDefined on an `error` typed value.","line":77,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":77,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":78,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":78,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":78,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":78,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBe on an `error` typed value.","line":78,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":78,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":79,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":79,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":79,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":79,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":79,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":79,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":80,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":80,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":80,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":80,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .items on an `any` value.","line":80,"column":35,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":80,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toBe on an `error` typed value.","line":80,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":80,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":81,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":81,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":81,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":81,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":81,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":81,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":82,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":82,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":82,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":82,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":82,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":82,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":83,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":83,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":83,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":83,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":83,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":83,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":86,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":86,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `App`.","line":87,"column":19,"nodeType":"CallExpression","messageId":"unsafeArgument","endLine":87,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":93,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":93,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `App`.","line":94,"column":19,"nodeType":"CallExpression","messageId":"unsafeArgument","endLine":94,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":100,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":100,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `App`.","line":101,"column":19,"nodeType":"CallExpression","messageId":"unsafeArgument","endLine":101,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":107,"column":3,"nodeType":"Identifier","messageId":"unsafeCall","endLine":107,"endColumn":5},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":1,"message":"Unsafe argument of type `any` assigned to a parameter of type `App`.","line":108,"column":31,"nodeType":"CallExpression","messageId":"unsafeArgument","endLine":108,"endColumn":50},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":113,"column":5,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":113,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":113,"column":5,"nodeType":"Identifier","messageId":"unsafeCall","endLine":113,"endColumn":11},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .toHaveProperty on an `error` typed value.","line":113,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":113,"endColumn":36}],"suppressedMessages":[],"errorCount":58,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { INestApplication, ValidationPipe } from '@nestjs/common';\nimport { Test, TestingModule } from '@nestjs/testing';\nimport request from 'supertest';\nimport { JwtService } from '@nestjs/jwt';\nimport { AppModule } from '../src/app.module';\nimport { PrismaService } from '../src/prisma/prisma.service';\n\nasync function issueTestToken(\n  secret: string,\n  userId = 'user_1',\n): Promise<string> {\n  const jwt = new JwtService({ secret });\n  return jwt.signAsync({ sub: userId, email: 'e2e@example.com' });\n}\n\ndescribe('Recurring Invoices - Status Filter (e2e)', () => {\n  let app: INestApplication;\n  let token: string;\n\n  beforeAll(async () => {\n    // Ensure JWT secret for strategy\n    process.env.JWT_SECRET = process.env.JWT_SECRET || 'test_secret';\n\n    const prismaMock: any = {\n      $connect: jest.fn().mockResolvedValue(undefined),\n      $disconnect: jest.fn().mockResolvedValue(undefined),\n      user: {\n        findUnique: jest.fn().mockResolvedValue({\n          id: 'user_1',\n          email: 'e2e@example.com',\n          isActive: true,\n          role: 'USER',\n          firstName: 'E2E',\n          lastName: 'Tester',\n        }),\n      },\n      recurringInvoice: {\n        count: jest.fn().mockResolvedValue(0),\n        findMany: jest.fn().mockResolvedValue([]),\n      },\n    };\n\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule],\n    })\n      .overrideProvider(PrismaService)\n      .useValue(prismaMock)\n      .compile();\n\n    app = moduleFixture.createNestApplication();\n\n    // Mirror main.ts configuration relevant to tests\n    app.setGlobalPrefix('api');\n    app.useGlobalPipes(\n      new ValidationPipe({\n        whitelist: true,\n        transform: true,\n        transformOptions: { enableImplicitConversion: true },\n      }),\n    );\n\n    await app.init();\n\n    token = await issueTestToken(process.env.JWT_SECRET, 'user_1');\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n\n  it('GET /api/recurring-invoices (no status) -> 200 OK with paginated shape', async () => {\n    const res = await request(app.getHttpServer())\n      .get('/api/recurring-invoices')\n      .set('Authorization', `Bearer ${token}`)\n      .expect(200);\n\n    expect(res.body).toBeDefined();\n    expect(typeof res.body).toBe('object');\n    expect(res.body).toHaveProperty('items');\n    expect(Array.isArray(res.body.items)).toBe(true);\n    expect(res.body).toHaveProperty('total');\n    expect(res.body).toHaveProperty('page');\n    expect(res.body).toHaveProperty('limit');\n  });\n\n  it('GET /api/recurring-invoices?status=ACTIVE -> 200 OK', async () => {\n    await request(app.getHttpServer())\n      .get('/api/recurring-invoices?status=ACTIVE')\n      .set('Authorization', `Bearer ${token}`)\n      .expect(200);\n  });\n\n  it('GET /api/recurring-invoices?status=PAUSED -> 200 OK', async () => {\n    await request(app.getHttpServer())\n      .get('/api/recurring-invoices?status=PAUSED')\n      .set('Authorization', `Bearer ${token}`)\n      .expect(200);\n  });\n\n  it('GET /api/recurring-invoices?status=CANCELLED -> 200 OK', async () => {\n    await request(app.getHttpServer())\n      .get('/api/recurring-invoices?status=CANCELLED')\n      .set('Authorization', `Bearer ${token}`)\n      .expect(200);\n  });\n\n  it('GET /api/recurring-invoices?status=INVALID -> 400 Bad Request', async () => {\n    const res = await request(app.getHttpServer())\n      .get('/api/recurring-invoices?status=INVALID')\n      .set('Authorization', `Bearer ${token}`)\n      .expect(400);\n\n    expect(res.body).toHaveProperty('message');\n  });\n});\n","usedDeprecatedRules":[]}]